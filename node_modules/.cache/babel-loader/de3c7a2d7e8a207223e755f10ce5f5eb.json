{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Pages\\\\ProfilePage.tsx\",\n    _s = $RefreshSig$();\n\nimport { GridList, GridListTile, makeStyles, Typography, Box, Divider, Button } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport AppContent from '../Content/AppContent';\nimport AppbarGeneric from '../Generics/AppbarGeneric';\nimport './ProfilePageStyles.css';\nimport { Link } from 'react-router-dom';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport UserContext from '../../Context/UserContext';\nimport PursesContext from '../../Context/PursesContext';\nimport ProfileTile from '../Tiles/ProfileTile';\nconst useStyles = makeStyles(theme => ({\n  contentList: {\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    overflowX: \"hidden\",\n    height: \"fit-content\",\n    padding: 20\n  },\n  info: {\n    padding: 25,\n    justifyContent: \"space-between\"\n  },\n  tile: {\n    border: \"1px solid black\"\n  },\n  paperTile: {\n    borderRadius: \"15px 15px 7px 7px\",\n    height: \"fit-content\",\n    width: 300,\n    backgroundColor: '#A0ABEF'\n  },\n  userStatusText: {\n    fontFamily: \"Lucida Bright\"\n  },\n  nameText: {\n    fontFamily: \"Candara\",\n    fontSize: \"inherit\",\n    fontWeight: \"inherit\"\n  },\n  profileHeader: {\n    // backgroundColor: theme.palette.primary.dark,\n    height: \"fit-content\",\n    borderRadius: \"inherit\"\n  },\n  profileHeaderText: {\n    marginTop: 25,\n    marginBottom: 10,\n    marginLeft: 15,\n    fontSize: 23,\n    fontWeight: 'bolder'\n  }\n}));\n\nconst ProfilePage = () => {\n  _s();\n\n  const userData = useContext(UserContext).userData;\n  const pursesData = useContext(PursesContext).pursesData;\n  const classes = useStyles();\n\n  if (!userData.textStatus || userData.textStatus.length == 0) {\n    userData.textStatus = \"Less I hear the less you'll say you'll find that out anyway\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppbarGeneric, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AppContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.profileHeader,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.profileHeaderText,\n            children: \"User profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GridList, {\n          cols: 2,\n          className: classes.contentList,\n          spacing: 0,\n          children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n            style: {\n              width: \"400px\",\n              height: \"700px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ProfileTile, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: \"boxAvatar\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  className: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: \"name\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.nameText,\n                  children: [userData.firstName, \" \", userData.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: \"userStatus\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.userStatusText,\n                  children: /*#__PURE__*/_jsxDEV(\"q\", {\n                    children: userData.textStatus\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: \"email\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: userData.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                className: \"email\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: userData.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                variant: \"middle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(GridList, {\n                cols: 3,\n                className: classes.info,\n                children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n                  style: {\n                    width: \"fit-content\",\n                    height: \"fit-content\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Purses:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 55\n                    }, this), userData.countPurses]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n                  style: {\n                    width: \"fit-content\",\n                    height: \"fit-content\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Notes:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 54\n                    }, this), userData.countNotes]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n                  style: {\n                    width: \"fit-content\",\n                    height: \"fit-content\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Occations:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 58\n                    }, this), userData.coutOccations]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n            style: {\n              width: \"fit-content\",\n              height: \"fit-content\",\n              padding: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(ProfileTile, {\n              maxWidth: 300,\n              children: /*#__PURE__*/_jsxDEV(GridList, {\n                cols: 1,\n                spacing: 5,\n                style: {\n                  height: \"fit-content\",\n                  width: \"fit-content\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n                  style: {\n                    height: \"fit-content\",\n                    display: 'flex',\n                    justifyContent: 'flex-end',\n                    padding: 17\n                  },\n                  className: \"tile\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    component: Link,\n                    to: \"/settings\",\n                    startIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 48\n                    }, this),\n                    children: \"Settings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n                  style: {\n                    height: 'fix-content'\n                  },\n                  children: pursesData.purses.map(({\n                    currencyCode,\n                    bill\n                  }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(GridListTile, {\n                      style: {\n                        marginBottom: 10\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"purseTile\",\n                        children: currencyCode\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          marginLeft: 10,\n                          marginTop: 8\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          children: [\"Bill: \", bill]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 45\n                    }, this)\n                  }, currencyCode, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n                  style: {\n                    height: '50px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"ANOTHER INTORMATION\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfilePage, \"l4yn9Rnzn01QQMCMOgb35CpdvVA=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Pages/ProfilePage.tsx"],"names":["GridList","GridListTile","makeStyles","Typography","Box","Divider","Button","React","useContext","AppContent","AppbarGeneric","Link","SettingsIcon","UserContext","PursesContext","ProfileTile","useStyles","theme","contentList","justifyContent","alignItems","overflowX","height","padding","info","tile","border","paperTile","borderRadius","width","backgroundColor","userStatusText","fontFamily","nameText","fontSize","fontWeight","profileHeader","profileHeaderText","marginTop","marginBottom","marginLeft","ProfilePage","userData","pursesData","classes","textStatus","length","firstName","lastName","email","username","countPurses","countNotes","coutOccations","display","purses","map","currencyCode","bill"],"mappings":"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","sourcesContent":["import { GridList, GridListTile, makeStyles, Typography, Box, Divider, Button } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport AppContent from '../Content/AppContent';\r\nimport AppbarGeneric from '../Generics/AppbarGeneric';\r\nimport './ProfilePageStyles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport UserContext from '../../Context/UserContext';\r\nimport PursesContext from '../../Context/PursesContext';\r\nimport ProfileTile from '../Tiles/ProfileTile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentList: {\r\n        justifyContent:\"center\",\r\n        alignItems:\"flex-start\",\r\n        overflowX: \"hidden\",\r\n        height: \"fit-content\",\r\n        padding: 20\r\n    },\r\n    info: {\r\n        padding:25,\r\n        justifyContent:\"space-between\", \r\n        \r\n    },\r\n    tile: {\r\n        border: \"1px solid black\"\r\n    },\r\n    paperTile: {\r\n        borderRadius: \"15px 15px 7px 7px\",\r\n        height: \"fit-content\",\r\n        width: 300,\r\n        backgroundColor: '#A0ABEF'\r\n      },\r\n      userStatusText: {\r\n          fontFamily: \"Lucida Bright\"\r\n      },\r\n      nameText: {\r\n          fontFamily: \"Candara\",\r\n          fontSize: \"inherit\",\r\n          fontWeight: \"inherit\"\r\n      },\r\n      profileHeader: {\r\n        // backgroundColor: theme.palette.primary.dark,\r\n        height:\"fit-content\", \r\n        borderRadius: \"inherit\"\r\n    },\r\n    profileHeaderText: {\r\n        marginTop: 25,\r\n        marginBottom:10,\r\n        marginLeft: 15,\r\n        fontSize: 23,\r\n        fontWeight: 'bolder'\r\n    }\r\n}));\r\n\r\nconst ProfilePage: React.FC = () => {\r\n\r\n    const userData = useContext(UserContext).userData;\r\n    const pursesData = useContext(PursesContext).pursesData;\r\n\r\n    const classes = useStyles();\r\n    if(!userData.textStatus || userData.textStatus.length == 0)\r\n    {\r\n        userData.textStatus = \"Less I hear the less you'll say you'll find that out anyway\";\r\n    }\r\n\r\n    return(\r\n        <React.Fragment> \r\n        <AppbarGeneric />\r\n            <AppContent>\r\n            <div className=\"contentDiv\">\r\n                <div className={classes.profileHeader}>\r\n                    <Typography className={classes.profileHeaderText}>\r\n                        User profile\r\n                    </Typography>\r\n                </div>\r\n                <Divider variant=\"middle\" />\r\n                <GridList cols={2} className={classes.contentList} spacing={0}>\r\n                    <GridListTile style={{width: \"400px\", height: \"700px\"}}>\r\n                        <ProfileTile>\r\n                        <Box className=\"boxAvatar\">\r\n                                <Box className=\"avatar\" />\r\n                            </Box>\r\n                            <Box className=\"name\">\r\n                                <Typography className={classes.nameText}>\r\n                                    {userData.firstName} {userData.lastName}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box className=\"userStatus\">\r\n                                <Typography className={classes.userStatusText}>\r\n                                    <q>{userData.textStatus}</q>\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box className=\"email\">\r\n                                <Typography>\r\n                                    {userData.email}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box className=\"email\">\r\n                                <Typography>\r\n                                    {userData.username}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Divider variant=\"middle\" />\r\n                            <GridList cols={3} className={classes.info}>\r\n                                <GridListTile style={{width: \"fit-content\",height: \"fit-content\"}}>\r\n                                    <Typography>\r\n                                        <b>Purses:</b><br/>{userData.countPurses}\r\n                                        </Typography>\r\n                                </GridListTile>\r\n                                <GridListTile style={{width: \"fit-content\",height: \"fit-content\"}}>\r\n                                    <Typography>\r\n                                        <b>Notes:</b><br/>{userData.countNotes}\r\n                                    </Typography>\r\n                                </GridListTile>\r\n                                <GridListTile style={{width: \"fit-content\",height: \"fit-content\"}}>\r\n                                    <Typography>\r\n                                        <b>Occations:</b><br/>{userData.coutOccations}\r\n                                    </Typography>\r\n                                </GridListTile>\r\n                            </GridList>\r\n                        </ProfileTile>\r\n                    </GridListTile>\r\n                    <GridListTile style={{width: \"fit-content\", height: \"fit-content\", padding: 10}}>\r\n                        <ProfileTile maxWidth={300}>\r\n                            <GridList cols={1} spacing={5} style={{height:\"fit-content\", width:\"fit-content\"}} >\r\n                                <GridListTile style={{height: \"fit-content\", display: 'flex', justifyContent: 'flex-end', padding:17}} className=\"tile\">\r\n                                    <Button variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    component={Link} to=\"/settings\" \r\n                                    startIcon={<SettingsIcon />}>Settings</Button>\r\n                                </GridListTile>\r\n                                <GridListTile style={{height: 'fix-content'}}>\r\n                                    {pursesData.purses.map(({currencyCode, bill}) => (\r\n                                        <React.Fragment key={currencyCode}>\r\n                                            <GridListTile style={{marginBottom:10}}>   \r\n                                            <div className=\"purseTile\">\r\n                                                {currencyCode}\r\n                                            </div>\r\n                                            <div style={{marginLeft:10, marginTop:8}}>\r\n                                                <Typography>\r\n                                                    Bill: {bill}\r\n                                                </Typography>\r\n                                            </div>\r\n                                            </GridListTile>\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </GridListTile>\r\n                                <GridListTile style={{height: '50px'}}>\r\n                                    <Typography>\r\n                                        ANOTHER INTORMATION\r\n                                    </Typography>\r\n                                </GridListTile>\r\n                            </GridList>\r\n                        </ProfileTile>\r\n                    </GridListTile>\r\n                </GridList>\r\n            </div>\r\n        </AppContent>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;"]},"metadata":{},"sourceType":"module"}