{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\ApplicationBar\\\\SignInButton.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, Component } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Box, Button, Dialog } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst SignInForm = ({\n  handleClose\n}) => {\n  _s();\n\n  // const [open, setOpen] = useState(false);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const onSubmit = useCallback(formValues => {\n    console.log(formValues);\n    console.log(\"formValues\");\n  }, []);\n\n  const handleSub = event => {};\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      handleSubmit(onSubmit);\n      handleClose();\n      event.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"login\",\n      type: \"email\",\n      ref: register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      ref: register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n/*\r\n<form onSubmit={() => {handleSubmit(onSubmit); handleClose();}}>\r\n            <input name=\"login\" type=\"email\" ref={register} />\r\n            <input name=\"password\" type=\"password\" ref={register} />\r\n            <Button type=\"submit\">\r\n                Sign In\r\n            </Button>\r\n        </form>\r\n*/\n\n\n_s(SignInForm, \"UreW8t8cDFHlo3ryBhN5+mnIFA4=\", false, function () {\n  return [useForm];\n});\n\n_c = SignInForm;\nconst useStyles = makeStyles(theme => ({\n  title: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n    alignSelf: \"center\"\n  }\n}));\n\nclass SignInButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      username: \"\",\n      password: \"\"\n    };\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.signIn = this.signIn.bind(this);\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n  handleChangeUsername(value) {\n    this.setState(() => ({\n      username: value\n    }));\n  }\n\n  handleChangePassword(value) {\n    this.setState(() => ({\n      password: value\n    }));\n  }\n\n  signIn() {\n    const xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => {\n      console.log(xhr.response);\n    });\n    xhr.send(JSON.stringify({\n      username: this.state.username,\n      password: this.state.password\n    }));\n    console.log(xhr.response);\n    this.handleClose();\n  }\n\n  handleClickOpen() {\n    console.log(\"open\");\n    this.setState(() => ({\n      open: true\n    }));\n  }\n\n  handleClose() {\n    this.setState(() => ({\n      open: false,\n      username: \"\",\n      password: \"\"\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mr: 3,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        variant: \"outlined\",\n        onClick: this.handleClickOpen,\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"arial-lablledby\": \"form-dialog-title\",\n        children: /*#__PURE__*/_jsxDEV(SignInForm, {\n          handleClose: this.handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n{\n  /* <DialogTitle id=\"form-dialog-title\" className={this.props.classes.title}>\r\n                         Sign In\r\n                     </DialogTitle>\r\n                     <DialogContent>\r\n                         <DialogContentText>\r\n                             Please, fill fields to sign in\r\n                         </DialogContentText>\r\n                         <TextField \r\n                         autoFocus\r\n                         margin=\"dense\"\r\n                         id=\"username\"\r\n                         label=\"Login\"\r\n                         type=\"text\"\r\n                         fullWidth\r\n                         value={this.state.username}\r\n                         onChange={(event) => this.handleChangeUsername(event.target.value)}\r\n                         />\r\n                         <TextField \r\n                         margin=\"dense\"\r\n                         id=\"password\"\r\n                         label=\"Password\"\r\n                         type=\"password\"\r\n                         fullWidth\r\n                         value={this.state.password}\r\n                         onChange={(event) => this.handleChangePassword(event.target.value)}\r\n                         />\r\n                     </DialogContent>\r\n                     <DialogActions>\r\n                         <Button onClick={this.handleClose} color=\"primary\">\r\n                             Cancel\r\n                         </Button>\r\n                         <Button onClick={() => this.signIn()} color=\"primary\">\r\n                             Sign in\r\n                         </Button>\r\n                     </DialogActions> */\n}\nexport default _s2(() => {\n  _s2();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(SignInButton, {\n    classes: classes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 12\n  }, this);\n}, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/ApplicationBar/SignInButton.tsx"],"names":["React","useCallback","Component","useForm","Box","Button","Dialog","makeStyles","SignInForm","handleClose","register","handleSubmit","onSubmit","formValues","console","log","handleSub","event","preventDefault","useStyles","theme","title","justifyContent","alignItems","alignContent","alignSelf","SignInButton","constructor","props","state","open","username","password","handleClickOpen","bind","signIn","handleChangeUsername","handleChangePassword","value","setState","xhr","XMLHttpRequest","addEventListener","response","send","JSON","stringify","render","classes"],"mappings":"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","sourcesContent":["import React, { useCallback, Component, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Box, Button, Dialog, FormControl, FormGroup, DialogContent, DialogTitle, DialogContentText, TextField, DialogActions } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport interface BearerToken {\r\n    accessToken: string;\r\n}\r\n\r\ninterface ISignInFormData\r\n{\r\n    login: string,\r\n    password: string\r\n}\r\n\r\ninterface ISignInFormProps\r\n{\r\n    handleClose(): void\r\n}\r\n\r\nconst SignInForm: React.FC<ISignInFormProps> = ({handleClose}) => {\r\n    // const [open, setOpen] = useState(false);\r\n    const { register, handleSubmit } = useForm<ISignInFormData>();\r\n    const onSubmit = useCallback((formValues: ISignInFormData) => {\r\n        console.log(formValues);\r\n        console.log(\"formValues\");\r\n    }, []);\r\n\r\n    const handleSub = (event: Event) => {\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={(event) => {handleSubmit(onSubmit); handleClose(); event.preventDefault();}}>\r\n            <input name=\"login\" type=\"email\" ref={register} />\r\n            <input name=\"password\" type=\"password\" ref={register} />\r\n            <Button type=\"submit\">\r\n                Sign In\r\n            </Button>\r\n        </form>\r\n    );\r\n}\r\n\r\n/*\r\n<form onSubmit={() => {handleSubmit(onSubmit); handleClose();}}>\r\n            <input name=\"login\" type=\"email\" ref={register} />\r\n            <input name=\"password\" type=\"password\" ref={register} />\r\n            <Button type=\"submit\">\r\n                Sign In\r\n            </Button>\r\n        </form>\r\n*/\r\n\r\n\r\n\r\ninterface ISignInButtonState \r\n{\r\n    open: boolean,\r\n    username: string,\r\n    password: string\r\n}\r\ninterface ISignInButtonProps \r\n{\r\n    classes: Record<\"title\", string>\r\n}\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    title: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        alignSelf: \"center\"\r\n    }\r\n}));\r\n\r\nclass SignInButton extends Component<ISignInButtonProps, ISignInButtonState> {\r\n\r\n    constructor(props: ISignInButtonProps)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n        \r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.signIn = this.signIn.bind(this);\r\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\r\n        this.handleChangePassword = this.handleChangePassword.bind(this);\r\n    }\r\n\r\n    handleChangeUsername(value: string) : void\r\n    {\r\n        this.setState(() => ({\r\n            username: value\r\n        }));\r\n    }\r\n\r\n    handleChangePassword(value: string) : void\r\n    {\r\n        this.setState(() => ({\r\n            password: value\r\n        }));\r\n    }\r\n\r\n    signIn() : void\r\n    {\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        xhr.addEventListener('load', () => {\r\n            console.log(xhr.response);\r\n        });\r\n\r\n        xhr.send(JSON.stringify({username: this.state.username, password: this.state.password}));\r\n        console.log(xhr.response);\r\n        this.handleClose();\r\n    }\r\n\r\n    handleClickOpen() : void\r\n    {\r\n        console.log(\"open\");\r\n        this.setState(() => ({\r\n            open: true\r\n        }));\r\n    }\r\n\r\n    handleClose() : void\r\n    {\r\n        this.setState(() => ({\r\n            open:false,\r\n            username: \"\",\r\n            password: \"\"\r\n        }));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Box mr={3}>\r\n                <Button color=\"inherit\" variant=\"outlined\" onClick={this.handleClickOpen}>\r\n                    Sign in\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} arial-lablledby=\"form-dialog-title\">\r\n                    <SignInForm handleClose={this.handleClose} />\r\n                </Dialog>\r\n            </Box>\r\n        );\r\n    };\r\n}\r\n\r\n{/* <DialogTitle id=\"form-dialog-title\" className={this.props.classes.title}>\r\n                        Sign In\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please, fill fields to sign in\r\n                        </DialogContentText>\r\n                        <TextField \r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"username\"\r\n                        label=\"Login\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={this.state.username}\r\n                        onChange={(event) => this.handleChangeUsername(event.target.value)}\r\n                        />\r\n                        <TextField \r\n                        margin=\"dense\"\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        value={this.state.password}\r\n                        onChange={(event) => this.handleChangePassword(event.target.value)}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={() => this.signIn()} color=\"primary\">\r\n                            Sign in\r\n                        </Button>\r\n                    </DialogActions> */}\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    return <SignInButton classes={classes} />;\r\n};"]},"metadata":{},"sourceType":"module"}