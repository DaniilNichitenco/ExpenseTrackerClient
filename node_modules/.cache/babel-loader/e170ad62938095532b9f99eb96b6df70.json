{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nexport const useNonInitialEffect = (effect, deps) => {\n  _s();\n\n  const initialRender = useRef(true);\n  useEffect(() => {\n    let effectReturns = () => {};\n\n    if (initialRender.current) {\n      initialRender.current = false;\n    } else {\n      effectReturns = effect();\n    }\n\n    if (effectReturns && typeof effectReturns === \"function\") {\n      return effectReturns;\n    }\n  }, deps);\n};\n\n_s(useNonInitialEffect, \"lE8UlN1U/np46g/Jy0ook9k9Yss=\");\n\nexport default useNonInitialEffect;","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/CustomHooks/CustomUseEffectHooks/useNonInitialEffect.tsx"],"names":["useEffect","useRef","useNonInitialEffect","effect","deps","initialRender","effectReturns","current"],"mappings":";;AAAA,SAASA,SAAT,EAAoDC,MAApD,QAAkE,OAAlE;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,MAAD,EAAyBC,IAAzB,KAAmD;AAAA;;AACrF,QAAMC,aAAa,GAAGJ,MAAM,CAAC,IAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIM,aAA8C,GAAG,MAAM,CAAE,CAA7D;;AAEM,QAAID,aAAa,CAACE,OAAlB,EAA2B;AAChCF,MAAAA,aAAa,CAACE,OAAd,GAAwB,KAAxB;AACA,KAFK,MAEC;AACND,MAAAA,aAAa,GAAGH,MAAM,EAAtB;AACA;;AAED,QAAIG,aAAa,IAAI,OAAOA,aAAP,KAAyB,UAA9C,EAA0D;AACzD,aAAOA,aAAP;AACA;AACD,GAZQ,EAYNF,IAZM,CAAT;AAaA,CAhBM;;GAAMF,mB;;AAkBb,eAAeA,mBAAf","sourcesContent":["import { useEffect, EffectCallback, DependencyList, useRef } from \"react\";\r\n\r\nexport const useNonInitialEffect = (effect: EffectCallback, deps?: DependencyList) => {\r\n\tconst initialRender = useRef(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet effectReturns: void | (() => void | undefined) = () => {};\r\n\r\n        if (initialRender.current) {\r\n\t\t\tinitialRender.current = false;\r\n\t\t} else {\r\n\t\t\teffectReturns = effect();\r\n\t\t}\r\n\r\n\t\tif (effectReturns && typeof effectReturns === \"function\") {\r\n\t\t\treturn effectReturns;\r\n\t\t}\r\n\t}, deps);\r\n};\r\n\r\nexport default useNonInitialEffect;"]},"metadata":{},"sourceType":"module"}