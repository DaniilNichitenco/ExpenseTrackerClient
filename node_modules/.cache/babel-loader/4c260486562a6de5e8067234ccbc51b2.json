{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Pages\\\\ProfilePage.tsx\",\n    _s = $RefreshSig$();\n\nimport { GridList, GridListTile, makeStyles, Typography, Box, Divider, Button } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport './ProfilePageStyles.css';\nimport { Link } from 'react-router-dom';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PursesContext from '../../Context/PursesContext';\nimport ProfileTile from '../Tiles/ProfileTile';\nimport DefaultUser from '../../Data/Models/User/default/DefaultUser';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nconst useStyles = makeStyles(theme => ({\n  contentList: {\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    overflowX: \"hidden\",\n    height: \"fit-content\",\n    padding: 20\n  },\n  info: {\n    padding: 25,\n    justifyContent: \"space-between\"\n  },\n  tile: {\n    border: \"1px solid black\"\n  },\n  paperTile: {\n    borderRadius: \"15px 15px 7px 7px\",\n    height: \"fit-content\",\n    width: 300,\n    backgroundColor: '#A0ABEF'\n  },\n  userStatusText: {\n    fontFamily: \"Lucida Bright\"\n  },\n  nameText: {\n    fontFamily: \"Candara\",\n    fontSize: \"inherit\",\n    fontWeight: \"inherit\"\n  },\n  profileHeader: {\n    // backgroundColor: theme.palette.primary.dark,\n    height: \"fit-content\",\n    borderRadius: \"inherit\"\n  },\n  profileHeaderText: {\n    marginTop: 25,\n    marginBottom: 10,\n    marginLeft: 15,\n    fontSize: 23,\n    fontWeight: 'bolder'\n  }\n}));\n\nconst ProfilePage = () => {\n  _s();\n\n  const [userData, setUserData, removeUserData] = useSessionStorage(\"UserInfo\", DefaultUser); // const userData = useContext(UserContext).userData;\n\n  const pursesData = useContext(PursesContext).pursesData;\n  const classes = useStyles();\n\n  if (!userData.textStatus || userData.textStatus.length == 0) {\n    userData.textStatus = \"Less I hear the less you'll say you'll find that out anyway\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.profileHeader,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.profileHeaderText,\n          children: \"User profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridList, {\n        cols: 2,\n        className: classes.contentList,\n        spacing: 25,\n        children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n          style: {\n            width: \"fit-content\",\n            height: \"fit-content\",\n            padding: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(ProfileTile, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: \"boxAvatar\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                className: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"name\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.nameText,\n                children: [userData.firstName, \" \", userData.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"userStatus\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.userStatusText,\n                children: /*#__PURE__*/_jsxDEV(\"q\", {\n                  children: userData.textStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"email\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: userData.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"email\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: userData.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(GridList, {\n              cols: 3,\n              className: classes.info,\n              children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n                style: {\n                  width: \"fit-content\",\n                  height: \"fit-content\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Purses:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 55\n                  }, this), pursesData.count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n                style: {\n                  width: \"fit-content\",\n                  height: \"fit-content\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Notes:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 54\n                  }, this), userData.countNotes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n                style: {\n                  width: \"fit-content\",\n                  height: \"fit-content\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Occations:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 58\n                  }, this), userData.coutOccations]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n          style: {\n            width: \"fit-content\",\n            height: \"fit-content\",\n            padding: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(ProfileTile, {\n            maxWidth: 300,\n            children: /*#__PURE__*/_jsxDEV(GridList, {\n              cols: 1,\n              spacing: 5,\n              style: {\n                height: \"fit-content\",\n                width: \"fit-content\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n                style: {\n                  height: \"fit-content\",\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  padding: 17\n                },\n                className: \"tile\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  component: Link,\n                  to: \"/settings\",\n                  startIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 48\n                  }, this),\n                  children: \"Settings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n                style: {\n                  height: 'fix-content'\n                },\n                children: pursesData.purses.map(({\n                  currencyCode,\n                  bill\n                }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(GridListTile, {\n                    style: {\n                      marginBottom: 10\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"purseTile\",\n                      children: currencyCode\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginLeft: 10,\n                        marginTop: 8\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        children: [\"Bill: \", bill]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 45\n                  }, this)\n                }, currencyCode, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n                style: {\n                  height: '50px'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"ANOTHER INTORMATION\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfilePage, \"E9K0jUtr+FvdEiPZ1dWe/OAapTg=\", false, function () {\n  return [useSessionStorage, useStyles];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Pages/ProfilePage.tsx"],"names":["GridList","GridListTile","makeStyles","Typography","Box","Divider","Button","React","useContext","Link","SettingsIcon","PursesContext","ProfileTile","DefaultUser","useSessionStorage","useStyles","theme","contentList","justifyContent","alignItems","overflowX","height","padding","info","tile","border","paperTile","borderRadius","width","backgroundColor","userStatusText","fontFamily","nameText","fontSize","fontWeight","profileHeader","profileHeaderText","marginTop","marginBottom","marginLeft","ProfilePage","userData","setUserData","removeUserData","pursesData","classes","textStatus","length","firstName","lastName","email","userName","count","countNotes","coutOccations","display","purses","map","currencyCode","bill"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,UAAjC,EAA6CC,UAA7C,EAAyDC,GAAzD,EAA8DC,OAA9D,EAAuEC,MAAvE,QAAqF,mBAArF;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,yBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAGA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AACrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,cAAc,EAAC,QADN;AAETC,IAAAA,UAAU,EAAC,YAFF;AAGTC,IAAAA,SAAS,EAAE,QAHF;AAITC,IAAAA,MAAM,EAAE,aAJC;AAKTC,IAAAA,OAAO,EAAE;AALA,GADwB;AAQrCC,EAAAA,IAAI,EAAE;AACFD,IAAAA,OAAO,EAAC,EADN;AAEFJ,IAAAA,cAAc,EAAC;AAFb,GAR+B;AAarCM,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE;AADN,GAb+B;AAgBrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YAAY,EAAE,mBADP;AAEPN,IAAAA,MAAM,EAAE,aAFD;AAGPO,IAAAA,KAAK,EAAE,GAHA;AAIPC,IAAAA,eAAe,EAAE;AAJV,GAhB0B;AAsBnCC,EAAAA,cAAc,EAAE;AACZC,IAAAA,UAAU,EAAE;AADA,GAtBmB;AAyBnCC,EAAAA,QAAQ,EAAE;AACND,IAAAA,UAAU,EAAE,SADN;AAENE,IAAAA,QAAQ,EAAE,SAFJ;AAGNC,IAAAA,UAAU,EAAE;AAHN,GAzByB;AA8BnCC,EAAAA,aAAa,EAAE;AACb;AACAd,IAAAA,MAAM,EAAC,aAFM;AAGbM,IAAAA,YAAY,EAAE;AAHD,GA9BoB;AAmCrCS,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,SAAS,EAAE,EADI;AAEfC,IAAAA,YAAY,EAAC,EAFE;AAGfC,IAAAA,UAAU,EAAE,EAHG;AAIfN,IAAAA,QAAQ,EAAE,EAJK;AAKfC,IAAAA,UAAU,EAAE;AALG;AAnCkB,CAAZ,CAAD,CAA5B;;AA4CA,MAAMM,WAAqB,GAAG,MAAM;AAAA;;AAEhC,QAAM,CAACC,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,IAA0C7B,iBAAiB,CAAO,UAAP,EACjED,WADiE,CAAjE,CAFgC,CAKhC;;AACA,QAAM+B,UAAU,GAAGpC,UAAU,CAACG,aAAD,CAAV,CAA0BiC,UAA7C;AAEA,QAAMC,OAAO,GAAG9B,SAAS,EAAzB;;AACA,MAAG,CAAC0B,QAAQ,CAACK,UAAV,IAAwBL,QAAQ,CAACK,UAAT,CAAoBC,MAApB,IAA8B,CAAzD,EACA;AACIN,IAAAA,QAAQ,CAACK,UAAT,GAAsB,6DAAtB;AACH;;AAED,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAED,OAAO,CAACV,aAAxB;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEU,OAAO,CAACT,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE,CAAhB;AAAmB,QAAA,SAAS,EAAES,OAAO,CAAC5B,WAAtC;AAAmD,QAAA,OAAO,EAAE,EAA5D;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAACW,YAAAA,KAAK,EAAE,aAAR;AAAuBP,YAAAA,MAAM,EAAE,aAA/B;AAA8CC,YAAAA,OAAO,EAAE;AAAvD,WAArB;AAAA,iCACI,QAAC,WAAD;AAAA,oCACA,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACQ,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,oBADA,eAII,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEuB,OAAO,CAACb,QAA/B;AAAA,2BACKS,QAAQ,CAACO,SADd,OAC0BP,QAAQ,CAACQ,QADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eASI,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEJ,OAAO,CAACf,cAA/B;AAAA,uCACI;AAAA,4BAAIW,QAAQ,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBATJ,eAcI,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI,QAAC,UAAD;AAAA,0BACKL,QAAQ,CAACS;AADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAdJ,eAmBI,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI,QAAC,UAAD;AAAA,0BACKT,QAAQ,CAACU;AADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAnBJ,eAwBI,QAAC,OAAD;AAAS,cAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAxBJ,eAyBI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAE,CAAhB;AAAmB,cAAA,SAAS,EAAEN,OAAO,CAACtB,IAAtC;AAAA,sCACI,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAE;AAACK,kBAAAA,KAAK,EAAE,aAAR;AAAsBP,kBAAAA,MAAM,EAAE;AAA9B,iBAArB;AAAA,uCACI,QAAC,UAAD;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eACkB;AAAA;AAAA;AAAA;AAAA,0BADlB,EACwBuB,UAAU,CAACQ,KADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAE;AAACxB,kBAAAA,KAAK,EAAE,aAAR;AAAsBP,kBAAAA,MAAM,EAAE;AAA9B,iBAArB;AAAA,uCACI,QAAC,UAAD;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eACiB;AAAA;AAAA;AAAA;AAAA,0BADjB,EACuBoB,QAAQ,CAACY,UADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBANJ,eAWI,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAE;AAACzB,kBAAAA,KAAK,EAAE,aAAR;AAAsBP,kBAAAA,MAAM,EAAE;AAA9B,iBAArB;AAAA,uCACI,QAAC,UAAD;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eACqB;AAAA;AAAA;AAAA;AAAA,0BADrB,EAC2BoB,QAAQ,CAACa,aADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eA8CI,QAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAAC1B,YAAAA,KAAK,EAAE,aAAR;AAAuBP,YAAAA,MAAM,EAAE,aAA/B;AAA8CC,YAAAA,OAAO,EAAE;AAAvD,WAArB;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,QAAQ,EAAE,GAAvB;AAAA,mCACI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAE,CAAhB;AAAmB,cAAA,OAAO,EAAE,CAA5B;AAA+B,cAAA,KAAK,EAAE;AAACD,gBAAAA,MAAM,EAAC,aAAR;AAAuBO,gBAAAA,KAAK,EAAC;AAA7B,eAAtC;AAAA,sCACI,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAE;AAACP,kBAAAA,MAAM,EAAE,aAAT;AAAwBkC,kBAAAA,OAAO,EAAE,MAAjC;AAAyCrC,kBAAAA,cAAc,EAAE,UAAzD;AAAqEI,kBAAAA,OAAO,EAAC;AAA7E,iBAArB;AAAuG,gBAAA,SAAS,EAAC,MAAjH;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,WAAhB;AACA,kBAAA,KAAK,EAAC,SADN;AAEA,kBAAA,SAAS,EAAEb,IAFX;AAEiB,kBAAA,EAAE,EAAC,WAFpB;AAGA,kBAAA,SAAS,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,0BAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAOI,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAE;AAACY,kBAAAA,MAAM,EAAE;AAAT,iBAArB;AAAA,0BACKuB,UAAU,CAACY,MAAX,CAAkBC,GAAlB,CAAsB,CAAC;AAACC,kBAAAA,YAAD;AAAeC,kBAAAA;AAAf,iBAAD,kBACnB,QAAC,KAAD,CAAO,QAAP;AAAA,yCACI,QAAC,YAAD;AAAc,oBAAA,KAAK,EAAE;AAACrB,sBAAAA,YAAY,EAAC;AAAd,qBAArB;AAAA,4CACA;AAAK,sBAAA,SAAS,EAAC,WAAf;AAAA,gCACKoB;AADL;AAAA;AAAA;AAAA;AAAA,4BADA,eAIA;AAAK,sBAAA,KAAK,EAAE;AAACnB,wBAAAA,UAAU,EAAC,EAAZ;AAAgBF,wBAAAA,SAAS,EAAC;AAA1B,uBAAZ;AAAA,6CACI,QAAC,UAAD;AAAA,6CACWsB,IADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBAAqBD,YAArB;AAAA;AAAA;AAAA;AAAA,wBADH;AADL;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAuBI,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAE;AAACrC,kBAAAA,MAAM,EAAE;AAAT,iBAArB;AAAA,uCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4FH,CA1GD;;GAAMmB,W;UAE8C1B,iB,EAMhCC,S;;;KARdyB,W;AA4GN,eAAeA,WAAf","sourcesContent":["import { GridList, GridListTile, makeStyles, Typography, Box, Divider, Button } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { GetCurrentUserData } from '../../Services/user.services/User.service';\r\nimport './ProfilePageStyles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport UserContext from '../../Context/UserContext';\r\nimport PursesContext from '../../Context/PursesContext';\r\nimport ProfileTile from '../Tiles/ProfileTile';\r\nimport useSessionStorageAsync from '../../CustomHooks/StorageHooks/AsyncHooks/useSessionStorageAsync';\r\nimport User from '../../Data/Models/User/User';\r\nimport DefaultUser from '../../Data/Models/User/default/DefaultUser';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentList: {\r\n        justifyContent:\"center\",\r\n        alignItems:\"flex-start\",\r\n        overflowX: \"hidden\",\r\n        height: \"fit-content\",\r\n        padding: 20\r\n    },\r\n    info: {\r\n        padding:25,\r\n        justifyContent:\"space-between\", \r\n        \r\n    },\r\n    tile: {\r\n        border: \"1px solid black\"\r\n    },\r\n    paperTile: {\r\n        borderRadius: \"15px 15px 7px 7px\",\r\n        height: \"fit-content\",\r\n        width: 300,\r\n        backgroundColor: '#A0ABEF'\r\n      },\r\n      userStatusText: {\r\n          fontFamily: \"Lucida Bright\"\r\n      },\r\n      nameText: {\r\n          fontFamily: \"Candara\",\r\n          fontSize: \"inherit\",\r\n          fontWeight: \"inherit\"\r\n      },\r\n      profileHeader: {\r\n        // backgroundColor: theme.palette.primary.dark,\r\n        height:\"fit-content\", \r\n        borderRadius: \"inherit\"\r\n    },\r\n    profileHeaderText: {\r\n        marginTop: 25,\r\n        marginBottom:10,\r\n        marginLeft: 15,\r\n        fontSize: 23,\r\n        fontWeight: 'bolder'\r\n    }\r\n}));\r\n\r\nconst ProfilePage: React.FC = () => {\r\n\r\n    const [userData, setUserData, removeUserData] = useSessionStorage<User>(\"UserInfo\", \r\n    DefaultUser);\r\n\r\n    // const userData = useContext(UserContext).userData;\r\n    const pursesData = useContext(PursesContext).pursesData;\r\n\r\n    const classes = useStyles();\r\n    if(!userData.textStatus || userData.textStatus.length == 0)\r\n    {\r\n        userData.textStatus = \"Less I hear the less you'll say you'll find that out anyway\";\r\n    }\r\n\r\n    return(\r\n        <React.Fragment> \r\n            <div className=\"contentDiv\">\r\n                <div className={classes.profileHeader}>\r\n                    <Typography className={classes.profileHeaderText}>\r\n                        User profile\r\n                    </Typography>\r\n                </div>\r\n                <Divider variant=\"middle\" />\r\n                <GridList cols={2} className={classes.contentList} spacing={25}>\r\n                    <GridListTile style={{width: \"fit-content\", height: \"fit-content\", padding: 10}}>\r\n                        <ProfileTile>\r\n                        <Box className=\"boxAvatar\">\r\n                                <Box className=\"avatar\" />\r\n                            </Box>\r\n                            <Box className=\"name\">\r\n                                <Typography className={classes.nameText}>\r\n                                    {userData.firstName} {userData.lastName}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box className=\"userStatus\">\r\n                                <Typography className={classes.userStatusText}>\r\n                                    <q>{userData.textStatus}</q>\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box className=\"email\">\r\n                                <Typography>\r\n                                    {userData.email}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box className=\"email\">\r\n                                <Typography>\r\n                                    {userData.userName}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Divider variant=\"middle\" />\r\n                            <GridList cols={3} className={classes.info}>\r\n                                <GridListTile style={{width: \"fit-content\",height: \"fit-content\"}}>\r\n                                    <Typography>\r\n                                        <b>Purses:</b><br/>{pursesData.count}\r\n                                        </Typography>\r\n                                </GridListTile>\r\n                                <GridListTile style={{width: \"fit-content\",height: \"fit-content\"}}>\r\n                                    <Typography>\r\n                                        <b>Notes:</b><br/>{userData.countNotes}\r\n                                    </Typography>\r\n                                </GridListTile>\r\n                                <GridListTile style={{width: \"fit-content\",height: \"fit-content\"}}>\r\n                                    <Typography>\r\n                                        <b>Occations:</b><br/>{userData.coutOccations}\r\n                                    </Typography>\r\n                                </GridListTile>\r\n                            </GridList>\r\n                        </ProfileTile>\r\n                    </GridListTile>\r\n                    <GridListTile style={{width: \"fit-content\", height: \"fit-content\", padding: 10}}>\r\n                        <ProfileTile maxWidth={300}>\r\n                            <GridList cols={1} spacing={5} style={{height:\"fit-content\", width:\"fit-content\"}} >\r\n                                <GridListTile style={{height: \"fit-content\", display: 'flex', justifyContent: 'flex-end', padding:17}} className=\"tile\">\r\n                                    <Button variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    component={Link} to=\"/settings\" \r\n                                    startIcon={<SettingsIcon />}>Settings</Button>\r\n                                </GridListTile>\r\n                                <GridListTile style={{height: 'fix-content'}}>\r\n                                    {pursesData.purses.map(({currencyCode, bill}) => (\r\n                                        <React.Fragment key={currencyCode}>\r\n                                            <GridListTile style={{marginBottom:10}}>   \r\n                                            <div className=\"purseTile\">\r\n                                                {currencyCode}\r\n                                            </div>\r\n                                            <div style={{marginLeft:10, marginTop:8}}>\r\n                                                <Typography>\r\n                                                    Bill: {bill}\r\n                                                </Typography>\r\n                                            </div>\r\n                                            </GridListTile>\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </GridListTile>\r\n                                <GridListTile style={{height: '50px'}}>\r\n                                    <Typography>\r\n                                        ANOTHER INTORMATION\r\n                                    </Typography>\r\n                                </GridListTile>\r\n                            </GridList>\r\n                        </ProfileTile>\r\n                    </GridListTile>\r\n                </GridList>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;"]},"metadata":{},"sourceType":"module"}