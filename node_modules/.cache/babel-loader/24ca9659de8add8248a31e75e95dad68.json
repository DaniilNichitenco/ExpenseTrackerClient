{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Forms\\\\InputForm\\\\InputForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { MenuItem, TextField } from '@material-ui/core';\n\nconst InputForm = ({\n  name,\n  label,\n  errorObj,\n  autoFocus = false,\n  required = false,\n  type = \"text\",\n  variant = \"standard\",\n  autoComplete,\n  defaultValue = \"\",\n  disabled = false,\n  select = {\n    select: false,\n    items: []\n  }\n}) => {\n  _s();\n\n  const {\n    control\n  } = useFormContext();\n  let isError = false;\n  let errorMessage = \"\";\n\n  if (errorObj.hasOwnProperty(name)) {\n    isError = true;\n    errorMessage = errorObj[name].message;\n  }\n\n  if (select.select) {\n    console.log(defaultValue);\n    return /*#__PURE__*/_jsxDEV(Controller, {\n      autoComplete: autoComplete,\n      as: TextField,\n      select: true,\n      type: type,\n      margin: \"dense\",\n      autoFocus: autoFocus,\n      name: name,\n      control: control,\n      label: label,\n      fullWidth: true,\n      error: isError,\n      InputLabelProps: {\n        required: required\n      },\n      helperText: errorMessage,\n      defaultValue: defaultVal,\n      variant: variant,\n      disabled: disabled,\n      children: select.items.map(option => {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.id,\n          children: option.label\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    autoComplete: autoComplete,\n    as: TextField,\n    type: type,\n    margin: \"dense\",\n    autoFocus: autoFocus,\n    name: name,\n    control: control,\n    defaultValue: defaultValue,\n    label: label,\n    fullWidth: true,\n    error: isError,\n    InputLabelProps: {\n      required: required\n    },\n    helperText: errorMessage,\n    variant: variant,\n    disabled: disabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputForm, \"zyAxkz+Wq3InUdCKNlVVi99oElQ=\", false, function () {\n  return [useFormContext];\n});\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Forms/InputForm/InputForm.tsx"],"names":["React","useFormContext","Controller","MenuItem","TextField","InputForm","name","label","errorObj","autoFocus","required","type","variant","autoComplete","defaultValue","disabled","select","items","control","isError","errorMessage","hasOwnProperty","message","console","log","defaultVal","map","option","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\nimport { MenuItem, TextField } from '@material-ui/core';\r\nimport IInputFormData from './IInputFormProps';\r\n\r\nconst InputForm: React.FC<IInputFormData> = ({name, label, errorObj, autoFocus = false, \r\n    required = false, type=\"text\", variant = \"standard\", autoComplete, defaultValue = \"\",\r\n    disabled = false, select = {select:false, items: []}\r\n    }) => {\r\n\r\n    const { control } = useFormContext();\r\n    let isError: boolean = false;\r\n    let errorMessage: string = \"\";\r\n    if(errorObj.hasOwnProperty(name))\r\n    {\r\n        isError = true;\r\n        errorMessage = errorObj[name].message;\r\n    }\r\n\r\n    if(select.select)\r\n    {\r\n        console.log(defaultValue);\r\n        return(\r\n            <Controller\r\n                autoComplete={autoComplete}\r\n                as={TextField}\r\n                select\r\n                type={type}\r\n                margin=\"dense\"\r\n                autoFocus={autoFocus}\r\n                name={name}\r\n                control={control}\r\n                label={label}\r\n                fullWidth\r\n                error={isError}\r\n                InputLabelProps={{\r\n                    required: required\r\n                }}\r\n                helperText={errorMessage}\r\n                defaultValue={defaultVal}\r\n                variant={variant}\r\n                disabled={disabled}\r\n            >\r\n                {select.items.map((option) => {\r\n                    return(\r\n                    <MenuItem key={option.id} value={option.id}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                );})}\r\n            </Controller>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Controller \r\n            autoComplete={autoComplete}\r\n            as={TextField}\r\n            type={type}\r\n            margin=\"dense\"\r\n            autoFocus={autoFocus}\r\n            name={name}\r\n            control={control}\r\n            defaultValue={defaultValue}\r\n            label={label}\r\n            fullWidth\r\n            error={isError}\r\n            InputLabelProps={{\r\n                required: required\r\n            }}\r\n            helperText={errorMessage}\r\n            variant={variant}\r\n            disabled={disabled}\r\n        />\r\n    )\r\n}\r\n\r\nexport default InputForm;"]},"metadata":{},"sourceType":"module"}