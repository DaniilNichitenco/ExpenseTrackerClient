{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useSessionStorage = (key, initialValue) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const useCustomState = () => {\n    _s();\n\n    if (initialValue != undefined) {\n      return useState(() => {\n        try {\n          const item = localStorage.getItem(key);\n          return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n          console.log(\"Error happens in useSessionStorage hook, useCustomState func, block 'storedValue'\");\n          console.log(error);\n          return initialValue;\n        }\n      });\n    } else {\n      return useState();\n    }\n  };\n\n  _s(useCustomState, \"2nss6A5KGrvhCg1f9b93YSziB4U=\");\n\n  const [storedValue, setStoredValue] = useCustomState();\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(\"Error happens in useSessionStorage hook, block 'setValue'\");\n      console.log(error);\n    }\n  };\n\n  const removeValue = () => {\n    const item = localStorage.getItem(key);\n\n    if (item != null) {\n      localStorage.removeItem(key);\n    }\n  };\n\n  return [storedValue, setValue, removeValue];\n};\n\n_s2(useSessionStorage, \"KFleqI9awd3uCnG+Qd+Gx1RrU5U=\", true);\n\nexport default useSessionStorage;","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/CustomHooks/StorageHooks/useSessionStorage.tsx"],"names":["useState","useSessionStorage","key","initialValue","useCustomState","undefined","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","setValue","value","valueToStore","Function","setItem","stringify","removeValue","removeItem"],"mappings":";;AAAA,SAAmCA,QAAnC,QAAmD,OAAnD;;AAEA,MAAMC,iBAAiB,GAAG,CAAoBC,GAApB,EAAiCC,YAAjC,KAAoD;AAAA;;AAAA;;AAE1E,QAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAGD,YAAY,IAAIE,SAAnB,EACA;AACI,aAAOL,QAAQ,CAAI,MAAM;AACrB,YACA;AACI,gBAAMM,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAb;AACA,iBAAOI,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAH,GAAsBH,YAAjC;AACH,SAJD,CAKA,OAAMQ,KAAN,EACA;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAY,mFAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,iBAAOR,YAAP;AACH;AACJ,OAZc,CAAf;AAaH,KAfD,MAiBA;AACI,aAAOH,QAAQ,EAAf;AACH;AACJ,GArBD;;AAF0E,KAEpEI,cAFoE;;AAyB1E,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,cAAc,EAApD;;AAEA,QAAMY,QAAQ,GAAIC,KAAD,IAAc;AAC3B,QACA;AACI,YAAMC,YAAY,GAAGD,KAAK,YAAYE,QAAjB,GACjBF,KAAK,CAACH,WAAD,CADY,GACIG,KADzB;AAGAF,MAAAA,cAAc,CAACG,YAAD,CAAd;AACAX,MAAAA,YAAY,CAACa,OAAb,CAAqBlB,GAArB,EAA0BO,IAAI,CAACY,SAAL,CAAeH,YAAf,CAA1B;AACH,KAPD,CAQA,OAAMP,KAAN,EACA;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAdD;;AAgBA,QAAMW,WAAW,GAAG,MAAM;AACtB,UAAMhB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAb;;AACA,QAAGI,IAAI,IAAI,IAAX,EACA;AACIC,MAAAA,YAAY,CAACgB,UAAb,CAAwBrB,GAAxB;AACH;AACJ,GAND;;AAQA,SAAO,CAACY,WAAD,EAAcE,QAAd,EAAwBM,WAAxB,CAAP;AACH,CApDD;;IAAMrB,iB;;AAsDN,eAAeA,iBAAf","sourcesContent":["import { Dispatch, SetStateAction, useState } from \"react\";\r\n\r\nconst useSessionStorage = <T extends unknown>(key: string, initialValue:T) => {\r\n    \r\n    const useCustomState = () => {\r\n        if(initialValue != undefined)\r\n        {\r\n            return useState<T>(() => {\r\n                try\r\n                {\r\n                    const item = localStorage.getItem(key);\r\n                    return item ? JSON.parse(item) : initialValue;\r\n                }\r\n                catch(error)\r\n                {\r\n                    console.log(\"Error happens in useSessionStorage hook, useCustomState func, block 'storedValue'\");\r\n                    console.log(error);\r\n                    return initialValue;\r\n                }   \r\n            });\r\n        }\r\n        else\r\n        {\r\n            return useState<T>();\r\n        }\r\n    }\r\n\r\n    const [storedValue, setStoredValue] = useCustomState();\r\n\r\n    const setValue = (value: T) => {\r\n        try\r\n        {\r\n            const valueToStore = value instanceof Function ?\r\n                value(storedValue) : value;\r\n            \r\n            setStoredValue(valueToStore);\r\n            localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(\"Error happens in useSessionStorage hook, block 'setValue'\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const removeValue = () => {\r\n        const item = localStorage.getItem(key);\r\n        if(item != null)\r\n        {\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n\r\n    return [storedValue, setValue, removeValue] as const;\r\n}\r\n\r\nexport default useSessionStorage;"]},"metadata":{},"sourceType":"module"}