{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\ExpensesList\\\\TopicPaper.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Box, Button, CircularProgress, Dialog, DialogContent, DialogActions, DialogTitle, Grid, makeStyles, Paper, Typography, DialogContentText, useMediaQuery, useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport { GetMonthName } from '../../Date/MonthName';\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\nimport CreateExpenseForm from '../Forms/ExpenseForm/CreateExpenseForm';\nimport EditExpenseForm from '../Forms/ExpenseForm/EditExpenseForm';\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  dialogPaper: {\n    maxHeight: \"600px\",\n    minHeight: \"600px\"\n  },\n  buttons: {\n    width: 100\n  }\n}));\n\nconst TopicExpensesList = props => {\n  _s();\n\n  const pageSize = 20;\n  const [pageIndex, setPageIndex] = useState(0);\n  const [hasData, setHasData] = useState(true);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [expenses, setExpenses] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", []);\n  const [dialog, setDialog] = useState({\n    isOpen: false,\n    action: \"update\",\n    itemId: 0\n  });\n  const classes = useStyles();\n  useNonInitialEffect(() => {\n    if (!dialog.isOpen) //if we close nested dialog, we rerender whole component\n      {\n        setPageIndex(0);\n        setHasData(true);\n        setIsLoadingData(true);\n        setHasNextPage(true);\n        setExpenses([...[]]);\n      }\n  }, [dialog]);\n  useEffect(() => {\n    if (isLoadingData) {\n      handleLoadMore();\n    }\n  }, [isLoadingData]);\n\n  const handleLoadMore = () => {\n    if (hasNextPage) {\n      setIsLoadingData(true);\n      const request = {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      };\n      ExpenseService.GetPagedUserExpenses(request, props.topic).then(result => {\n        if (result.response.status == 200) {\n          if (result.data.total == 0) {\n            setHasData(false);\n          }\n\n          setExpenses([...expenses, ...result.data.items]);\n          setHasNextPage(result.data.items.length == pageSize);\n          setIsLoadingData(false);\n          setPageIndex(pageIndex + 1);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const infiniteRef = useInfiniteScroll({\n    loading: isLoadingData,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer: \"parent\"\n  });\n\n  const handleClose = () => {\n    setDialog({ ...dialog,\n      isOpen: false\n    });\n  };\n\n  const handleOpen = (action, itemId) => {\n    if (itemId == undefined) {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action\n      });\n    } else {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action,\n        itemId: itemId\n      });\n    }\n  };\n\n  const GetExpense = async expenseId => {\n    return ExpenseService.GetExpense(expenseId).then(result => {\n      if (result.response.status == 200) {\n        return {\n          expense: result.data,\n          successed: true,\n          description: \"Successed\"\n        };\n      }\n\n      if (result.response.status == 404) {\n        return {\n          successed: false,\n          description: \"Expense has already deleted\"\n        };\n      }\n\n      return {\n        successed: false,\n        description: \"You do not have access to this expense\"\n      };\n    }).catch(error => {\n      console.log(error);\n      return {\n        successed: false,\n        description: \"Something went wrong\"\n      };\n    });\n  };\n\n  if (dialog.isOpen) {\n    if (dialog.action == \"create\") {\n      return /*#__PURE__*/_jsxDEV(CreateExpenseForm, {\n        topic: props.topic,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 20\n      }, this);\n    }\n\n    let result = {\n      successed: false,\n      description: \"\"\n    };\n    GetExpense(dialog.itemId).then(res => result = res);\n\n    if (!result.successed || result.expense == undefined) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"scroll-dialog-title\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Error!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: result.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (dialog.action == \"update\") {\n      return /*#__PURE__*/_jsxDEV(EditExpenseForm, {\n        topic: props.topic,\n        expense: result.expense,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 20\n      }, this);\n    }\n\n    setDialog({ ...dialog,\n      isOpen: false\n    }); // let result: {\n    //     expense?: Expense;\n    //     successed: boolean;\n    //     description: string;\n    // } = {\n    //     successed: false,\n    //     description: \"\"\n    // }\n    // GetExpense(dialog.itemId).then(response => {\n    //     result = response;\n    // });\n    // if(dialog.action == \"delete\")\n    // {\n    //     return(\n    //         <React.Fragment>\n    //             <DialogTitle id=\"scroll-dialog-title\">\n    //                 <Grid container justify=\"center\" xs={12}>\n    //                     <Typography variant=\"h6\">{result.expense.title}</Typography>\n    //                 </Grid>\n    //             </DialogTitle>\n    //             <DialogContent dividers={true}>\n    //                 <DialogContentText>\n    //                     <Typography>\n    //                         Are you sure you want to delete this expense?\n    //                     </Typography>\n    //                 </DialogContentText>\n    //             </DialogContent>\n    //             <DialogActions>\n    //                 <Button \n    //                     variant=\"contained\" \n    //                     color=\"primary\"\n    //                     onClick={() => {DeleteExpense(dialog.itemId).then(result => {\n    //                         console.log(JSON.stringify(result));\n    //                         handleClose();\n    //                         }\n    //                         );}}\n    //                     >\n    //                     <Typography>\n    //                         Delete\n    //                     </Typography>\n    //                 </Button>\n    //                 <Button \n    //                     variant=\"contained\" \n    //                     color=\"primary\"\n    //                     onClick={handleClose}\n    //                     >\n    //                     <Typography>\n    //                         Cancel\n    //                     </Typography>\n    //                 </Button>\n    //             </DialogActions>\n    //         </React.Fragment>\n    //     );\n    // }\n    // return(\n    //     <React.Fragment>\n    //         <DialogTitle id=\"scroll-dialog-title\">\n    //             <Grid container justify=\"center\" xs={12}>\n    //                 <Typography variant=\"h6\">{props.topic.name}</Typography>\n    //             </Grid>\n    //         </DialogTitle>\n    //         <DialogContent dividers={true}>\n    //             <DialogContentText>\n    //             </DialogContentText>\n    //         </DialogContent>\n    //         <DialogActions>\n    //             <Button \n    //                 variant=\"contained\" \n    //                 color=\"primary\"\n    //                 onClick={handleClose}\n    //                 >\n    //                 <Typography>\n    //                     Cancel\n    //                 </Typography>\n    //             </Button>\n    //             <Button \n    //                 variant=\"contained\" \n    //                 color=\"primary\"\n    //                 onClick={handleClose}\n    //                 >\n    //                 <Typography>\n    //                     Cancel\n    //                 </Typography>\n    //             </Button>\n    //         </DialogActions>\n    //     </React.Fragment>\n    // );\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row-reverse\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"outlined\",\n          onClick: () => handleOpen(\"create\"),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: props.topic.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"scroll-dialog-description\",\n        ref: infiniteRef,\n        children: [!hasData ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"You do not have any \", props.topic.name, \" expeses\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }, this) : expenses.map(expense => {\n          let currencyCode = \"\";\n          let purse = pursesData.find(p => p.id == expense.purseId);\n\n          if (purse != null && purse != undefined) {\n            currencyCode = purse.currencyCode.toUpperCase();\n          }\n\n          return /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 45\n              }, this),\n              \"aria-controls\": expense.id + \"-content\",\n              id: expense.id + \"-header\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.heading,\n                children: expense.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [expense.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 60\n                    }, this), \"Date: \", expense.date.getDate(), \"/\", GetMonthName(expense.date.getMonth()), \"/\", expense.date.getFullYear(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 45\n                    }, this), \"Sum: \", expense.money, \" \", currencyCode]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: {\n                    padding: 10\n                  },\n                  container: true,\n                  xs: 12,\n                  direction: \"row-reverse\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    className: classes.buttons,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.buttons,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this);\n        }), isLoadingData && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Loading expenses...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: props.handleClose,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopicExpensesList, \"Ce3ZnZTL/dAK0mm7LCzXqu7n2E0=\", false, function () {\n  return [useSessionStorage, useStyles, useNonInitialEffect, useInfiniteScroll];\n});\n\n_c = TopicExpensesList;\nexport const TopicPaper = props => {\n  _s2();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 8,\n    xl: 7,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: \"100%\",\n        padding: 0\n      },\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 20,\n        style: {\n          marginBottom: 10,\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          p: 1,\n          style: {\n            backgroundColor: \"black\",\n            color: \"white\",\n            borderRadius: \"10px 10px 0 0\"\n          },\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 37\n        }, this), props.topic.expenses.length == 0 && /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"There are not any expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 41\n        }, this), props.topic.expenses.map(expense => {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [expense.title, \" - \", expense.money]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 41\n            }, this)\n          }, expense.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 37\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      scroll: \"paper\",\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      \"aria-describedby\": \"scroll-dialog-description\",\n      fullWidth: useMediaQuery(theme.breakpoints.down('lg')),\n      classes: {\n        paper: classes.dialogPaper\n      },\n      children: /*#__PURE__*/_jsxDEV(TopicExpensesList, {\n        topic: {\n          id: props.topic.id,\n          name: props.topic.name\n        },\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(TopicPaper, \"BVhelrXhPPpFzrblyxhUsaq+mBY=\", false, function () {\n  return [useTheme, useStyles, useMediaQuery];\n});\n\n_c2 = TopicPaper;\nexport default TopicPaper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopicExpensesList\");\n$RefreshReg$(_c2, \"TopicPaper\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/ExpensesList/TopicPaper.tsx"],"names":["Box","Button","CircularProgress","Dialog","DialogContent","DialogActions","DialogTitle","Grid","makeStyles","Paper","Typography","DialogContentText","useMediaQuery","useTheme","Accordion","AccordionSummary","AccordionDetails","React","useEffect","useState","ExpenseService","ExpandMoreIcon","useSessionStorage","GetMonthName","useInfiniteScroll","useNonInitialEffect","CreateExpenseForm","EditExpenseForm","useStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","dialogPaper","maxHeight","minHeight","buttons","width","TopicExpensesList","props","pageSize","pageIndex","setPageIndex","hasData","setHasData","isLoadingData","setIsLoadingData","expenses","setExpenses","hasNextPage","setHasNextPage","pursesData","setPursesData","removePursesData","dialog","setDialog","isOpen","action","itemId","classes","handleLoadMore","request","GetPagedUserExpenses","topic","then","result","response","status","data","total","items","length","catch","error","console","log","infiniteRef","loading","onLoadMore","scrollContainer","handleClose","handleOpen","undefined","GetExpense","expenseId","expense","successed","description","res","name","map","currencyCode","purse","find","p","id","purseId","toUpperCase","title","date","getDate","getMonth","getFullYear","money","padding","TopicPaper","setIsOpen","marginBottom","backgroundColor","color","borderRadius","breakpoints","down","paper"],"mappings":"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","sourcesContent":["import { Box, Button, List, CircularProgress, Dialog, DialogContent,\r\n    DialogActions, DialogTitle, Grid, makeStyles, Paper, \r\n    Typography, DialogProps, DialogContentText, useMediaQuery, \r\n    useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Expense from '../../Data/Models/Expenses/Expense';\r\nimport Topic from '../../Data/Models/Topics/Topic';\r\nimport TopicWithExpenses from '../../Data/Models/Topics/TopicWithExpenses';\r\nimport ExpenseService, { DeleteExpense } from '../../Services/expense.service/ExpenseService';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\nimport { GetMonthName } from '../../Date/MonthName';\r\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\r\nimport PagedRequest from '../../Services/pagedRequests/PagedRequest';\r\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\r\nimport CreateExpenseForm from '../Forms/ExpenseForm/CreateExpenseForm';\r\nimport EditExpenseForm from '../Forms/ExpenseForm/EditExpenseForm';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  dialogPaper: {\r\n      maxHeight: \"600px\",\r\n      minHeight: \"600px\"\r\n  },\r\n  buttons:{\r\n      width: 100\r\n  }\r\n}),\r\n);\r\n\r\n\r\ninterface TopicExpensesListProps\r\n{\r\n    topic: Topic;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst TopicExpensesList: React.FC<TopicExpensesListProps> = (props) => {\r\n\r\n    const pageSize: number = 20;\r\n    \r\n    const [pageIndex, setPageIndex] = useState<number>(0);\r\n    const [hasData, setHasData] = useState<boolean>(true);\r\n    const [isLoadingData, setIsLoadingData] = useState<boolean>(true);\r\n    const [expenses, setExpenses] = useState<Expense[]>([]);\r\n    const [hasNextPage, setHasNextPage] = useState<boolean>(true);\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", []);\r\n\r\n    const [dialog, setDialog] = useState<{\r\n        isOpen: boolean, \r\n        action: \"update\" | \"create\" | \"delete\",\r\n        itemId: number\r\n    }>({isOpen: false, action: \"update\", itemId: 0});\r\n\r\n    const classes = useStyles();\r\n\r\n    useNonInitialEffect(() => {\r\n        if(!dialog.isOpen) //if we close nested dialog, we rerender whole component\r\n        {\r\n            setPageIndex(0);\r\n            setHasData(true);\r\n            setIsLoadingData(true);\r\n            setHasNextPage(true);\r\n            setExpenses([...[]]);\r\n        }\r\n    }, [dialog]);\r\n\r\n    useEffect(() => {\r\n        if (isLoadingData)\r\n        {\r\n            handleLoadMore();\r\n        }\r\n      }, [isLoadingData]);\r\n\r\n    const handleLoadMore = () => {\r\n        if(hasNextPage)\r\n        {\r\n            setIsLoadingData(true);\r\n            const request: PagedRequest = {\r\n            pageIndex: pageIndex,\r\n            pageSize: pageSize\r\n        };\r\n\r\n        ExpenseService.GetPagedUserExpenses(request, props.topic)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    if(result.data.total == 0)\r\n                    {\r\n                        setHasData(false);\r\n                    }\r\n                    setExpenses([...expenses, ...result.data.items]);\r\n                    setHasNextPage(result.data.items.length == pageSize);\r\n                    setIsLoadingData(false);\r\n                    setPageIndex(pageIndex + 1);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    const infiniteRef = useInfiniteScroll({\r\n        loading:isLoadingData,\r\n        hasNextPage,\r\n        onLoadMore: handleLoadMore,\r\n        scrollContainer: \"parent\"\r\n      });\r\n\r\n      const handleClose = () => {\r\n          setDialog({...dialog, isOpen: false});\r\n      }\r\n      \r\n      const handleOpen = (action: \"update\" | \"create\" | \"delete\", itemId?: number) => {\r\n        if(itemId == undefined)\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action});\r\n        }\r\n        else\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action, itemId: itemId})\r\n        }\r\n      }\r\n\r\n      const GetExpense = async (expenseId: number) => {\r\n        return ExpenseService.GetExpense(expenseId)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    return{\r\n                        expense: result.data,\r\n                        successed: true,\r\n                        description: \"Successed\"\r\n                    }\r\n                }\r\n                if(result.response.status == 404)\r\n                {\r\n                    return{\r\n                        successed: false,\r\n                        description: \"Expense has already deleted\"\r\n                    };\r\n                }\r\n                return{\r\n                    successed: false,\r\n                    description: \"You do not have access to this expense\"\r\n                };\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n\r\n                return{\r\n                    successed: false,\r\n                    description: \"Something went wrong\"\r\n                };\r\n            })\r\n      }\r\n\r\n    if(dialog.isOpen)\r\n    {\r\n        if(dialog.action == \"create\")\r\n        {\r\n            return(<CreateExpenseForm topic={props.topic} handleClose={handleClose} />);\r\n        }\r\n\r\n        let result: {\r\n            expense?: Expense,\r\n            successed: boolean,\r\n            description: string\r\n        } = {\r\n            successed: false,\r\n            description: \"\"\r\n        }\r\n\r\n        GetExpense(dialog.itemId).then(res => result = res);\r\n        \r\n        if(!result.successed || result.expense == undefined)\r\n        {\r\n            return(\r\n                <React.Fragment>\r\n                    <DialogTitle id=\"scroll-dialog-title\">\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography variant=\"h6\">Error!</Typography>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers={true}>\r\n                        <DialogContentText>\r\n                            <Typography>\r\n                                {result.description}\r\n                            </Typography>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            onClick={handleClose}\r\n                            >\r\n                            <Typography>\r\n                                Close\r\n                            </Typography>\r\n                        </Button>\r\n                    </DialogActions>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        if(dialog.action == \"update\")\r\n        {\r\n            return(<EditExpenseForm topic={props.topic} \r\n                expense={result.expense} handleClose={handleClose} />);\r\n        }\r\n\r\n        setDialog({...dialog, isOpen: false});\r\n\r\n        // let result: {\r\n        //     expense?: Expense;\r\n        //     successed: boolean;\r\n        //     description: string;\r\n        // } = {\r\n        //     successed: false,\r\n        //     description: \"\"\r\n        // }\r\n\r\n        // GetExpense(dialog.itemId).then(response => {\r\n        //     result = response;\r\n        // });\r\n\r\n\r\n        // if(dialog.action == \"delete\")\r\n        // {\r\n        //     return(\r\n        //         <React.Fragment>\r\n        //             <DialogTitle id=\"scroll-dialog-title\">\r\n        //                 <Grid container justify=\"center\" xs={12}>\r\n        //                     <Typography variant=\"h6\">{result.expense.title}</Typography>\r\n        //                 </Grid>\r\n        //             </DialogTitle>\r\n        //             <DialogContent dividers={true}>\r\n        //                 <DialogContentText>\r\n        //                     <Typography>\r\n        //                         Are you sure you want to delete this expense?\r\n        //                     </Typography>\r\n        //                 </DialogContentText>\r\n        //             </DialogContent>\r\n        //             <DialogActions>\r\n        //                 <Button \r\n        //                     variant=\"contained\" \r\n        //                     color=\"primary\"\r\n        //                     onClick={() => {DeleteExpense(dialog.itemId).then(result => {\r\n        //                         console.log(JSON.stringify(result));\r\n        //                         handleClose();\r\n        //                         }\r\n        //                         );}}\r\n        //                     >\r\n        //                     <Typography>\r\n        //                         Delete\r\n        //                     </Typography>\r\n        //                 </Button>\r\n        //                 <Button \r\n        //                     variant=\"contained\" \r\n        //                     color=\"primary\"\r\n        //                     onClick={handleClose}\r\n        //                     >\r\n        //                     <Typography>\r\n        //                         Cancel\r\n        //                     </Typography>\r\n        //                 </Button>\r\n        //             </DialogActions>\r\n        //         </React.Fragment>\r\n        //     );\r\n        // }\r\n\r\n        // return(\r\n        //     <React.Fragment>\r\n        //         <DialogTitle id=\"scroll-dialog-title\">\r\n        //             <Grid container justify=\"center\" xs={12}>\r\n        //                 <Typography variant=\"h6\">{props.topic.name}</Typography>\r\n        //             </Grid>\r\n        //         </DialogTitle>\r\n        //         <DialogContent dividers={true}>\r\n        //             <DialogContentText>\r\n\r\n        //             </DialogContentText>\r\n        //         </DialogContent>\r\n        //         <DialogActions>\r\n        //             <Button \r\n        //                 variant=\"contained\" \r\n        //                 color=\"primary\"\r\n        //                 onClick={handleClose}\r\n        //                 >\r\n        //                 <Typography>\r\n        //                     Cancel\r\n        //                 </Typography>\r\n        //             </Button>\r\n        //             <Button \r\n        //                 variant=\"contained\" \r\n        //                 color=\"primary\"\r\n        //                 onClick={handleClose}\r\n        //                 >\r\n        //                 <Typography>\r\n        //                     Cancel\r\n        //                 </Typography>\r\n        //             </Button>\r\n        //         </DialogActions>\r\n        //     </React.Fragment>\r\n        // );\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <DialogTitle id=\"scroll-dialog-title\">\r\n                <Grid container direction=\"row-reverse\">\r\n                    <Button color=\"secondary\" variant=\"outlined\" onClick={() => handleOpen(\"create\")}>\r\n                        Create\r\n                    </Button>\r\n                </Grid>\r\n                <Grid container justify=\"center\" xs={12}>\r\n                    <Typography variant=\"h6\">{props.topic.name}</Typography>\r\n                </Grid>\r\n            </DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                <DialogContentText id=\"scroll-dialog-description\" ref={infiniteRef}\r\n                >\r\n                    {!hasData ?\r\n                        <Grid container xs={12} justify=\"center\">\r\n                            <Typography variant=\"h6\">\r\n                                You do not have any {props.topic.name} expeses\r\n                            </Typography>\r\n                        </Grid>\r\n                        : expenses.map((expense) => {\r\n\r\n                        let currencyCode: string = \"\";\r\n                        let purse = pursesData.find(p => p.id == expense.purseId);\r\n                        \r\n                        if(purse != null && purse != undefined)\r\n                        {\r\n                            currencyCode = purse.currencyCode.toUpperCase();\r\n                        }\r\n\r\n                        return(\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={expense.id + \"-content\"}\r\n                                id={expense.id + \"-header\"}\r\n                                >\r\n                                <Typography className={classes.heading}>{expense.title}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                <Grid container xs={12}>\r\n                                    <Grid container item xs={12}>\r\n                                        <Typography>\r\n                                            {expense.title}<br/>\r\n                                            Date: {expense.date.getDate()}/\r\n                                            {GetMonthName(expense.date.getMonth())}/\r\n                                            {expense.date.getFullYear()}\r\n                                            <br/>\r\n                                            Sum: {expense.money} {currencyCode}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item style={{padding:10}} container xs={12} direction=\"row-reverse\">\r\n                                        <Button variant=\"contained\" color=\"secondary\" className={classes.buttons}>\r\n                                            <Typography>\r\n                                                Delete\r\n                                            </Typography>\r\n                                        </Button>\r\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.buttons}>\r\n                                            <Typography>\r\n                                                Edit\r\n                                            </Typography>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n\r\n                        );\r\n                    })}\r\n                    {isLoadingData && \r\n                        <Grid container xs={12} justify=\"center\">\r\n                            <Grid container item xs={12} justify=\"center\">\r\n                                <CircularProgress color=\"secondary\" />\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify=\"center\">\r\n                                <Typography variant=\"h6\">\r\n                                    Loading expenses...\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={props.handleClose}\r\n                    >\r\n                    <Typography>\r\n                        Close\r\n                    </Typography>\r\n                </Button>\r\n            </DialogActions>     \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface TopicPaperProps\r\n{\r\n    topic: TopicWithExpenses\r\n}\r\n\r\nexport const TopicPaper: React.FC<TopicPaperProps> = (props) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    \r\n    const handleOpen = () => {\r\n        setIsOpen(true);\r\n      };\r\n\r\n    const handleClose = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return(\r\n        <Grid item xs={8} xl={7}>\r\n                                <Button style={{width:\"100%\", padding:0}} onClick={handleOpen}>\r\n                                <Paper elevation={20} style={{marginBottom:10, width:\"100%\"}}\r\n                                >\r\n                                    <Box display=\"flex\" p={1}\r\n                                    style={{backgroundColor: \"black\", color:\"white\",\r\n                                    borderRadius:\"10px 10px 0 0\"\r\n                                }} \r\n                                    justifyContent=\"center\">\r\n                                        <Typography>{props.topic.name}</Typography>\r\n                                    </Box>\r\n                                    {\r\n                                        props.topic.expenses.length == 0 &&\r\n                                        <Box display=\"flex\" justifyContent=\"center\"\r\n                                        flexWrap=\"wrap\">\r\n                                            <Typography variant=\"h5\">\r\n                                                There are not any expenses\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    }\r\n                                    {props.topic.expenses.map((expense) => {\r\n                                    return(\r\n                                    <Box display=\"flex\" justifyContent=\"center\"\r\n                                    flexWrap=\"wrap\" key={expense.id}\r\n                                    >\r\n                                        <Typography>\r\n                                            {expense.title} - {expense.money}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    );\r\n                                })}\r\n                        </Paper>\r\n                    </Button>\r\n                    <Dialog open={isOpen}\r\n                    scroll=\"paper\" aria-labelledby=\"scroll-dialog-title\"\r\n                    aria-describedby=\"scroll-dialog-description\"\r\n                    fullWidth={useMediaQuery(theme.breakpoints.down('lg'))}\r\n                    classes={{paper: classes.dialogPaper}}\r\n                    >\r\n                        <TopicExpensesList topic={{\r\n                            id: props.topic.id,\r\n                            name: props.topic.name\r\n                        }} \r\n                        handleClose={handleClose}\r\n                        />\r\n                    </Dialog>\r\n                </Grid>\r\n    );\r\n}\r\n\r\nexport default TopicPaper;"]},"metadata":{},"sourceType":"module"}