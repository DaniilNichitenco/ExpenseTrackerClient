{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Pages\\\\HomePage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CircularProgress } from '@material-ui/core';\nimport PursesDoughnutDiagram from '../Diagrams/PursesDoughnutDiagram';\nimport { Grid, makeStyles, Tab, Tabs, Box } from '@material-ui/core';\nimport { PursesDefault } from '../../Data/Models/Purses/default/PurseDefault';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport PursesService from '../../Services/purse.services/Purse.service';\nimport { ExpensesForSumDefault } from \"../../Data/Models/Expenses/default/ExpenseForSumDefault\";\nimport ExpenseService from \"../../Services/expense.service/ExpenseService\";\n\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 0,\n      m: 4,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_c = TabPanel;\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    widht: \"fit-content\"\n  }\n});\n\nconst HomePage = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isLoadingPurses, setIsLoadingPurses] = useState(true);\n  const [isLoadingExpenses, setIsLoadingExpenses] = useState(true);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", PursesDefault);\n  const [dailyExpenseSum, setDailyExpenseSum, removeDailyExpenseSum] = useSessionStorage(\"dailyExpenseSum\", ExpensesForSumDefault);\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    if (pursesData == PursesDefault) {\n      PursesService.GetCurrentUserPurses().then(result => {\n        if (result.response.status == 200) {\n          setPursesData(result.data);\n          setIsLoadingPurses(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoadingPurses(false);\n    }\n\n    if (dailyExpenseSum == ExpensesForSumDefault) {\n      ExpenseService.GetExpensesSumForToday().then(result => {\n        if (result.response.status == 200) {\n          console.log(result.data);\n          setDailyExpenseSum(result.data);\n          setIsLoadingExpenses(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoadingExpenses(false);\n    }\n  }, []);\n\n  if (isLoadingPurses || isLoadingExpenses) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      className: \"contentDiv\",\n      xs: 10,\n      xl: 9,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        justify: \"center\",\n        xs: 10,\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          component: Tabs,\n          item: true,\n          xs: 6 // style={{width:300}}\n          ,\n          value: value,\n          onChange: handleChange,\n          indicatorColor: \"primary\",\n          textColor: \"primary\",\n          centered: true,\n          children: pursesData.map(purse => /*#__PURE__*/_jsxDEV(Grid, {\n            component: Tab,\n            item: true,\n            label: purse.currencyCode\n          }, purse.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        justify: \"center\",\n        xs: 10,\n        children: pursesData.map((purse, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          component: TabPanel,\n          value: value,\n          index: index,\n          children: /*#__PURE__*/_jsxDEV(PursesDoughnutDiagram, {\n            labels: []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"V1XQ6s9CRfj6pzcdfGGsaj9tiqY=\", false, function () {\n  return [useStyles, useSessionStorage, useSessionStorage];\n});\n\n_c2 = HomePage;\nexport default HomePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"HomePage\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Pages/HomePage.tsx"],"names":["React","useEffect","useState","CircularProgress","PursesDoughnutDiagram","Grid","makeStyles","Tab","Tabs","Box","PursesDefault","useSessionStorage","PursesService","ExpensesForSumDefault","ExpenseService","TabPanel","props","children","value","index","other","useStyles","root","flexGrow","widht","HomePage","classes","isLoadingPurses","setIsLoadingPurses","isLoadingExpenses","setIsLoadingExpenses","pursesData","setPursesData","removePursesData","dailyExpenseSum","setDailyExpenseSum","removeDailyExpenseSum","setValue","handleChange","event","newValue","GetCurrentUserPurses","then","result","response","status","data","catch","error","console","log","GetExpensesSumForToday","map","purse","currencyCode","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport PursesDoughnutDiagram from '../Diagrams/PursesDoughnutDiagram';\r\nimport { Grid, makeStyles, Paper, Tab, Tabs, Typography, Box } from '@material-ui/core';\r\nimport { PursesDefault } from '../../Data/Models/Purses/default/PurseDefault';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\nimport PursesService from '../../Services/purse.services/Purse.service';\r\nimport { ExpensesForSumDefault } from \"../../Data/Models/Expenses/default/ExpenseForSumDefault\";\r\nimport { ExpenseForSum } from \"../../Data/Models/Expenses/ExpenseForSum\";\r\nimport ExpenseService from \"../../Services/expense.service/ExpenseService\";\r\n\r\ninterface TabPanelProps {\r\n    index: number,\r\n    value: number,\r\n  }\r\n  \r\n  const TabPanel: React.FC<TabPanelProps> = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={0} m={4}>\r\n              {children}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }  \r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      widht: \"fit-content\"\r\n    },\r\n  });\r\n  \r\nconst HomePage: React.FC = () => {\r\n\r\n    const classes = useStyles();\r\n    const [isLoadingPurses, setIsLoadingPurses] = useState(true);\r\n    const [isLoadingExpenses, setIsLoadingExpenses] = useState(true);\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", PursesDefault);\r\n    const [dailyExpenseSum, setDailyExpenseSum, \r\n        removeDailyExpenseSum] = useSessionStorage<ExpenseForSum[]>(\"dailyExpenseSum\", ExpensesForSumDefault);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n    \r\n        if(pursesData == PursesDefault)\r\n        {\r\n            PursesService.GetCurrentUserPurses()\r\n                .then(result => {\r\n                    if(result.response.status == 200)\r\n                    {\r\n                        setPursesData(result.data);\r\n                        setIsLoadingPurses(false);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        else\r\n        {\r\n            setIsLoadingPurses(false);\r\n        }\r\n\r\n        if(dailyExpenseSum == ExpensesForSumDefault)\r\n            {\r\n                ExpenseService.GetExpensesSumForToday()\r\n                    .then(result => {\r\n\r\n                        if(result.response.status == 200)\r\n                        {\r\n                            console.log(result.data);\r\n                            setDailyExpenseSum(result.data);\r\n                            setIsLoadingExpenses(false);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n            else\r\n            {\r\n                setIsLoadingExpenses(false);\r\n            }\r\n        \r\n      }, []);\r\n\r\n      if(isLoadingPurses || isLoadingExpenses)\r\n      {\r\n        return(<CircularProgress color=\"secondary\" />);\r\n      }\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <Grid container\r\n             justify=\"center\" className=\"contentDiv\" xs={10} xl={9}\r\n             >\r\n                <Grid container item justify=\"center\" xs={10} className={classes.root}>\r\n                    <Grid\r\n                        component={Tabs}\r\n                        item\r\n                        xs={6}\r\n                        // style={{width:300}}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        centered\r\n                    >\r\n                        {pursesData.map((purse) => (\r\n                            <Grid component={Tab} item key={purse.id} label={purse.currencyCode}/>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item justify=\"center\" xs={10}>\r\n                    {pursesData.map((purse, index) => (\r\n                        <Grid item component={TabPanel} value={value} index={index}>\r\n                            <PursesDoughnutDiagram labels={[]} />\r\n                        </Grid>\r\n                        ))}\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <PursesDoughnutDiagram />\r\n                </Grid> */}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}