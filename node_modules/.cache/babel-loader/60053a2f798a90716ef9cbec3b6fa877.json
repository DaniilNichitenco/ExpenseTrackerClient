{"ast":null,"code":"import API from '../Api';\nexport const getWallet = async id => {\n  return API.get(\"/Wallets/\" + id).then(response => {\n    const wallet = response.data;\n    return {\n      data: wallet,\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getAllWallets = async () => {\n  return API.get(\"/Wallets\").then(response => {\n    const wallets = response.data;\n    return {\n      data: wallets,\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getUserWallets = async Id => {\n  return API.get('/Wallets/user/' + Id).then(response => {\n    const wallets = response.data;\n    return {\n      data: wallets,\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getCurrentUserWallets = async () => {\n  return API.get('/Wallets/currentUser/').then(response => {\n    const wallets = response.data;\n    return {\n      data: wallets,\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const updateWallet = async walletsForUpdate => {\n  return API.put('/Wallets', walletsForUpdate).then(response => {\n    return {\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response\n    };\n  });\n};\nexport const createWallet = async walletForUpdate => {\n  return API.post('/Wallets', walletForUpdate).then(response => {\n    console.log(response.data);\n    return {\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response\n    };\n  });\n};\nexport const deleteWallet = async id => {\n  return API.delete('/Wallets/' + id).then(response => {\n    console.log(response);\n    return {\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response\n    };\n  });\n};\nexport const getWalletsForList = async () => {\n  return API.get(\"Wallets/list\").then(response => {\n    let wallets = response.data;\n    wallets.forEach(p => {\n      p.createdAt = new Date(p.createdAt);\n    });\n    return {\n      response: response,\n      data: wallets\n    };\n  }).catch(error => {\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getAvailableCurrencies = async () => {\n  return API.get(\"Wallets/available\").then(response => {\n    const data = response.data;\n    let currencies = [];\n\n    if (data.length > 0) {\n      data.forEach(c => {\n        currencies.push({\n          currencyCode: c\n        });\n      });\n    }\n\n    return {\n      response: response,\n      data: currencies\n    };\n  }).catch(error => {\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getAllCurrenciesAmount = async () => {\n  return API.get(\"Wallets/AmountCurrencies\").then(response => {\n    return {\n      response: response,\n      data: response.data\n    };\n  }).catch(error => {\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport default {\n  getWallet,\n  getAllWallets,\n  getUserWallets,\n  getCurrentUserWallets,\n  updateWallet,\n  createWallet,\n  deleteWallet,\n  getWalletsForList,\n  getAvailableCurrencies,\n  getAllCurrenciesAmount\n};","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Services/wallet.services/Wallet.service.ts"],"names":["API","getWallet","id","get","then","response","wallet","data","catch","error","console","log","getAllWallets","wallets","getUserWallets","Id","getCurrentUserWallets","updateWallet","walletsForUpdate","put","createWallet","walletForUpdate","post","deleteWallet","delete","getWalletsForList","forEach","p","createdAt","Date","getAvailableCurrencies","currencies","length","c","push","currencyCode","getAllCurrenciesAmount"],"mappings":"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","sourcesContent":["import Wallet from '../../Data/Models/Wallets/Wallet';\r\nimport WalletForCreate from '../../Data/Models/Wallets/WalletForCreate';\r\nimport WalletForList from '../../Data/Models/Wallets/WalletForList';\r\nimport WalletsForUpdate from '../../Data/Models/Wallets/WalletForUpdate';\r\nimport API from '../Api';\r\n\r\nexport const getWallet = async (id: number) => {\r\n    return API.get(\"/Wallets/\" + id)\r\n        .then(response => {\r\n            const wallet: Wallet = response.data;\r\n\r\n            return {\r\n                data: wallet,\r\n                response: response\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getAllWallets = async () => {\r\n\r\n    return API.get(\"/Wallets\")\r\n        .then(response => {\r\n            const wallets: Wallet[] = response.data;\r\n\r\n            return {\r\n                data: wallets,\r\n                response: response\r\n            };\r\n        })\r\n        .catch(error =>{\r\n            console.log(error);\r\n\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getUserWallets = async (Id: number) => {\r\n\r\n    return API.get('/Wallets/user/' + Id)\r\n        .then(response => {\r\n            const wallets: Wallet[] = response.data;\r\n\r\n            return {\r\n                data: wallets,\r\n                response: response\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getCurrentUserWallets = async () => {\r\n\r\n    return API.get('/Wallets/currentUser/')\r\n        .then(response => {\r\n            const wallets: Wallet[] = response.data;\r\n\r\n            return {\r\n                data: wallets,\r\n                response: response\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const updateWallet = async (walletsForUpdate: WalletsForUpdate) => {\r\n\r\n    return API.put('/Wallets', walletsForUpdate)\r\n        .then(response => {\r\n            return {response: response};\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {response: error.response};\r\n        })\r\n}\r\n\r\nexport const createWallet = async (walletForUpdate: WalletForCreate) => {\r\n\r\n    return API.post('/Wallets', walletForUpdate)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return {response: response};\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {response: error.response};\r\n        });\r\n}\r\n\r\nexport const deleteWallet = async (id: number) => {\r\n\r\n    return API.delete('/Wallets/' + id)\r\n        .then(response => {\r\n            console.log(response);\r\n            return {response: response};\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {response: error.response};\r\n        });\r\n}\r\n\r\nexport const getWalletsForList = async () => {\r\n    return API.get(\"Wallets/list\")\r\n        .then(response => {\r\n            let wallets: WalletForList[] = response.data;\r\n\r\n            wallets.forEach(p => {\r\n                p.createdAt = new Date(p.createdAt);\r\n            });\r\n            return{\r\n                response: response,\r\n                data: wallets\r\n            };\r\n        })\r\n        .catch(error => {\r\n            return{\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        })\r\n}\r\n\r\nexport const getAvailableCurrencies = async () => {\r\n    return API.get(\"Wallets/available\")\r\n        .then(response => {\r\n\r\n            const data: string[] = response.data;\r\n            let currencies: {\r\n                currencyCode: string\r\n            }[] = [];\r\n\r\n            if(data.length > 0)\r\n            {\r\n                data.forEach(c => {\r\n                    currencies.push({\r\n                        currencyCode: c\r\n                    });\r\n                });\r\n            }\r\n\r\n            return{\r\n                response: response,\r\n                data: currencies\r\n            };\r\n        })\r\n        .catch(error => {\r\n\r\n            return{\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getAllCurrenciesAmount = async () => {\r\n    return API.get(\"Wallets/AmountCurrencies\")\r\n        .then(response => {\r\n            return{\r\n                response: response,\r\n                data: response.data as number\r\n            };\r\n        })\r\n        .catch(error => {\r\n            return{\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport default {\r\n    getWallet,\r\n    getAllWallets,\r\n    getUserWallets,\r\n    getCurrentUserWallets,\r\n    updateWallet,\r\n    createWallet,\r\n    deleteWallet,\r\n    getWalletsForList,\r\n    getAvailableCurrencies,\r\n    getAllCurrenciesAmount\r\n}\r\n"]},"metadata":{},"sourceType":"module"}