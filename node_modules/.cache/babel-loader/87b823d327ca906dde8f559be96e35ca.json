{"ast":null,"code":"import API from '../Api';\nexport const getPurse = async id => {\n  return API.get(\"/purses/\" + id).then(response => {\n    const purse = response.data;\n    return {\n      data: purse,\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getAllPurses = async () => {\n  return API.get(\"/purses\").then(response => {\n    const purses = response.data;\n    return {\n      data: purses,\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getUserPurses = async Id => {\n  return API.get('/Purses/user/' + Id).then(response => {\n    const purses = response.data;\n    return {\n      data: purses,\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getCurrentUserPurses = async () => {\n  return API.get('/Purses/currentUser/').then(response => {\n    const purses = response.data;\n    return {\n      data: purses,\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const updatePurse = async pursesForUpdate => {\n  return API.put('/Purses', pursesForUpdate).then(response => {\n    return {\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response\n    };\n  });\n};\nexport const createPurse = async purseForUpdate => {\n  return API.post('/Purses', purseForUpdate).then(response => {\n    console.log(response.data);\n    return {\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response\n    };\n  });\n};\nexport const deletePurse = async id => {\n  return API.delete('/Purses/' + id).then(response => {\n    console.log(response);\n    return {\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response\n    };\n  });\n};\nexport const getPursesForList = async () => {\n  return API.get(\"Purses/list\").then(response => {\n    let purses = response.data;\n    purses.forEach(p => {\n      p.createdAt = new Date(p.createdAt);\n    });\n    return {\n      response: response,\n      data: purses\n    };\n  }).catch(error => {\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getAvailableCurrencies = async () => {\n  return API.get(\"Purses/available\").then(response => {\n    const data = response.data;\n    let currencies = [];\n\n    if (data.length > 0) {\n      data.forEach(c => {\n        currencies.push({\n          currencyCode: c\n        });\n      });\n    }\n\n    return {\n      response: response,\n      data: currencies\n    };\n  }).catch(error => {\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getAllCurrenciesAmount = async () => {\n  return API.get(\"Purses/AmountCurrencies\").then(response => {\n    return {\n      response: response,\n      data: response.data\n    };\n  }).catch(error => {\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport default {\n  getPurse,\n  getAllPurses,\n  getUserPurses,\n  getCurrentUserPurses,\n  updatePurse,\n  createPurse,\n  deletePurse,\n  getPursesForList,\n  getAvailableCurrencies,\n  getAllCurrenciesAmount\n};","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Services/purse.services/Purse.service.ts"],"names":["API","getPurse","id","get","then","response","purse","data","catch","error","console","log","getAllPurses","purses","getUserPurses","Id","getCurrentUserPurses","updatePurse","pursesForUpdate","put","createPurse","purseForUpdate","post","deletePurse","delete","getPursesForList","forEach","p","createdAt","Date","getAvailableCurrencies","currencies","length","c","push","currencyCode","getAllCurrenciesAmount"],"mappings":"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","sourcesContent":["import Purse from '../../Data/Models/Purses/Purse';\r\nimport PurseForCreate from '../../Data/Models/Purses/PurseForCreate';\r\nimport PurseForList from '../../Data/Models/Purses/PurseForList';\r\nimport PursesForUpdate from '../../Data/Models/Purses/PurseForUpdate';\r\nimport API from '../Api';\r\n\r\nexport const getPurse = async (id: number) => {\r\n    return API.get(\"/purses/\" + id)\r\n        .then(response => {\r\n            const purse: Purse = response.data;\r\n\r\n            return {\r\n                data: purse,\r\n                response: response\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getAllPurses = async () => {\r\n\r\n    return API.get(\"/purses\")\r\n        .then(response => {\r\n            const purses: Purse[] = response.data;\r\n\r\n            return {\r\n                data: purses,\r\n                response: response\r\n            };\r\n        })\r\n        .catch(error =>{\r\n            console.log(error);\r\n\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getUserPurses = async (Id: number) => {\r\n\r\n    return API.get('/Purses/user/' + Id)\r\n        .then(response => {\r\n            const purses: Purse[] = response.data;\r\n\r\n            return {\r\n                data: purses,\r\n                response: response\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getCurrentUserPurses = async () => {\r\n\r\n    return API.get('/Purses/currentUser/')\r\n        .then(response => {\r\n            const purses: Purse[] = response.data;\r\n\r\n            return {\r\n                data: purses,\r\n                response: response\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const updatePurse = async (pursesForUpdate: PursesForUpdate) => {\r\n\r\n    return API.put('/Purses', pursesForUpdate)\r\n        .then(response => {\r\n            return {response: response};\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {response: error.response};\r\n        })\r\n}\r\n\r\nexport const createPurse = async (purseForUpdate: PurseForCreate) => {\r\n\r\n    return API.post('/Purses', purseForUpdate)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return {response: response};\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {response: error.response};\r\n        });\r\n}\r\n\r\nexport const deletePurse = async (id: number) => {\r\n\r\n    return API.delete('/Purses/' + id)\r\n        .then(response => {\r\n            console.log(response);\r\n            return {response: response};\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {response: error.response};\r\n        });\r\n}\r\n\r\nexport const getPursesForList = async () => {\r\n    return API.get(\"Purses/list\")\r\n        .then(response => {\r\n            let purses: PurseForList[] = response.data;\r\n\r\n            purses.forEach(p => {\r\n                p.createdAt = new Date(p.createdAt);\r\n            });\r\n            return{\r\n                response: response,\r\n                data: purses\r\n            };\r\n        })\r\n        .catch(error => {\r\n            return{\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        })\r\n}\r\n\r\nexport const getAvailableCurrencies = async () => {\r\n    return API.get(\"Purses/available\")\r\n        .then(response => {\r\n\r\n            const data: string[] = response.data;\r\n            let currencies: {\r\n                currencyCode: string\r\n            }[] = [];\r\n\r\n            if(data.length > 0)\r\n            {\r\n                data.forEach(c => {\r\n                    currencies.push({\r\n                        currencyCode: c\r\n                    });\r\n                });\r\n            }\r\n\r\n            return{\r\n                response: response,\r\n                data: currencies\r\n            };\r\n        })\r\n        .catch(error => {\r\n\r\n            return{\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getAllCurrenciesAmount = async () => {\r\n    return API.get(\"Purses/AmountCurrencies\")\r\n        .then(response => {\r\n            return{\r\n                response: response,\r\n                data: response.data as number\r\n            };\r\n        })\r\n        .catch(error => {\r\n            return{\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport default {\r\n    getPurse,\r\n    getAllPurses,\r\n    getUserPurses,\r\n    getCurrentUserPurses,\r\n    updatePurse,\r\n    createPurse,\r\n    deletePurse,\r\n    getPursesForList,\r\n    getAvailableCurrencies,\r\n    getAllCurrenciesAmount\r\n}\r\n"]},"metadata":{},"sourceType":"module"}