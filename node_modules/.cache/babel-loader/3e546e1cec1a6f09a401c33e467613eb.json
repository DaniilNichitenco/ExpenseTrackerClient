{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Pages\\\\ProfilePage.tsx\",\n    _s = $RefreshSig$();\n\nimport { GridList, Grid, GridListTile, makeStyles, Typography, Box, Divider, Button } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport './ProfilePageStyles.css';\nimport ProfileTile from '../Tiles/ProfileTile';\nimport { CircularProgress } from '@material-ui/core';\nimport DefaultUser from '../../Data/Models/User/default/DefaultUser';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport PurseExpenseTable from '../Tables/PurseExpenseTable';\nimport { PursesDefault } from '../../Data/Models/Purses/default/PurseDefault';\nimport PursesService from '../../Services/purse.services/Purse.service';\nimport SettingsIcon from '@material-ui/icons/Settings';\nconst useStyles = makeStyles(theme => ({\n  contentList: {\n    justifyContent: \"center\",\n    // alignItems:\"flex-start\",\n    overflowX: \"hidden\",\n    height: \"fit-content\",\n    padding: 20\n  },\n  info: {\n    padding: 25,\n    justifyContent: \"space-between\"\n  },\n  tile: {\n    border: \"1px solid black\"\n  },\n  paperTile: {\n    borderRadius: \"15px 15px 7px 7px\",\n    height: \"fit-content\",\n    width: 300,\n    backgroundColor: '#A0ABEF'\n  },\n  userStatusText: {\n    fontFamily: \"Lucida Bright\"\n  },\n  nameText: {\n    fontFamily: \"Candara\",\n    fontSize: \"inherit\",\n    fontWeight: \"inherit\"\n  },\n  profileHeader: {\n    // backgroundColor: theme.palette.primary.dark,\n    height: \"fit-content\",\n    borderRadius: \"inherit\"\n  },\n  profileHeaderText: {\n    marginTop: 25,\n    marginBottom: 10,\n    marginLeft: 15,\n    fontSize: 23,\n    fontWeight: 'bolder'\n  }\n}));\n\nconst ProfilePage = () => {\n  _s();\n\n  const [userData, setUserData, removeUserData] = useSessionStorage(\"UserInfo\", DefaultUser); // const pursesData = useContext(PursesContext).pursesData;\n\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", PursesDefault);\n  useEffect(() => {\n    if (pursesData == PursesDefault) {\n      PursesService.GetCurrentUserPurses().then(result => {\n        if (result.response.status == 200) {\n          setPursesData(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"contentDiv\",\n      xs: 10,\n      xl: 9,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.profileHeader,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.profileHeaderText,\n          children: \"User profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridList, {\n        cols: 2,\n        className: classes.contentList,\n        spacing: 25,\n        children: [/*#__PURE__*/_jsxDEV(ProfileTile, {\n          xl: 9,\n          xs: 10,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"boxAvatar\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row-reverse\",\n              children: /*#__PURE__*/_jsxDEV(Button // className=\"buttonSetting\"\n              , {\n                variant: \"contained\",\n                color: \"secondary\",\n                startIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 52\n                }, this),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"name\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.nameText,\n              children: [userData.firstName, \" \", userData.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"userStatus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"email\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: userData.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"email\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: userData.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(GridList, {\n            cols: 3,\n            className: classes.info,\n            children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n              style: {\n                width: \"fit-content\",\n                height: \"fit-content\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 58\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Purses:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 65\n                  }, this), pursesData.length]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n              style: {\n                width: \"fit-content\",\n                height: \"fit-content\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Notes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 54\n                }, this), \"0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n              style: {\n                width: \"fit-content\",\n                height: \"fit-content\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Occations:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 58\n                }, this), \"0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n          style: {\n            width: \"fit-content\",\n            height: \"fit-content\",\n            padding: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(ProfileTile, {\n            children: /*#__PURE__*/_jsxDEV(PurseExpenseTable, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfilePage, \"umIZe52bS7Z7fAhr1p+TiiquoFk=\", false, function () {\n  return [useSessionStorage, useStyles, useSessionStorage];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Pages/ProfilePage.tsx"],"names":["GridList","Grid","GridListTile","makeStyles","Typography","Box","Divider","Button","React","useEffect","useState","ProfileTile","CircularProgress","DefaultUser","useSessionStorage","PurseExpenseTable","PursesDefault","PursesService","SettingsIcon","useStyles","theme","contentList","justifyContent","overflowX","height","padding","info","tile","border","paperTile","borderRadius","width","backgroundColor","userStatusText","fontFamily","nameText","fontSize","fontWeight","profileHeader","profileHeaderText","marginTop","marginBottom","marginLeft","ProfilePage","userData","setUserData","removeUserData","classes","isLoading","setIsLoading","pursesData","setPursesData","removePursesData","GetCurrentUserPurses","then","result","response","status","data","catch","error","console","log","firstName","lastName","email","userName","length"],"mappings":"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","sourcesContent":["import { GridList, Grid, GridListTile, makeStyles, Typography, Box, Divider, Button } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport './ProfilePageStyles.css';\r\nimport ProfileTile from '../Tiles/ProfileTile';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport User from '../../Data/Models/User/User';\r\nimport DefaultUser from '../../Data/Models/User/default/DefaultUser';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport PurseExpenseTable from '../Tables/PurseExpenseTable';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\nimport { PursesDefault } from '../../Data/Models/Purses/default/PurseDefault';\r\nimport PursesService from '../../Services/purse.services/Purse.service';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentList: {\r\n        justifyContent:\"center\",\r\n        // alignItems:\"flex-start\",\r\n        overflowX: \"hidden\",\r\n        height: \"fit-content\",\r\n        padding: 20\r\n    },\r\n    info: {\r\n        padding:25,\r\n        justifyContent:\"space-between\", \r\n        \r\n    },\r\n    tile: {\r\n        border: \"1px solid black\"\r\n    },\r\n    paperTile: {\r\n        borderRadius: \"15px 15px 7px 7px\",\r\n        height: \"fit-content\",\r\n        width: 300,\r\n        backgroundColor: '#A0ABEF'\r\n      },\r\n      userStatusText: {\r\n          fontFamily: \"Lucida Bright\"\r\n      },\r\n      nameText: {\r\n          fontFamily: \"Candara\",\r\n          fontSize: \"inherit\",\r\n          fontWeight: \"inherit\"\r\n      },\r\n      profileHeader: {\r\n        // backgroundColor: theme.palette.primary.dark,\r\n        height:\"fit-content\", \r\n        borderRadius: \"inherit\"\r\n    },\r\n    profileHeaderText: {\r\n        marginTop: 25,\r\n        marginBottom:10,\r\n        marginLeft: 15,\r\n        fontSize: 23,\r\n        fontWeight: 'bolder'\r\n    },\r\n}));\r\n\r\nconst ProfilePage: React.FC = () => {\r\n\r\n    const [userData, setUserData, removeUserData] = useSessionStorage<User>(\"UserInfo\", \r\n    DefaultUser);\r\n    // const pursesData = useContext(PursesContext).pursesData;\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", PursesDefault);\r\n\r\n    useEffect(() => {\r\n        if(pursesData == PursesDefault)\r\n    {\r\n        PursesService.GetCurrentUserPurses()\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    setPursesData(result.data);\r\n                    setIsLoading(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    else\r\n    {\r\n        setIsLoading(false);\r\n    }\r\n    }, []);\r\n\r\n    return(\r\n        <React.Fragment> \r\n            <Grid className=\"contentDiv\" xs={10} xl={9}>\r\n                <div className={classes.profileHeader}>\r\n                    <Typography className={classes.profileHeaderText}>\r\n                        User profile\r\n                    </Typography>\r\n                </div>\r\n                <Divider variant=\"middle\" />\r\n                <GridList cols={2} className={classes.contentList} spacing={25}>\r\n                <ProfileTile xl={9} xs={10}>\r\n                        <Box className=\"boxAvatar\">\r\n                                <Grid container direction=\"row-reverse\">\r\n                                    <Button\r\n                                        // className=\"buttonSetting\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        startIcon={<SettingsIcon />}\r\n                                    >\r\n                                        Delete\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Box className=\"avatar\" />\r\n                            </Box>\r\n                            <Box className=\"name\">\r\n                                <Typography className={classes.nameText}>\r\n                                    {userData.firstName} {userData.lastName}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box className=\"userStatus\">\r\n                            </Box>\r\n                            <Box className=\"email\">\r\n                                <Typography>\r\n                                    {userData.email}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box className=\"email\">\r\n                                <Typography>\r\n                                    {userData.userName}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Divider variant=\"middle\" />\r\n                            <GridList cols={3} className={classes.info}>\r\n                                <GridListTile style={{width: \"fit-content\",height: \"fit-content\"}}>\r\n                                    <Typography>\r\n                                        {\r\n                                            isLoading ? (<CircularProgress color=\"secondary\" />) :\r\n                                                <><b>Purses:</b><br/>{pursesData.length}</>\r\n                                        }    \r\n                                        </Typography>\r\n                                </GridListTile>\r\n                                <GridListTile style={{width: \"fit-content\",height: \"fit-content\"}}>\r\n                                    <Typography>\r\n                                        <b>Notes:</b><br/>0\r\n                                    </Typography>\r\n                                </GridListTile>\r\n                                <GridListTile style={{width: \"fit-content\",height: \"fit-content\"}}>\r\n                                    <Typography>\r\n                                        <b>Occations:</b><br/>0\r\n                                    </Typography>\r\n                                </GridListTile>\r\n                            </GridList>\r\n                        </ProfileTile>\r\n                    <GridListTile style={{width: \"fit-content\", height: \"fit-content\", padding: 10}}>\r\n                        <ProfileTile>\r\n                            <PurseExpenseTable />\r\n                        </ProfileTile>\r\n                    </GridListTile>\r\n                </GridList>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;"]},"metadata":{},"sourceType":"module"}