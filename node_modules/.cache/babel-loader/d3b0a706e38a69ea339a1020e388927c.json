{"ast":null,"code":"import API from '../Api';\nexport const GetAllExpenses = async () => {\n  return API.get(\"/expenses/all\").then(response => {\n    let expenses = [];\n    let data = response.data;\n    data.forEach(element => {\n      let dateString = element.date;\n      let date = dateString.substring(0, 10);\n      let expense = {\n        id: element.id,\n        purseId: element.purseId,\n        title: element.title,\n        money: element.money,\n        date: new Date(date)\n      };\n      expenses.push(expense);\n    });\n    return expenses;\n  }).catch(error => {\n    console.log(error);\n  });\n};\n_c = GetAllExpenses;\nexport const GetExpensesForCurrentYear = async () => {\n  return API.get(\"/expenses/year\").then(response => {\n    let expenses = response.data.expenses;\n    console.log(expenses);\n    return expenses;\n  }).catch(error => {\n    console.log(error);\n    return error.response;\n  });\n};\n_c2 = GetExpensesForCurrentYear;\nexport const DeleteExpense = async id => {\n  API.delete(\"/expenses/\" + id).then(response => {\n    console.log(response);\n  }).catch(error => {\n    console.log(error);\n  });\n};\n_c3 = DeleteExpense;\nexport const UpdateExpense = async id => {\n  return API.put(\"/expenses\").then(response => {\n    console.log(response);\n    return response;\n  }).catch(error => {\n    console.log(error);\n    return error.response;\n  });\n};\n_c4 = UpdateExpense;\nexport default {\n  GetExpensesForCurrentYear,\n  GetAllExpenses,\n  DeleteExpense\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GetAllExpenses\");\n$RefreshReg$(_c2, \"GetExpensesForCurrentYear\");\n$RefreshReg$(_c3, \"DeleteExpense\");\n$RefreshReg$(_c4, \"UpdateExpense\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Services/expense.service/ExpenseService.tsx"],"names":["API","GetAllExpenses","get","then","response","expenses","data","forEach","element","dateString","date","substring","expense","id","purseId","title","money","Date","push","catch","error","console","log","GetExpensesForCurrentYear","DeleteExpense","delete","UpdateExpense","put"],"mappings":"AAEA,OAAOA,GAAP,MAAgB,QAAhB;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AAEtC,SAAOD,GAAG,CAACE,GAAJ,CAAQ,eAAR,EACFC,IADE,CACGC,QAAQ,IAAI;AACd,QAAIC,QAAmB,GAAG,EAA1B;AACA,QAAIC,IAAU,GAAGF,QAAQ,CAACE,IAA1B;AAEAA,IAAAA,IAAI,CAACC,OAAL,CAAaC,OAAO,IAAI;AACpB,UAAIC,UAAU,GAAGD,OAAO,CAACE,IAAzB;AACA,UAAIA,IAAI,GAAGD,UAAU,CAACE,SAAX,CAAqB,CAArB,EAAwB,EAAxB,CAAX;AACA,UAAIC,OAAe,GAAG;AAClBC,QAAAA,EAAE,EAAEL,OAAO,CAACK,EADM;AAElBC,QAAAA,OAAO,EAAEN,OAAO,CAACM,OAFC;AAGlBC,QAAAA,KAAK,EAAEP,OAAO,CAACO,KAHG;AAIlBC,QAAAA,KAAK,EAAER,OAAO,CAACQ,KAJG;AAKlBN,QAAAA,IAAI,EAAE,IAAIO,IAAJ,CAASP,IAAT;AALY,OAAtB;AAQAL,MAAAA,QAAQ,CAACa,IAAT,CAAcN,OAAd;AACH,KAZD;AAcA,WAAOP,QAAP;AACH,GApBE,EAqBFc,KArBE,CAqBIC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAvBE,CAAP;AAwBH,CA1BM;KAAMnB,c;AA4Bb,OAAO,MAAMsB,yBAAyB,GAAG,YAAY;AAEjD,SAAOvB,GAAG,CAACE,GAAJ,CAAQ,gBAAR,EACFC,IADE,CACGC,QAAQ,IAAI;AACd,QAAIC,QAA0B,GAAGD,QAAQ,CAACE,IAAT,CAAcD,QAA/C;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AAEA,WAAOA,QAAP;AACH,GANE,EAOFc,KAPE,CAOIC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAOA,KAAK,CAAChB,QAAb;AACH,GAVE,CAAP;AAWH,CAbM;MAAMmB,yB;AAeb,OAAO,MAAMC,aAAa,GAAG,MAAOX,EAAP,IAAsB;AAE/Cb,EAAAA,GAAG,CAACyB,MAAJ,CAAW,eAAeZ,EAA1B,EACKV,IADL,CACUC,QAAQ,IAAI;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ;AACH,GAHL,EAIKe,KAJL,CAIWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GANL;AAOH,CATM;MAAMI,a;AAWb,OAAO,MAAME,aAAa,GAAG,MAAOb,EAAP,IAAsB;AAE/C,SAAOb,GAAG,CAAC2B,GAAJ,CAAQ,WAAR,EACFxB,IADE,CACGC,QAAQ,IAAI;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ;AACA,WAAOA,QAAP;AACH,GAJE,EAKFe,KALE,CAKIC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAOA,KAAK,CAAChB,QAAb;AACH,GARE,CAAP;AASH,CAXM;MAAMsB,a;AAab,eAAe;AACXH,EAAAA,yBADW;AAEXtB,EAAAA,cAFW;AAGXuB,EAAAA;AAHW,CAAf","sourcesContent":["import Expense from '../../Data/Models/Expenses/Expense';\r\nimport ExpensesForYear from '../../Data/Models/Expenses/ExpensesForYear';\r\nimport API from '../Api';\r\n\r\nexport const GetAllExpenses = async () => {\r\n    \r\n    return API.get(\"/expenses/all\")\r\n        .then(response => {\r\n            let expenses: Expense[] = [];\r\n            let data:any[] = response.data;\r\n\r\n            data.forEach(element => {\r\n                let dateString = element.date;\r\n                let date = dateString.substring(0, 10);\r\n                let expense:Expense = {\r\n                    id: element.id,\r\n                    purseId: element.purseId,\r\n                    title: element.title,\r\n                    money: element.money,\r\n                    date: new Date(date),\r\n                };\r\n                \r\n                expenses.push(expense);\r\n            });\r\n\r\n            return expenses;\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport const GetExpensesForCurrentYear = async () => {\r\n    \r\n    return API.get(\"/expenses/year\")\r\n        .then(response => {\r\n            let expenses:ExpensesForYear[] = response.data.expenses;\r\n            console.log(expenses);\r\n            \r\n            return expenses;\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return error.response;\r\n        });\r\n}\r\n\r\nexport const DeleteExpense = async (id: number) => {\r\n\r\n    API.delete(\"/expenses/\" + id)\r\n        .then(response => {\r\n            console.log(response);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const UpdateExpense = async (id: number) => {\r\n\r\n    return API.put(\"/expenses\")\r\n        .then(response => {\r\n            console.log(response);\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return error.response;\r\n        })\r\n}\r\n\r\nexport default {\r\n    GetExpensesForCurrentYear,\r\n    GetAllExpenses,\r\n    DeleteExpense\r\n}"]},"metadata":{},"sourceType":"module"}