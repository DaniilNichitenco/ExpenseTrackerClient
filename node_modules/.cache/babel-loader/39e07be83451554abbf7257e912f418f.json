{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Forms\\\\ExpenseForm\\\\CreateExpenseForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Button, DialogTitle, DialogContent, DialogContentText, DialogActions, makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport InputForm from '../InputForm/InputForm';\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { mapToSelectItems } from \"../../../mapper/mapper\";\nimport useSessionStorage from \"../../../CustomHooks/StorageHooks/useSessionStorage\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./datepickerStyles.css\";\nconst validationSchema = yup.object().shape({\n  title: yup.string().required(\"Enter title!\").min(3, \"Title is too short!\").max(15, \"Should be 15 chars maximum\"),\n  purse: yup.string().required(\"Chose purse!\"),\n  // date: yup.date().required(\"Chose date!\"),\n  // .test(\"is-after\", \"Date should not be after today!\", (value) => {\n  //     if(value == null || value == undefined)\n  //     {\n  //         return false;\n  //     }\n  //     return !IsAfterThen(value, new Date());\n  // }),\n  money: yup.number().required(\"Enter money!\").min(1, \"Minimum value is 1!\").max(9999999999, \"Maximum value is 9999999999!\")\n});\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%' // Fix IE 11 issue.\n\n  }\n}));\nexport const CreateExpenseForm = props => {\n  _s();\n\n  const methods = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const {\n    handleSubmit,\n    errors\n  } = methods;\n  const classes = useStyles();\n  const [items, setitems] = useState([]); // let items: {id: number, label: string}[] = [{id:1, label: \"USD\"}];\n\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", []);\n  useEffect(() => {\n    // items = mapToSelectItems(\"id\", \"currencyCode\", pursesData);\n    setitems(mapToSelectItems(\"id\", \"currencyCode\", pursesData));\n    console.log(items);\n  }, [pursesData]);\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  const filterPassedTime = time => {\n    const currentDate = new Date();\n    const selectedDate = new Date(time);\n    return currentDate > selectedDate;\n  };\n\n  const onSubmit = formValues => {\n    console.log(formValues);\n    console.log(new Date(currentDate));\n  };\n\n  const ExampleCustomInput = ({\n    value,\n    onClick,\n    ...rest\n  }) => /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      width: 100\n    },\n    onClick: onClick,\n    variant: \"contained\",\n    color: \"primary\",\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: props.topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Creating expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          className: classes.form,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"title\",\n                type: \"text\",\n                label: \"Title\",\n                autoFocus: true,\n                required: true,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                variant: \"outlined\",\n                type: \"text\",\n                required: true,\n                label: \"Topic\",\n                name: \"topic\",\n                defaultValue: props.topic.name,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"purse\",\n                type: \"text\",\n                label: \"Purse\",\n                required: true,\n                variant: \"outlined\",\n                select: {\n                  select: true,\n                  items: items\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"money\",\n                type: \"number\",\n                label: \"Money\",\n                required: true,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: currentDate,\n                onChange: date => setCurrentDate(date),\n                showTimeSelect: true,\n                filterDate: filterPassedTime,\n                name: \"date\",\n                className: classes.form,\n                customInput: /*#__PURE__*/_jsxDEV(ExampleCustomInput, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit(onSubmit),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateExpenseForm, \"X60YUTGBxf0AehrnefHirLLouL8=\", false, function () {\n  return [useForm, useStyles, useSessionStorage];\n});\n\n_c = CreateExpenseForm;\nexport default CreateExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateExpenseForm\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Forms/ExpenseForm/CreateExpenseForm.tsx"],"names":["React","useEffect","useState","useForm","FormProvider","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","makeStyles","Grid","Typography","InputForm","yup","yupResolver","mapToSelectItems","useSessionStorage","DatePicker","validationSchema","object","shape","title","string","required","min","max","purse","money","number","useStyles","theme","form","width","CreateExpenseForm","props","methods","resolver","handleSubmit","errors","classes","items","setitems","pursesData","setPursesData","removePursesData","console","log","currentDate","setCurrentDate","Date","filterPassedTime","time","selectedDate","onSubmit","formValues","ExampleCustomInput","value","onClick","rest","topic","name","select","date","handleClose"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useForm, FormProvider, SubmitHandler } from \"react-hook-form\";\r\nimport { Button, DialogTitle, DialogContent, DialogContentText, DialogActions, makeStyles, Theme, Grid, Typography } from \"@material-ui/core\";\r\nimport InputForm from '../InputForm/InputForm';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Topic from \"../../../Data/Models/Topics/Topic\";\r\nimport { mapToSelectItems } from \"../../../mapper/mapper\";\r\nimport useSessionStorage from \"../../../CustomHooks/StorageHooks/useSessionStorage\";\r\nimport Purse from \"../../../Data/Models/Purses/Purse\";\r\nimport { IsAfterThen } from \"../../../Date/CompareDates\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ExpenseForCreate from \"../../../Data/Models/Expenses/ExpenseForCreate\";\r\nimport \"./datepickerStyles.css\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n    title: yup.string().required(\"Enter title!\")\r\n        .min(3, \"Title is too short!\").max(15,  \"Should be 15 chars maximum\"),\r\n    purse: yup.string().required(\"Chose purse!\"),\r\n    // date: yup.date().required(\"Chose date!\"),\r\n        // .test(\"is-after\", \"Date should not be after today!\", (value) => {\r\n        //     if(value == null || value == undefined)\r\n        //     {\r\n        //         return false;\r\n        //     }\r\n            \r\n        //     return !IsAfterThen(value, new Date());\r\n        // }),\r\n    money: yup.number().required(\"Enter money!\")\r\n        .min(1, \"Minimum value is 1!\").max(9999999999, \"Maximum value is 9999999999!\")\r\n  });\r\n\r\ninterface CreateExpenseFormProps\r\n{\r\n    topic: Topic;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n    }\r\n}));\r\n\r\nexport const CreateExpenseForm: React.FC<CreateExpenseFormProps> = (props) => {\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const { handleSubmit, errors } = methods;\r\n    const classes = useStyles();\r\n    const [items, setitems] = useState<{id: number, label: string}[]>([]);\r\n    // let items: {id: number, label: string}[] = [{id:1, label: \"USD\"}];\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", []);\r\n\r\n    useEffect(() => {\r\n        // items = mapToSelectItems(\"id\", \"currencyCode\", pursesData);\r\n        setitems(mapToSelectItems(\"id\", \"currencyCode\", pursesData));\r\n        console.log(items);\r\n    }, [pursesData])\r\n\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n    const filterPassedTime = (time: Date) => {\r\n        const currentDate = new Date();\r\n        const selectedDate = new Date(time);\r\n    \r\n        return currentDate > selectedDate;\r\n      }\r\n    \r\n\r\n    const onSubmit = (formValues: ExpenseForCreate) => {\r\n        console.log(formValues);\r\n        console.log(new Date(currentDate));\r\n    }\r\n\r\n    const ExampleCustomInput = ({ value, onClick, ...rest}: any) => (\r\n        <Button style={{width:100}} onClick={onClick} variant=\"contained\" color=\"primary\">\r\n          {value}\r\n        </Button>\r\n      );\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <FormProvider {...methods}>\r\n            <DialogTitle id=\"scroll-dialog-title\">\r\n                <Grid container justify=\"center\" xs={12}>\r\n                    <Typography variant=\"h6\">{props.topic.name}</Typography>\r\n                </Grid>\r\n            </DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                        <DialogContentText>\r\n                            <Typography>\r\n                                Creating expense\r\n                            </Typography>\r\n                        </DialogContentText>\r\n                            <form noValidate className={classes.form}>\r\n                                <Grid container spacing={2}>\r\n                                        <Grid item xs={5}>\r\n                                                <InputForm \r\n                                                errorObj={errors}\r\n                                                name=\"title\" \r\n                                                type=\"text\"\r\n                                                label=\"Title\" \r\n                                                autoFocus \r\n                                                required\r\n                                                variant=\"outlined\"\r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={5}>\r\n                                            <InputForm\r\n                                                errorObj={errors}\r\n                                                variant=\"outlined\"\r\n                                                type=\"text\"\r\n                                                required\r\n                                                label=\"Topic\"\r\n                                                name=\"topic\"\r\n                                                defaultValue={props.topic.name}\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={5}>\r\n                                            <InputForm \r\n                                            errorObj={errors}\r\n                                            name=\"purse\" \r\n                                            type=\"text\"\r\n                                            label=\"Purse\"\r\n                                            required\r\n                                            variant=\"outlined\"\r\n                                            select={{select: true, items: items}}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={5}>\r\n                                            <InputForm \r\n                                            errorObj={errors}\r\n                                            name=\"money\" \r\n                                            type=\"number\"\r\n                                            label=\"Money\"\r\n                                            required\r\n                                            variant=\"outlined\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8}>\r\n                                            <DatePicker\r\n                                            selected={currentDate}\r\n                                            onChange={(date: Date) => setCurrentDate(date)}\r\n                                            showTimeSelect\r\n                                            filterDate={filterPassedTime}\r\n                                            name=\"date\"\r\n                                            className={classes.form}\r\n                                            customInput={<ExampleCustomInput/>}\r\n                                            />\r\n                                        </Grid> \r\n                                    </Grid>\r\n                                </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            onClick={handleSubmit(onSubmit)}\r\n                            >\r\n                            <Typography>\r\n                                Create\r\n                            </Typography>\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            onClick={props.handleClose}\r\n                            >\r\n                            <Typography>\r\n                                Close\r\n                            </Typography>\r\n                        </Button>\r\n                    </DialogActions>\r\n            </FormProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateExpenseForm;"]},"metadata":{},"sourceType":"module"}