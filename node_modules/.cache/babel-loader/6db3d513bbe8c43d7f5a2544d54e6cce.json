{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\LeftMenu\\\\NavigationBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst styles = theme => createStyles({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)'\n    }\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white,\n    marginTop: theme.spacing(8)\n  },\n  itemActiveItem: {\n    color: '#4fc3f7'\n  },\n  itemPrimary: {\n    fontSize: 'inherit'\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nfunction Navigator(props) {\n  _s();\n\n  const {\n    classes,\n    ...other\n  } = props; // const categories = [\n  //   {\n  //     id: 'Develop',\n  //     children: [\n  //       { id: 'Authentication', icon: <PeopleIcon />, active: true },\n  //       { id: 'Database', icon: <DnsRoundedIcon /> },\n  //       { id: 'Storage', icon: <PermMediaOutlinedIcon /> },\n  //       { id: 'Hosting', icon: <PublicIcon /> },\n  //       { id: 'Functions', icon: <SettingsEthernetIcon /> },\n  //       { id: 'ML Kit', icon: <SettingsInputComponentIcon /> },\n  //     ],\n  //   },\n  //   {\n  //     id: 'Quality',\n  //     children: [\n  //       { id: 'Analytics', icon: <SettingsIcon /> },\n  //       { id: 'Performance', icon: <TimerIcon /> },\n  //       { id: 'Test Lab', icon: <PhonelinkSetupIcon /> },\n  //     ],\n  //   },\n  // ];\n\n  const [categories, updateCategories] = useState();\n\n  const tabToggle = id => {\n    categories.forEach(parent => {\n      parent.children.forEach(child => {\n        if (child.id != id) {\n          child.active = false;\n        } else {\n          child.active = true;\n          console.log(id);\n        }\n      });\n    });\n    console.log(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"permanent\",\n    ...other,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        className: clsx(classes.firebase, classes.item, classes.itemCategory),\n        children: \"Expense Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        className: clsx(classes.item, classes.itemCategory),\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          className: classes.itemIcon,\n          children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          classes: {\n            primary: classes.itemPrimary\n          },\n          children: \"Hello, User!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), categories.map(({\n        id,\n        children\n      }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          className: classes.categoryHeader,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            classes: {\n              primary: classes.categoryHeaderPrimary\n            },\n            children: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), children.map(({\n          id: childId,\n          icon,\n          active\n        }) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          className: clsx(classes.item, active && classes.itemActiveItem),\n          onClick: () => tabToggle(childId),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            className: classes.itemIcon,\n            children: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            classes: {\n              primary: classes.itemPrimary\n            },\n            children: childId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)]\n        }, childId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navigator, \"Agxw9SlTg317zh7IrGAw1HPAgrc=\");\n\n_c = Navigator;\nexport default withStyles(styles)(Navigator);\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigator\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/LeftMenu/NavigationBar.tsx"],"names":["React","clsx","createStyles","withStyles","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","HomeIcon","styles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","marginTop","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","Navigator","props","classes","other","categories","updateCategories","useState","tabToggle","id","forEach","parent","children","child","active","console","log","primary","map","childId","icon"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer, { DrawerProps } from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\r\nimport { Omit } from '@material-ui/types';\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    categoryHeader: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    categoryHeaderPrimary: {\r\n      color: theme.palette.common.white,\r\n    },\r\n    item: {\r\n      paddingTop: 1,\r\n      paddingBottom: 1,\r\n      color: 'rgba(255, 255, 255, 0.7)',\r\n      '&:hover,&:focus': {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n      },\r\n    },\r\n    itemCategory: {\r\n      backgroundColor: '#232f3e',\r\n      boxShadow: '0 -1px 0 #404854 inset',\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    firebase: {\r\n      fontSize: 24,\r\n      color: theme.palette.common.white,\r\n      marginTop: theme.spacing(8)\r\n    },\r\n    itemActiveItem: {\r\n      color: '#4fc3f7',\r\n    },\r\n    itemPrimary: {\r\n      fontSize: 'inherit',\r\n    },\r\n    itemIcon: {\r\n      minWidth: 'auto',\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  });\r\n\r\nexport interface NavigatorProps extends Omit<DrawerProps, 'classes'>, WithStyles<typeof styles> {}\r\n\r\nfunction Navigator(props: NavigatorProps) {\r\n  const { classes, ...other } = props;\r\n  // const categories = [\r\n  //   {\r\n  //     id: 'Develop',\r\n  //     children: [\r\n  //       { id: 'Authentication', icon: <PeopleIcon />, active: true },\r\n  //       { id: 'Database', icon: <DnsRoundedIcon /> },\r\n  //       { id: 'Storage', icon: <PermMediaOutlinedIcon /> },\r\n  //       { id: 'Hosting', icon: <PublicIcon /> },\r\n  //       { id: 'Functions', icon: <SettingsEthernetIcon /> },\r\n  //       { id: 'ML Kit', icon: <SettingsInputComponentIcon /> },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     id: 'Quality',\r\n  //     children: [\r\n  //       { id: 'Analytics', icon: <SettingsIcon /> },\r\n  //       { id: 'Performance', icon: <TimerIcon /> },\r\n  //       { id: 'Test Lab', icon: <PhonelinkSetupIcon /> },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n\r\n  const [categories, updateCategories] = useState()\r\n\r\n  const tabToggle = (id: string) => {\r\n    categories.forEach(parent => {\r\n      parent.children.forEach(child => {\r\n        if(child.id != id)\r\n        {\r\n          child.active = false;\r\n        }\r\n        else\r\n        {\r\n          child.active = true;\r\n          console.log(id);\r\n        }\r\n      });\r\n    });\r\n    console.log(id);\r\n  }\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n          Expense Tracker\r\n        </ListItem>\r\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classes.itemPrimary,\r\n            }}\r\n          >\r\n            Hello, User!\r\n          </ListItemText>\r\n        </ListItem>\r\n        {categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {id}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, active }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n                onClick={() => tabToggle(childId)}\r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  {childId}\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Navigator);"]},"metadata":{},"sourceType":"module"}