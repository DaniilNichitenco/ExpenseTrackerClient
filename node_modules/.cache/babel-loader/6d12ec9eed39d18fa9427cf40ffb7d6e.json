{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\LeftMenu\\\\NavigationBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport { Typography } from '@material-ui/core';\nimport { format } from 'date-fns';\n\nconst styles = theme => createStyles({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)'\n    }\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white,\n    marginTop: theme.spacing(7)\n  },\n  itemActiveItem: {\n    color: '#4fc3f7'\n  },\n  itemPrimary: {\n    fontSize: 'inherit'\n  },\n  itemIcon: {\n    margin: \"auto\",\n    marginRight: 3,\n    minWidth: 'auto'\n  },\n  divider: {\n    marginTop: theme.spacing(2)\n  },\n  drawer: {\n    position: \"fixed\"\n  }\n});\n\nconst Navigator = props => {\n  _s();\n\n  const {\n    classes,\n    ...other\n  } = props;\n  const [userData] = useSessionStorage(\"userData\", undefined, true);\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    ...other,\n    open: true,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        className: clsx(classes.firebase, classes.item, classes.itemCategory),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: format(new Date(), \"MM\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        className: clsx(classes.item, classes.itemCategory),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"Hello, \", userData != undefined && userData.firstName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), props.categories.map(({\n        id,\n        children\n      }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          className: classes.categoryHeader,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            classes: {\n              primary: classes.categoryHeaderPrimary\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                color: \"white\"\n              },\n              children: id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), children.map(({\n          id: childId,\n          icon,\n          to\n        }) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: NavLink,\n          to: to,\n          className: classes.item,\n          activeClassName: location.pathname == to ? classes.itemActiveItem : classes.item,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            className: classes.itemIcon,\n            children: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            classes: {\n              primary: classes.itemPrimary\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: childId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, childId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navigator, \"K8JJx1MbrurZ3AJurlZ6MFshfWg=\", false, function () {\n  return [useSessionStorage, useLocation];\n});\n\n_c = Navigator;\nexport default withStyles(styles)(Navigator);\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigator\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/LeftMenu/NavigationBar.tsx"],"names":["React","clsx","createStyles","withStyles","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","NavLink","useLocation","useSessionStorage","Typography","format","styles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","marginTop","itemActiveItem","itemPrimary","itemIcon","margin","marginRight","minWidth","divider","drawer","position","Navigator","props","classes","other","userData","undefined","location","Date","firstName","categories","map","id","children","primary","childId","icon","to","pathname"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer, { DrawerProps } from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Omit } from '@material-ui/types';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport GetDay from '../../Date/DayOfWeek';\r\nimport { Typography } from '@material-ui/core';\r\nimport User from '../../Data/Models/User/User';\r\nimport { format, getDay } from 'date-fns';\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    categoryHeader: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    categoryHeaderPrimary: {\r\n      color: theme.palette.common.white,\r\n    },\r\n    item: {\r\n      paddingTop: 1,\r\n      paddingBottom: 1,\r\n      color: 'rgba(255, 255, 255, 0.7)',\r\n      '&:hover,&:focus': {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n      },\r\n    },\r\n    itemCategory: {\r\n      backgroundColor: '#232f3e',\r\n      boxShadow: '0 -1px 0 #404854 inset',\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    firebase: {\r\n      fontSize: 24,\r\n      color: theme.palette.common.white,\r\n      marginTop: theme.spacing(7)\r\n    },\r\n    itemActiveItem: {\r\n      color: '#4fc3f7',\r\n    },\r\n    itemPrimary: {\r\n      fontSize: 'inherit',\r\n    },\r\n    itemIcon: {\r\n      margin: \"auto\",\r\n      marginRight: 3,\r\n      minWidth: 'auto',\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    drawer:{\r\n      position: \"fixed\"\r\n    }\r\n  });\r\n\r\nexport interface NavigatorProps extends Omit<DrawerProps, 'classes'>, WithStyles<typeof styles> \r\n{\r\n  categories: {\r\n    id: string;\r\n    children: {\r\n      id: string;\r\n      icon: JSX.Element;\r\n      to: string;\r\n    }[];\r\n  }[];\r\n}\r\n\r\nconst Navigator: React.FC<NavigatorProps> = (props: NavigatorProps) => {\r\n  const { classes, ...other } = props;\r\n\r\n  const [userData] = useSessionStorage<User | undefined>(\"userData\", undefined, true);\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Drawer className={classes.drawer} variant=\"permanent\" {...other} open={true}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n          <Typography variant=\"h5\">{format(new Date(), \"MM\")}</Typography>\r\n        </ListItem>\r\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\r\n          <Typography variant=\"h5\">Hello, {userData != undefined && userData.firstName}!</Typography>\r\n        </ListItem>\r\n        {props.categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\" style={{color: \"white\"}}>\r\n                  {id}\r\n                </Typography>\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, to }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                component={NavLink}\r\n                to={to}\r\n                className={classes.item}\r\n                activeClassName={location.pathname == to ? classes.itemActiveItem : classes.item}\r\n                \r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    {childId}\r\n                  </Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Navigator);"]},"metadata":{},"sourceType":"module"}