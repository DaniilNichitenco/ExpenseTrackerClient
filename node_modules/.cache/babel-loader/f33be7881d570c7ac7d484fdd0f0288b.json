{"ast":null,"code":"import _regeneratorRuntime from\"D:/vscommunity/ExpenseTrackerFront/expensetracker/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/vscommunity/ExpenseTrackerFront/expensetracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"D:/vscommunity/ExpenseTrackerFront/expensetracker/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:/vscommunity/ExpenseTrackerFront/expensetracker/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/vscommunity/ExpenseTrackerFront/expensetracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Accordion,AccordionDetails,AccordionSummary,Button,CircularProgress,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,Divider,Grid,makeStyles,Typography,useMediaQuery,useTheme}from'@material-ui/core';import React,{useEffect,useState}from'react';import ExpandMoreIcon from'@material-ui/icons/ExpandMore';import useNonInitialEffect from'../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';import GridPaperHeader from'../GridPaper/GridPaperHeader';import{getMaxUserTopics,getTopicsForList}from'../../Services/topic.services/TopicService';import CreateTopicForm from'../Forms/topicForms/CreateTopicForm';import EditTopicForm from'../Forms/topicForms/EditTopicForm';var useStyles=makeStyles(function(theme){return{heading:{fontSize:theme.typography.pxToRem(15),fontWeight:theme.typography.fontWeightRegular},buttons:{width:100}};});export var TopicsPage=function TopicsPage(){var classes=useStyles();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoadingTopics=_useState2[0],setIsLoadingTopics=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),topicsForList=_useState4[0],setTopicsForList=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),maxCountTopics=_useState6[0],setMaxCountTopics=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isLoadingCurrencies=_useState8[0],setIsLoadingCurrencies=_useState8[1];var theme=useTheme();var _useState9=useState({isOpen:false,action:\"update\",itemId:0}),_useState10=_slicedToArray(_useState9,2),dialog=_useState10[0],setDialog=_useState10[1];var width=useMediaQuery(theme.breakpoints.down('lg'));var handleOpen=function handleOpen(action,itemId){if(itemId==undefined){setDialog(_objectSpread(_objectSpread({},dialog),{},{isOpen:true,action:action}));}else{setDialog(_objectSpread(_objectSpread({},dialog),{},{isOpen:true,action:action,itemId:itemId}));}};var handleClose=function handleClose(){setDialog(_objectSpread(_objectSpread({},dialog),{},{isOpen:false}));};useEffect(function(){getTopicsForList().then(function(res){if(res.response.status==200){setTopicsForList(_toConsumableArray(res.data));setIsLoadingTopics(false);}});getMaxUserTopics().then(function(res){if(res.response.status==200){setMaxCountTopics(res.data);setIsLoadingCurrencies(false);}});},[]);useNonInitialEffect(function(){if(!dialog.isOpen)//if we close nested dialog, we rerender whole component\n{setIsLoadingTopics(true);getTopicsForList().then(function(res){if(res.response.status==200){setTopicsForList(_toConsumableArray(res.data));setIsLoadingTopics(false);}});}},[dialog]);var deleteTopic=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:deleteTopic(id).then(function(res){handleClose();}).catch(function(error){console.log(error);handleClose();});case 1:case\"end\":return _context.stop();}}},_callee);}));return function deleteTopic(_x){return _ref.apply(this,arguments);};}();if(isLoadingTopics){return/*#__PURE__*/_jsx(Grid,{container:true,xs:12,justify:\"center\",children:/*#__PURE__*/_jsx(CircularProgress,{color:\"secondary\"})});}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Grid,{container:true,justify:\"center\",alignItems:\"baseline\",className:\"contentDiv\",xs:10,xl:9,children:/*#__PURE__*/_jsxs(Grid,{item:true,container:true,xs:12,spacing:5,children:[/*#__PURE__*/_jsxs(Grid,{item:true,container:true,xs:12,direction:\"row-reverse\",spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:isLoadingTopics||isLoadingCurrencies?/*#__PURE__*/_jsx(CircularProgress,{color:\"secondary\"}):/*#__PURE__*/_jsx(Button,{color:\"secondary\",disabled:topicsForList.length>=maxCountTopics,variant:\"outlined\",onClick:function onClick(){handleOpen(\"create\");},children:\"Create\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Count topics: \",isLoadingTopics?/*#__PURE__*/_jsx(CircularProgress,{color:\"secondary\"}):topicsForList.length,\"/\",isLoadingCurrencies?/*#__PURE__*/_jsx(CircularProgress,{color:\"secondary\"}):maxCountTopics]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Divider,{variant:\"middle\"})})]}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:12,justify:\"center\",spacing:2,children:isLoadingTopics?/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(CircularProgress,{color:\"secondary\"})}):topicsForList.length==0?/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"There are not any topics\"})}):topicsForList.map(function(topic){return/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:12,justify:\"center\",children:/*#__PURE__*/_jsxs(Accordion,{style:{width:\"100%\"},children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(GridPaperHeader,{style:{margin:0}}),/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),\"aria-controls\":topic.id+\"-content\",id:topic.id+\"-header\",children:/*#__PURE__*/_jsx(Typography,{className:classes.heading,children:topic.name})})]}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsxs(Grid,{container:true,xs:12,spacing:6,children:[/*#__PURE__*/_jsx(Grid,{container:true,item:true,xs:12,children:/*#__PURE__*/_jsxs(Typography,{children:[\"Topic name: \",topic.name,\" \",/*#__PURE__*/_jsx(\"br\",{}),\"Count expenses: \",topic.countExpenses]})}),/*#__PURE__*/_jsxs(Grid,{spacing:3,item:true,container:true,xs:12,direction:\"row-reverse\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:function onClick(){handleOpen(\"delete\",topic.id);},className:classes.buttons,disabled:topic.isGeneral,children:/*#__PURE__*/_jsx(Typography,{children:\"Delete\"})})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){handleOpen(\"update\",topic.id);},className:classes.buttons,disabled:topic.isGeneral,children:/*#__PURE__*/_jsx(Typography,{children:\"Edit\"})})})]})]})})]},topic.id)},topic.id);})})]})}),/*#__PURE__*/_jsx(Dialog,{open:dialog.isOpen,fullWidth:width,children:dialog.action==\"create\"?/*#__PURE__*/_jsx(CreateTopicForm,{handleClose:handleClose}):dialog.action==\"update\"?/*#__PURE__*/_jsx(EditTopicForm,{topicId:dialog.itemId,handleClose:handleClose}):/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsx(Grid,{container:true,justify:\"center\",xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Delete topic?\"})})}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:/*#__PURE__*/_jsx(DialogContentText,{children:/*#__PURE__*/_jsx(Typography,{children:\"Are you sure you want to delete this topic?\"})})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return deleteTopic(dialog.itemId);case 2:case\"end\":return _context2.stop();}}},_callee2);})),children:/*#__PURE__*/_jsx(Typography,{children:\"Delete\"})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleClose,children:/*#__PURE__*/_jsx(Typography,{children:\"Close\"})})]})]})})]});};export default TopicsPage;","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Pages/TopicsPage.tsx"],"names":["Accordion","AccordionDetails","AccordionSummary","Button","CircularProgress","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","Grid","makeStyles","Typography","useMediaQuery","useTheme","React","useEffect","useState","ExpandMoreIcon","useNonInitialEffect","GridPaperHeader","getMaxUserTopics","getTopicsForList","CreateTopicForm","EditTopicForm","useStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","buttons","width","TopicsPage","classes","isLoadingTopics","setIsLoadingTopics","topicsForList","setTopicsForList","maxCountTopics","setMaxCountTopics","isLoadingCurrencies","setIsLoadingCurrencies","isOpen","action","itemId","dialog","setDialog","breakpoints","down","handleOpen","undefined","handleClose","then","res","response","status","data","deleteTopic","id","catch","error","console","log","length","map","topic","margin","name","countExpenses","isGeneral"],"mappings":"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","sourcesContent":["import { Accordion, AccordionDetails, AccordionSummary, Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, Grid, makeStyles, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport GetMonthName from '../../Date/MonthName';\r\nimport { CreatePurseForm } from '../Forms/PursesForm/CreatePurseForm';\r\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\r\nimport EditPurseForm from '../Forms/PursesForm/EditPurseForm';\r\nimport GridPaperHeader from '../GridPaper/GridPaperHeader';\r\nimport { deleteTopic, getMaxUserTopics, getTopicsForList } from '../../Services/topic.services/TopicService';\r\nimport TopicForList from '../../Data/Models/Topics/TopicForList';\r\nimport CreateTopicForm from '../Forms/topicForms/CreateTopicForm';\r\nimport EditTopicForm from '../Forms/topicForms/EditTopicForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n      buttons: {\r\n          width: 100\r\n      }\r\n}));\r\n\r\nexport const TopicsPage: React.FC = () => {\r\n\r\n    const classes = useStyles();\r\n    const [isLoadingTopics, setIsLoadingTopics] = useState<boolean>(true);\r\n    const [topicsForList, setTopicsForList] = useState<TopicForList[]>([]);\r\n    const [maxCountTopics, setMaxCountTopics] = useState<number>(0);\r\n    const [isLoadingCurrencies, setIsLoadingCurrencies] = useState<boolean>(true);\r\n    const theme = useTheme();\r\n    const [dialog, setDialog] = useState<{\r\n        isOpen: boolean, \r\n        action: \"update\" | \"create\" | \"delete\",\r\n        itemId: number\r\n    }>({isOpen: false, action: \"update\", itemId: 0});\r\n    const width = useMediaQuery(theme.breakpoints.down('lg'));\r\n\r\n    const handleOpen = (action: \"update\" | \"create\" | \"delete\", itemId?: number) => {\r\n        if(itemId == undefined)\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action});\r\n        }\r\n        else\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action, itemId: itemId})\r\n        }\r\n      }\r\n\r\n    const handleClose = () => {\r\n        setDialog({...dialog, isOpen: false});\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTopicsForList()\r\n            .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    setTopicsForList([...res.data]);\r\n                    setIsLoadingTopics(false);\r\n                }\r\n            });\r\n\r\n        getMaxUserTopics()\r\n            .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    setMaxCountTopics(res.data);\r\n                    setIsLoadingCurrencies(false);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    useNonInitialEffect(() => {\r\n        if(!dialog.isOpen) //if we close nested dialog, we rerender whole component\r\n        {\r\n            setIsLoadingTopics(true);\r\n            getTopicsForList()\r\n                .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    setTopicsForList([...res.data]);\r\n                    setIsLoadingTopics(false);\r\n                }\r\n            });\r\n        }\r\n    }, [dialog])\r\n\r\n    const deleteTopic = async (id: number) => {\r\n        deleteTopic(id)\r\n            .then(res => {\r\n                handleClose();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                handleClose();\r\n            });\r\n    }\r\n\r\n    if(isLoadingTopics)\r\n    {\r\n      return (\r\n        <Grid container xs={12} justify=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container justify=\"center\" alignItems=\"baseline\"\r\n            className=\"contentDiv\" xs={10} xl={9}>\r\n                <Grid item container xs={12} spacing={5}>\r\n                    <Grid item container xs={12} direction=\"row-reverse\"\r\n                    spacing={2} alignItems=\"center\">\r\n                        <Grid item>\r\n                            {isLoadingTopics || isLoadingCurrencies ? \r\n                            <CircularProgress color=\"secondary\" /> :\r\n                            <Button color=\"secondary\" \r\n                            disabled={topicsForList.length >= maxCountTopics} \r\n                            variant=\"outlined\" onClick={() => {handleOpen(\"create\");}}>\r\n                                Create\r\n                            </Button>\r\n                            }\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\">\r\n                                Count topics: {isLoadingTopics ?\r\n                                <CircularProgress color=\"secondary\" /> :\r\n                                    topicsForList.length}/{isLoadingCurrencies ?\r\n                                <CircularProgress color=\"secondary\" /> :\r\n                                    maxCountTopics}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Divider variant=\"middle\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item container xs={12} justify=\"center\" spacing={2}>\r\n                        {isLoadingTopics ? \r\n                        <Grid item>\r\n                            <CircularProgress color=\"secondary\" />\r\n                        </Grid> :\r\n                        topicsForList.length == 0 ? \r\n                        <Grid item>\r\n                            <Typography variant=\"h5\">\r\n                                There are not any topics\r\n                            </Typography>\r\n                        </Grid> :\r\n                        topicsForList.map((topic) => {\r\n                            return(\r\n                                <Grid key={topic.id} item container xs={12} justify=\"center\">\r\n                                    <Accordion key={topic.id} style={{width: \"100%\"}}>\r\n                                        <Grid item xs={12}>\r\n                                            <GridPaperHeader style={{margin:0}} />\r\n                                            <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls={topic.id + \"-content\"}\r\n                                            id={topic.id + \"-header\"}\r\n                                            >\r\n                                                <Typography className={classes.heading}>\r\n                                                    {topic.name}\r\n                                                </Typography>\r\n                                            </AccordionSummary>\r\n                                        </Grid>\r\n                                        <AccordionDetails>\r\n                                            <Grid container xs={12} spacing={6}>\r\n                                                <Grid container item xs={12}>\r\n                                                    <Typography>\r\n                                                        Topic name: {topic.name} <br/>\r\n                                                        Count expenses: {topic.countExpenses}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid spacing={3}\r\n                                                    item container xs={12} \r\n                                                    direction=\"row-reverse\">\r\n                                                    <Grid item>\r\n                                                        <Button variant=\"contained\" \r\n                                                            color=\"secondary\" \r\n                                                            onClick={() => {handleOpen(\"delete\", topic.id);}}\r\n                                                            className={classes.buttons}\r\n                                                            disabled={topic.isGeneral} >\r\n                                                            <Typography>\r\n                                                                Delete\r\n                                                            </Typography>\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Button variant=\"contained\" \r\n                                                        color=\"primary\" \r\n                                                        onClick={() => {handleOpen(\"update\", topic.id);}}\r\n                                                        className={classes.buttons}\r\n                                                        disabled={topic.isGeneral} >\r\n                                                            <Typography>\r\n                                                                Edit\r\n                                                            </Typography>\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                </Grid>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={dialog.isOpen} fullWidth={width}>\r\n                {dialog.action == \"create\" ? \r\n                <CreateTopicForm handleClose={handleClose} /> :\r\n                dialog.action == \"update\" ?\r\n                <EditTopicForm topicId={dialog.itemId} handleClose={handleClose} /> :\r\n                <React.Fragment>\r\n                    <DialogTitle>\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography variant=\"h6\">Delete topic?</Typography>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers={true}>\r\n                        <DialogContentText>\r\n                            <Typography>\r\n                                Are you sure you want to delete this topic?\r\n                            </Typography>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"secondary\"\r\n                        onClick={async () => {await deleteTopic(dialog.itemId);}}\r\n                        >\r\n                        <Typography>\r\n                            Delete\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={handleClose}\r\n                        >\r\n                        <Typography>\r\n                            Close\r\n                        </Typography>\r\n                    </Button>\r\n                    </DialogActions>\r\n                </React.Fragment>\r\n                }\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TopicsPage;"]},"metadata":{},"sourceType":"module"}