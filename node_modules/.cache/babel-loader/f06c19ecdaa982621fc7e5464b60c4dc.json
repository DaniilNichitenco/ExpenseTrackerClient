{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Router\\\\MainRouter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport SignUpPage from '../Components/Pages/SignUpPage';\nimport UnauthorizedPage from '../Components/Pages/UnauthorizedPage';\nimport PursesContext from '../Context/PursesContext';\nimport UserContext from '../Context/UserContext';\nimport AuthorizedRouter from './AutorizedRouter';\n\nconst MainRouter = () => {\n  _s();\n\n  const [userData, setUserData] = useState(uData);\n  const [pursesData, setPursesData] = useState(pData);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        userData: userData,\n        setUserData: setUserData\n      },\n      children: /*#__PURE__*/_jsxDEV(PursesContext.Provider, {\n        value: {\n          pursesData: pursesData,\n          setPursesData: setPursesData\n        },\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/au\",\n            component: AuthorizedRouter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/registration\",\n            component: SignUpPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: UnauthorizedPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            render: () => /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainRouter, \"7OaN7FcCGJEM5zNBDmtNunX+A/c=\");\n\n_c = MainRouter;\nexport default MainRouter;\nconst uData = {\n  userId: 2,\n  firstName: 'FirstName',\n  lastName: 'LastName',\n  email: \"user@gmail.com\",\n  username: \"user179\",\n  coutOccations: 0,\n  countNotes: 0,\n  textStatus: \" \"\n};\nconst purse1 = {\n  currencyCode: \"MDL\",\n  bill: 1000\n};\nconst purse2 = {\n  currencyCode: \"USD\",\n  bill: 2000\n};\nconst purse3 = {\n  currencyCode: \"EUR\",\n  bill: 3000\n};\nconst pData = {\n  purses: [purse1, purse2, purse3],\n  count: 3\n};\n\nconst getCurrencyCodes = () => {\n  return [\"MDL\", \"USD\", \"EUR\"];\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MainRouter\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Router/MainRouter.tsx"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Redirect","SignUpPage","UnauthorizedPage","PursesContext","UserContext","AuthorizedRouter","MainRouter","userData","setUserData","uData","pursesData","setPursesData","pData","userId","firstName","lastName","email","username","coutOccations","countNotes","textStatus","purse1","currencyCode","bill","purse2","purse3","purses","count","getCurrencyCodes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Redirect\r\n  } from \"react-router-dom\";\r\nimport SignUpPage from '../Components/Pages/SignUpPage';\r\nimport UnauthorizedPage from '../Components/Pages/UnauthorizedPage';\r\nimport PursesContext from '../Context/PursesContext';\r\nimport UserContext from '../Context/UserContext';\r\nimport PurseData from '../Data/PurseData';\r\nimport PursesData from '../Data/PursesData';\r\nimport UserData from '../Data/UserData';\r\nimport AuthorizedRouter from './AutorizedRouter';\r\n\r\n\r\n  const MainRouter: React.FC = () => {\r\n\r\n    const [userData, setUserData] = useState(uData);\r\n    const [pursesData, setPursesData] = useState(pData);\r\n\r\n    return(\r\n        <Router>\r\n            <UserContext.Provider value={{userData:userData, setUserData:setUserData}}>\r\n              <PursesContext.Provider value={{pursesData:pursesData, setPursesData:setPursesData}}>\r\n                <Switch>\r\n                  <Route path=\"/au\" component={AuthorizedRouter} />\r\n                  <Route exact path=\"/registration\" component={SignUpPage} />\r\n                  <Route exact path=\"/\" component={UnauthorizedPage} />\r\n                  <Route render={() => <Redirect to=\"/\" />} />\r\n                </Switch>\r\n              </PursesContext.Provider>\r\n            </UserContext.Provider>\r\n        </Router>\r\n    );\r\n  }\r\n\r\n  export default MainRouter;\r\n\r\nconst uData: UserData = {\r\n  userId: 2,\r\n  firstName: 'FirstName',\r\n  lastName: 'LastName',\r\n  email: \"user@gmail.com\",\r\n  username: \"user179\",\r\n  coutOccations: 0,\r\n  countNotes: 0,\r\n  textStatus: \" \"\r\n}\r\n\r\nconst purse1: PurseData = {\r\n  currencyCode: \"MDL\",\r\n  bill: 1000\r\n};\r\nconst purse2: PurseData = {\r\ncurrencyCode: \"USD\",\r\nbill: 2000\r\n};\r\nconst purse3: PurseData = {\r\ncurrencyCode: \"EUR\",\r\nbill: 3000\r\n};\r\n\r\nconst pData: PursesData = {\r\npurses: [purse1, purse2, purse3],\r\ncount: 3\r\n}\r\n\r\nconst getCurrencyCodes = () => {\r\n  return [\"MDL\", \"USD\", \"EUR\"];\r\n}"]},"metadata":{},"sourceType":"module"}