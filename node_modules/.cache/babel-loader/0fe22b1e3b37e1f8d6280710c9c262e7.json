{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Tables\\\\PurseExpenseTable.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { withStyles, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport { PursesDefault } from '../../Data/Models/Purses/default/PurseDefault';\nimport PursesService from '../../Services/purse.services/Purse.service';\nimport { CircularProgress } from '@material-ui/core';\nimport { ExpensesForSumDefault } from '../../Data/Models/Expenses/default/ExpenseForSumDefault';\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\nconst StyledTableCell = withStyles(theme => createStyles({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => createStyles({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst plan = () => {\n  return {\n    daily: 100,\n    monthly: 1000,\n    yearly: 3000\n  };\n};\n\nconst rows = [createData('USD', 159, 6.0, 24, 4.0), createData('EUR', 237, 9.0, 37, 4.3), createData('MDL', 262, 16.0, 24, 6.0)];\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  },\n  rowHeader: {\n    fontWeight: 600\n  }\n});\n\nconst PurseExpenseTable = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", PursesDefault);\n  useEffect(() => {\n    if (pursesData == PursesDefault) {\n      PursesService.GetCurrentUserPurses().then(result => {\n        if (result.response.status == 200) {\n          setPursesData(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: \"Purse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: \"Daily expenses/plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: \"Monthly expenses/plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: \"Yearly expenses/plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: pursesData.map(purse => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            align: \"center\",\n            className: classes.rowHeader,\n            children: purse.currencyCode.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"tableDailyData\", {\n              currencyCode: purse.currencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 47\n            }, this), \"/\", purse.bill / 30]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"tableMonthlyData\", {\n              currencyCode: purse.currencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 47\n            }, this), \"/\", purse.bill]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"tableYearlyData\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 47\n            }, this), \"/\", purse.bill * 12]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, purse.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PurseExpenseTable, \"zN7nQaZi79zqYha7h47CFzN6HJc=\", false, function () {\n  return [useStyles, useSessionStorage];\n});\n\n_c = PurseExpenseTable;\n\nconst tableDailyData = ({\n  currencyCode\n}) => {\n  _s2();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [dailyExpenseSum, setDailyExpenseSum, removeDailyExpenseSum] = useSessionStorage(\"dailyExpenseSum\", ExpensesForSumDefault);\n  let expenseForSum = 0;\n  useEffect(() => {\n    if (dailyExpenseSum == ExpensesForSumDefault) {\n      ExpenseService.GetExpensesSumForToday().then(result => {\n        if (result.response.status == 200) {\n          setDailyExpenseSum(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 16\n    }, this);\n  }\n\n  let sum = dailyExpenseSum.find(e => e.currencyCode == currencyCode);\n\n  if (sum != undefined) {\n    expenseForSum = sum.sum;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: expenseForSum\n  }, void 0, false);\n};\n\n_s2(tableDailyData, \"fDkveTZxHAf7RMASGrgu1xOQnqc=\", false, function () {\n  return [useSessionStorage];\n});\n\nconst tableMonthlyData = ({\n  currencyCode\n}) => {\n  _s3();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [monlyExpenseSum, setMonlyExpenseSum, removeMonlyExpenseSum] = useSessionStorage(\"monlyExpenseSum\", ExpensesForSumDefault);\n  let expenseForSum = 0;\n  useEffect(() => {\n    if (monlyExpenseSum == ExpensesForSumDefault) {\n      ExpenseService.GetExpensesSumForMonth().then(result => {\n        if (result.response.status == 200) {\n          setMonlyExpenseSum(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 16\n    }, this);\n  }\n\n  let sum = monlyExpenseSum.find(e => e.currencyCode == currencyCode);\n\n  if (sum != undefined) {\n    expenseForSum = sum.sum;\n  }\n\n  return expenseForSum;\n};\n\n_s3(tableMonthlyData, \"eu5uiuZjzwOIfZdk+ydJNLcHGQw=\", false, function () {\n  return [useSessionStorage];\n});\n\nconst tableYearlyData = ({\n  currencyCode\n}) => {\n  _s4();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [yearlyExpenseSum, setYearlyExpenseSum, removeYearlyExpenseSum] = useSessionStorage(\"yearlyExpenseSum\", ExpensesForSumDefault);\n  let expenseForSum = 0;\n  useEffect(() => {\n    if (yearlyExpenseSum == ExpensesForSumDefault) {\n      ExpenseService.GetExpensesSumForYear().then(result => {\n        if (result.response.status == 200) {\n          setYearlyExpenseSum(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 16\n    }, this);\n  }\n\n  let sum = yearlyExpenseSum.find(e => e.currencyCode == currencyCode);\n\n  if (sum != undefined) {\n    expenseForSum = sum.sum;\n  }\n\n  return expenseForSum;\n};\n\n_s4(tableYearlyData, \"/bvOQACZ24LOFlAD6bKm9WExAeg=\", false, function () {\n  return [useSessionStorage];\n});\n\nexport default PurseExpenseTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PurseExpenseTable\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Tables/PurseExpenseTable.tsx"],"names":["React","useEffect","useState","withStyles","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useSessionStorage","PursesDefault","PursesService","CircularProgress","ExpensesForSumDefault","ExpenseService","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","createData","name","calories","fat","carbs","protein","plan","daily","monthly","yearly","rows","useStyles","table","minWidth","rowHeader","fontWeight","PurseExpenseTable","classes","isLoading","setIsLoading","pursesData","setPursesData","removePursesData","GetCurrentUserPurses","then","result","response","status","data","catch","error","console","log","map","purse","currencyCode","toUpperCase","bill","id","tableDailyData","dailyExpenseSum","setDailyExpenseSum","removeDailyExpenseSum","expenseForSum","GetExpensesSumForToday","sum","find","e","undefined","tableMonthlyData","monlyExpenseSum","setMonlyExpenseSum","removeMonlyExpenseSum","GetExpensesSumForMonth","tableYearlyData","yearlyExpenseSum","setYearlyExpenseSum","removeYearlyExpenseSum","GetExpensesSumForYear"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\nimport { PursesDefault } from '../../Data/Models/Purses/default/PurseDefault';\r\nimport PursesService from '../../Services/purse.services/Purse.service';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { ExpensesForSumDefault } from '../../Data/Models/Expenses/default/ExpenseForSumDefault';\r\nimport ExpenseForSum from '../../Data/Models/Expenses/ExpenseForSum';\r\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nfunction createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst plan = () => {\r\n    return(\r\n        {\r\n            daily: 100,\r\n            monthly: 1000,\r\n            yearly: 3000\r\n        }\r\n    );\r\n}\r\n\r\nconst rows = [\r\n  createData('USD', 159, 6.0, 24, 4.0),\r\n  createData('EUR', 237, 9.0, 37, 4.3),\r\n  createData('MDL', 262, 16.0, 24, 6.0),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  rowHeader: {\r\n      fontWeight: 600,\r\n  }\r\n});\r\n\r\nconst PurseExpenseTable:React.FC = () => {\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", PursesDefault);\r\n\r\n  useEffect(() => {\r\n    \r\n    if(pursesData == PursesDefault)\r\n    {\r\n        PursesService.GetCurrentUserPurses()\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    setPursesData(result.data);\r\n                    setIsLoading(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    else\r\n    {\r\n        setIsLoading(false);\r\n    }\r\n    \r\n  }, []);\r\n\r\n  if(isLoading)\r\n  {\r\n    return (<CircularProgress color=\"secondary\" />); \r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"center\">Purse</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Daily expenses/plan</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Monthly expenses/plan</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Yearly expenses/plan</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {pursesData.map((purse) => (\r\n            <StyledTableRow key={purse.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" className={classes.rowHeader}>\r\n                {purse.currencyCode.toUpperCase()}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\"><tableDailyData currencyCode={purse.currencyCode}/>/{purse.bill/30}</StyledTableCell>\r\n              <StyledTableCell align=\"center\"><tableMonthlyData currencyCode={purse.currencyCode}/>/{purse.bill}</StyledTableCell>\r\n              <StyledTableCell align=\"center\"><tableYearlyData  />/{purse.bill*12}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\ninterface TableDataProps\r\n{\r\n    currencyCode:string\r\n}\r\n\r\nconst tableDailyData: React.FC<TableDataProps> = ({currencyCode}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [dailyExpenseSum, setDailyExpenseSum, \r\n        removeDailyExpenseSum] = useSessionStorage<ExpenseForSum[]>(\"dailyExpenseSum\", ExpensesForSumDefault);\r\n\r\n    let expenseForSum: number = 0;\r\n\r\n        useEffect(() => {\r\n            if(dailyExpenseSum == ExpensesForSumDefault)\r\n            {\r\n                ExpenseService.GetExpensesSumForToday()\r\n                    .then(result => {\r\n\r\n                        if(result.response.status == 200)\r\n                        {\r\n                            setDailyExpenseSum(result.data);\r\n                            setIsLoading(false);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n            else\r\n            {\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n\r\n    if(isLoading)\r\n    {\r\n        return(<CircularProgress color=\"secondary\" />);\r\n    }\r\n\r\n    let sum = dailyExpenseSum.find(e => e.currencyCode == currencyCode);\r\n\r\n    if(sum != undefined)\r\n    {\r\n        expenseForSum = sum.sum;\r\n    }\r\n\r\n    return (<>{expenseForSum}</>);\r\n}\r\n\r\nconst tableMonthlyData: React.FC<TableDataProps> = ({currencyCode}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [monlyExpenseSum, setMonlyExpenseSum, \r\n        removeMonlyExpenseSum] = useSessionStorage<ExpenseForSum[]>(\"monlyExpenseSum\", ExpensesForSumDefault);\r\n\r\n    let expenseForSum: number = 0;\r\n\r\n        useEffect(() => {\r\n            if(monlyExpenseSum == ExpensesForSumDefault)\r\n            {\r\n                ExpenseService.GetExpensesSumForMonth()\r\n                    .then(result => {\r\n\r\n                        if(result.response.status == 200)\r\n                        {\r\n                            setMonlyExpenseSum(result.data);\r\n                            setIsLoading(false);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n            else\r\n            {\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n\r\n    if(isLoading)\r\n    {\r\n        return(<CircularProgress color=\"secondary\" />);\r\n    }\r\n\r\n    let sum = monlyExpenseSum.find(e => e.currencyCode == currencyCode);\r\n\r\n    if(sum != undefined)\r\n    {\r\n        expenseForSum = sum.sum;\r\n    }\r\n\r\n    return expenseForSum;\r\n}\r\n\r\nconst tableYearlyData: React.FC<TableDataProps> = ({currencyCode}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [yearlyExpenseSum, setYearlyExpenseSum, \r\n        removeYearlyExpenseSum] = useSessionStorage<ExpenseForSum[]>(\"yearlyExpenseSum\", ExpensesForSumDefault);\r\n\r\n    let expenseForSum: number = 0;\r\n\r\n        useEffect(() => {\r\n            if(yearlyExpenseSum == ExpensesForSumDefault)\r\n            {\r\n                ExpenseService.GetExpensesSumForYear()\r\n                    .then(result => {\r\n\r\n                        if(result.response.status == 200)\r\n                        {\r\n                            setYearlyExpenseSum(result.data);\r\n                            setIsLoading(false);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n            else\r\n            {\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n\r\n    if(isLoading)\r\n    {\r\n        return(<CircularProgress color=\"secondary\" />);\r\n    }\r\n\r\n    let sum = yearlyExpenseSum.find(e => e.currencyCode == currencyCode);\r\n\r\n    if(sum != undefined)\r\n    {\r\n        expenseForSum = sum.sum;\r\n    }\r\n\r\n    return expenseForSum;\r\n}\r\n\r\nexport default PurseExpenseTable;"]},"metadata":{},"sourceType":"module"}