{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Forms\\\\PursesForm\\\\EditPurseForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Button, DialogTitle, DialogContent, DialogContentText, DialogActions, makeStyles, Grid, Typography, CircularProgress } from \"@material-ui/core\";\nimport InputForm from '../InputForm/InputForm';\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./datepickerStyles.css\";\nimport { GetPurse, UpdatePurse } from \"../../../Services/purse.services/Purse.service\";\nconst validationSchema = yup.object().shape({\n  currencyCode: yup.string().required(\"Chose currency code!\"),\n  bill: yup.number().required(\"Enter money!\").min(1, \"Minimum value is 1!\").max(9999999999, \"Maximum value is 9999999999!\")\n});\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%' // Fix IE 11 issue.\n\n  }\n}));\nexport const EditPurseForm = props => {\n  _s();\n\n  const classes = useStyles();\n  const methods = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const {\n    handleSubmit,\n    errors\n  } = methods;\n  const [isLoading, setIsLoading] = useState(true);\n  const [result, setResult] = useState({\n    successed: false,\n    description: \"\"\n  });\n  useEffect(() => {\n    GetResult(props.purseId).then(res => {\n      setResult(res);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const GetResult = async purseId => {\n    return GetPurse(purseId).then(result => {\n      if (result.response.status == 200) {\n        return {\n          purse: result.data,\n          successed: true,\n          description: \"Successed\"\n        };\n      }\n\n      if (result.response.status == 404) {\n        return {\n          successed: false,\n          description: \"Expense has already deleted\",\n          purse: undefined\n        };\n      }\n\n      return {\n        successed: false,\n        description: \"You do not have access to this purse\",\n        purse: undefined\n      };\n    }).catch(error => {\n      console.log(error);\n      return {\n        successed: false,\n        description: \"Something went wrong\",\n        purse: undefined\n      };\n    });\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n  const onSubmit = formValues => {\n    const purseForUpdate = {\n      currencyCode: formValues.currencyCode.toLocaleLowerCase(),\n      bill: formValues.bill,\n      id: props.purseId\n    };\n    UpdatePurse(purseForUpdate).then(res => {\n      console.log(res);\n      props.handleClose();\n    });\n  };\n\n  if (!result.successed || result.purse == undefined) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Error!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: result.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Edit purse \", result.purse.currencyCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          className: classes.form,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 7,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"currencyCode\",\n                type: \"text\",\n                label: \"Currency code\",\n                required: true,\n                variant: \"outlined\",\n                disabled: true,\n                defaultValue: result.purse.currencyCode.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 7,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"bill\",\n                type: \"number\",\n                label: \"Monthly salary\",\n                required: true,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit(onSubmit),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPurseForm, \"mPC5xgwjAAjPv9xM3qT9T7l4RfA=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = EditPurseForm;\nexport default EditPurseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPurseForm\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Forms/PursesForm/EditPurseForm.tsx"],"names":["React","useEffect","useState","useForm","FormProvider","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","makeStyles","Grid","Typography","CircularProgress","InputForm","yup","yupResolver","GetPurse","UpdatePurse","validationSchema","object","shape","currencyCode","string","required","bill","number","min","max","useStyles","theme","form","width","EditPurseForm","props","classes","methods","resolver","handleSubmit","errors","isLoading","setIsLoading","result","setResult","successed","description","GetResult","purseId","then","res","response","status","purse","data","undefined","catch","error","console","log","onSubmit","formValues","purseForUpdate","toLocaleLowerCase","id","handleClose","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Button, DialogTitle, DialogContent, DialogContentText, DialogActions, makeStyles, Theme, Grid, Typography, CircularProgress } from \"@material-ui/core\";\r\nimport InputForm from '../InputForm/InputForm';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Topic from \"../../../Data/Models/Topics/Topic\";\r\nimport { mapToSelectItems } from \"../../../mapper/mapper\";\r\nimport useSessionStorage from \"../../../CustomHooks/StorageHooks/useSessionStorage\";\r\nimport Purse from \"../../../Data/Models/Purses/Purse\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./datepickerStyles.css\";\r\nimport Expense from \"../../../Data/Models/Expenses/Expense\";\r\nimport ExpenseForUpdate from \"../../../Data/Models/Expenses/ExpenseForUpdate\";\r\nimport { GetPurse, UpdatePurse } from \"../../../Services/purse.services/Purse.service\";\r\nimport PurseForUpdate from \"../../../Data/Models/Purses/PurseForUpdate\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n    currencyCode: yup.string().required(\"Chose currency code!\"),\r\n    bill: yup.number().required(\"Enter money!\")\r\n        .min(1, \"Minimum value is 1!\").max(9999999999, \"Maximum value is 9999999999!\")\r\n  });\r\n\r\ninterface EditPurseFormProps\r\n{\r\n    purseId: number;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n    }\r\n}));\r\n\r\nexport const EditPurseForm: React.FC<EditPurseFormProps> = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const { handleSubmit, errors } = methods;\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [result, setResult] = useState<{\r\n        purse?:Purse,\r\n        successed: boolean,\r\n        description: string\r\n    }>({successed: false, description: \"\"});\r\n\r\n    useEffect(() => {\r\n        GetResult(props.purseId)\r\n            .then(res => {\r\n                setResult(res);\r\n                setIsLoading(false);\r\n            })\r\n    }, []);\r\n\r\n    const GetResult = async (purseId: number) => {\r\n        return GetPurse(purseId)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    return{\r\n                        purse: result.data,\r\n                        successed: true,\r\n                        description: \"Successed\"\r\n                    }\r\n                }\r\n                if(result.response.status == 404)\r\n                {\r\n                    return{\r\n                        successed: false,\r\n                        description: \"Expense has already deleted\",\r\n                        purse: undefined\r\n                    };\r\n                }\r\n                return{\r\n                    successed: false,\r\n                    description: \"You do not have access to this purse\",\r\n                    purse: undefined\r\n                };\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n\r\n                return{\r\n                    successed: false,\r\n                    description: \"Something went wrong\",\r\n                    purse: undefined\r\n                };\r\n            })\r\n      }\r\n\r\n      if(isLoading)\r\n      {\r\n        return (\r\n            <Grid container xs={12} justify=\"center\">\r\n              <CircularProgress color=\"secondary\" />\r\n            </Grid>\r\n          );\r\n      }\r\n\r\n      const onSubmit = (formValues: {currencyCode: string, bill: number}) => {\r\n        const purseForUpdate: PurseForUpdate = {\r\n            currencyCode: formValues.currencyCode.toLocaleLowerCase() as \"mdl\" | \"usd\" | \"eur\",\r\n            bill: formValues.bill,\r\n            id: props.purseId\r\n        }\r\n        UpdatePurse(purseForUpdate)\r\n            .then(res => {\r\n                console.log(res);\r\n                props.handleClose();\r\n            });\r\n      }\r\n\r\n    if(!result.successed || result.purse == undefined)\r\n    {\r\n        return(\r\n            <React.Fragment>\r\n                <DialogTitle id=\"scroll-dialog-title\">\r\n                    <Grid container justify=\"center\" xs={12}>\r\n                        <Typography variant=\"h6\">Error!</Typography>\r\n                    </Grid>\r\n                </DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    <DialogContentText>\r\n                        <Typography>\r\n                            {result.description}\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={props.handleClose}\r\n                        >\r\n                        <Typography>\r\n                            Close\r\n                        </Typography>\r\n                    </Button>\r\n                </DialogActions>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <FormProvider {...methods}>\r\n                <DialogTitle id=\"scroll-dialog-title\">\r\n                    <Grid container justify=\"center\" xs={12}>\r\n                        <Typography variant=\"h6\">Edit purse {result.purse.currencyCode}</Typography>\r\n                    </Grid>\r\n                </DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    <form noValidate className={classes.form}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={7}>\r\n                                <InputForm \r\n                                errorObj={errors}\r\n                                name=\"currencyCode\" \r\n                                type=\"text\"\r\n                                label=\"Currency code\"\r\n                                required\r\n                                variant=\"outlined\"\r\n                                disabled\r\n                                defaultValue={result.purse.currencyCode.toUpperCase()}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={7}>\r\n                                <InputForm \r\n                                errorObj={errors}\r\n                                name=\"bill\" \r\n                                type=\"number\"\r\n                                label=\"Monthly salary\"\r\n                                required\r\n                                variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={handleSubmit(onSubmit)}\r\n                        >\r\n                        <Typography>\r\n                            Save\r\n                        </Typography>\r\n                    </Button>\r\n                        <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={props.handleClose}\r\n                        >\r\n                        <Typography>\r\n                            Close\r\n                        </Typography>\r\n                    </Button>\r\n                </DialogActions>\r\n            </FormProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EditPurseForm;"]},"metadata":{},"sourceType":"module"}