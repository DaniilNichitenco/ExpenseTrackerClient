{"ast":null,"code":"import API from '../Api';\nexport const GetAllExpenses = async () => {\n  return API.get(\"/expenses/all\").then(response => {\n    let expenses = [];\n    let data = response.data;\n    data.forEach(element => {\n      let dateString = element.date;\n      let date = dateString.substring(0, 10);\n      let expense = {\n        id: element.id,\n        purseId: element.purseId,\n        title: element.title,\n        money: element.money,\n        date: new Date(date)\n      };\n      expenses.push(expense);\n    });\n    return {\n      response: response,\n      data: expenses\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\n_c = GetAllExpenses;\nexport const GetExpensesForCurrentYear = async () => {\n  return API.get(\"/expenses/year\").then(response => {\n    let expenses = response.data.expenses;\n    console.log(expenses);\n    return {\n      response: response,\n      data: expenses\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\n_c2 = GetExpensesForCurrentYear;\nexport const DeleteExpense = async id => {\n  API.delete(\"/expenses/\" + id).then(response => {\n    console.log(response);\n    return {\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response\n    };\n  });\n};\n_c3 = DeleteExpense;\nexport const UpdateExpense = async id => {\n  return API.put(\"/expenses\").then(response => {\n    console.log(response);\n    return {\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response\n    };\n  });\n};\n_c4 = UpdateExpense;\nexport const GetExpensesSumForYear = async () => {\n  return API.get(\"/expenses/sum/year\").then(response => {\n    console.log(response);\n    const sums = response.data.sums;\n    return {\n      response: response,\n      data: sums\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\n_c5 = GetExpensesSumForYear;\nexport const GetExpensesSumForMonth = async () => {\n  return API.get(\"/expenses/sum/month\").then(response => {\n    console.log(response);\n    const sums = response.data.sums;\n    return {\n      response: response,\n      data: sums\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\n_c6 = GetExpensesSumForMonth;\nexport const GetExpensesSumForToday = async () => {\n  return API.get(\"/expenses/sum/today\").then(response => {\n    console.log(response);\n    const sums = response.data.sums;\n    return {\n      response: response,\n      data: sums\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\n_c7 = GetExpensesSumForToday;\nexport const GetUserExpenses = async () => {\n  return API.get(\"/expenses\").then(response => {\n    let expenses = [];\n    let data = response.data;\n    data.forEach(element => {\n      let dateString = element.date;\n      let date = dateString.substring(0, 10);\n      let expense = {\n        id: element.id,\n        purseId: element.purseId,\n        title: element.title,\n        money: element.money,\n        date: new Date(date)\n      };\n      expenses.push(expense);\n    });\n    return {\n      response: response,\n      data: expenses\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\n_c8 = GetUserExpenses;\nexport const GetUserExpensesByTopic = async topic => {\n  return API.get(\"/expenses/topic/\" + topic.id).then(response => {\n    let expenses = [];\n    let data = response.data;\n    data.forEach(element => {\n      let dateString = element.date;\n      let date = dateString.substring(0, 10);\n      let expense = {\n        id: element.id,\n        purseId: element.purseId,\n        title: element.title,\n        money: element.money,\n        date: new Date(date)\n      };\n      expenses.push(expense);\n    });\n    return {\n      response: response,\n      data: expenses\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\n_c9 = GetUserExpensesByTopic;\nexport const GetPagedUserExpenses = request => {\n  request;\n  return API.post();\n};\n_c10 = GetPagedUserExpenses;\nexport default {\n  GetExpensesForCurrentYear,\n  GetAllExpenses,\n  DeleteExpense,\n  GetExpensesSumForToday,\n  GetExpensesSumForMonth,\n  GetExpensesSumForYear,\n  GetUserExpensesByTopic,\n  GetUserExpenses\n};\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"GetAllExpenses\");\n$RefreshReg$(_c2, \"GetExpensesForCurrentYear\");\n$RefreshReg$(_c3, \"DeleteExpense\");\n$RefreshReg$(_c4, \"UpdateExpense\");\n$RefreshReg$(_c5, \"GetExpensesSumForYear\");\n$RefreshReg$(_c6, \"GetExpensesSumForMonth\");\n$RefreshReg$(_c7, \"GetExpensesSumForToday\");\n$RefreshReg$(_c8, \"GetUserExpenses\");\n$RefreshReg$(_c9, \"GetUserExpensesByTopic\");\n$RefreshReg$(_c10, \"GetPagedUserExpenses\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Services/expense.service/ExpenseService.tsx"],"names":["API","GetAllExpenses","get","then","response","expenses","data","forEach","element","dateString","date","substring","expense","id","purseId","title","money","Date","push","catch","error","console","log","GetExpensesForCurrentYear","DeleteExpense","delete","UpdateExpense","put","GetExpensesSumForYear","sums","GetExpensesSumForMonth","GetExpensesSumForToday","GetUserExpenses","GetUserExpensesByTopic","topic","GetPagedUserExpenses","request","post"],"mappings":"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","sourcesContent":["import Expense from '../../Data/Models/Expenses/Expense';\r\nimport ExpenseForSum from '../../Data/Models/Expenses/ExpenseForSum';\r\nimport ExpensesForYear from '../../Data/Models/Expenses/ExpensesForYear';\r\nimport Topic from '../../Data/Models/Topics/Topic';\r\nimport API from '../Api';\r\n\r\nexport const GetAllExpenses = async () => {\r\n    \r\n    return API.get(\"/expenses/all\")\r\n        .then(response => {\r\n            let expenses: Expense[] = [];\r\n            let data:any[] = response.data;\r\n\r\n            data.forEach(element => {\r\n                let dateString = element.date;\r\n                let date = dateString.substring(0, 10);\r\n                let expense:Expense = {\r\n                    id: element.id,\r\n                    purseId: element.purseId,\r\n                    title: element.title,\r\n                    money: element.money,\r\n                    date: new Date(date),\r\n                };\r\n                \r\n                expenses.push(expense);\r\n            });\r\n\r\n            return {\r\n                response: response,\r\n                data: expenses\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const GetExpensesForCurrentYear = async () => {\r\n    \r\n    return API.get(\"/expenses/year\")\r\n        .then(response => {\r\n            let expenses:ExpensesForYear[] = response.data.expenses;\r\n            console.log(expenses);\r\n            \r\n            return {\r\n                response: response,\r\n                data: expenses\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const DeleteExpense = async (id: number) => {\r\n\r\n    API.delete(\"/expenses/\" + id)\r\n        .then(response => {\r\n            console.log(response);\r\n\r\n            return {response: response};\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            \r\n            return {response: error.response};\r\n        })\r\n}\r\n\r\nexport const UpdateExpense = async (id: number) => {\r\n\r\n    return API.put(\"/expenses\")\r\n        .then(response => {\r\n            console.log(response);\r\n            return {response: response};\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {response: error.response};\r\n        })\r\n}\r\n\r\nexport const GetExpensesSumForYear = async () => {\r\n\r\n    return API.get(\"/expenses/sum/year\")\r\n        .then(response => {\r\n            console.log(response);\r\n            const sums: ExpenseForSum[] = response.data.sums;\r\n\r\n            return {\r\n                response: response,\r\n                data: sums\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const GetExpensesSumForMonth = async () => {\r\n\r\n    return API.get(\"/expenses/sum/month\")\r\n        .then(response => {\r\n            console.log(response);\r\n            const sums: ExpenseForSum[] = response.data.sums;\r\n\r\n            return {\r\n                response: response,\r\n                data: sums\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const GetExpensesSumForToday = async () => {\r\n\r\n    return API.get(\"/expenses/sum/today\")\r\n        .then(response => {\r\n            console.log(response);\r\n            const sums: ExpenseForSum[] = response.data.sums;\r\n\r\n            return {\r\n                response: response,\r\n                data: sums\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const GetUserExpenses = async () => {\r\n\r\n    return API.get(\"/expenses\")\r\n        .then(response => {\r\n            let expenses: Expense[] = [];\r\n            let data:any[] = response.data;\r\n\r\n            data.forEach(element => {\r\n                let dateString = element.date;\r\n                let date = dateString.substring(0, 10);\r\n                let expense:Expense = {\r\n                    id: element.id,\r\n                    purseId: element.purseId,\r\n                    title: element.title,\r\n                    money: element.money,\r\n                    date: new Date(date),\r\n                };\r\n                \r\n                expenses.push(expense);\r\n            });\r\n            \r\n            return {\r\n                response: response,\r\n                data: expenses\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response:error.response,\r\n                data: error.response.data\r\n            };\r\n        })\r\n}\r\n\r\nexport const GetUserExpensesByTopic = async (topic: Topic) => {\r\n\r\n    return API.get(\"/expenses/topic/\" + topic.id)\r\n        .then(response => {\r\n            let expenses: Expense[] = [];\r\n            let data:any[] = response.data;\r\n\r\n            data.forEach(element => {\r\n                let dateString = element.date;\r\n                let date = dateString.substring(0, 10);\r\n                let expense:Expense = {\r\n                    id: element.id,\r\n                    purseId: element.purseId,\r\n                    title: element.title,\r\n                    money: element.money,\r\n                    date: new Date(date),\r\n                };\r\n                \r\n                expenses.push(expense);\r\n            });\r\n            \r\n            return {\r\n                response: response,\r\n                data: expenses\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response:error.response,\r\n                data: error.response.data\r\n            };\r\n        })\r\n}\r\n\r\nexport const GetPagedUserExpenses = (request: PagedRequest) => {\r\n\r\n    request\r\n    return API.post()\r\n}\r\n\r\nexport default {\r\n    GetExpensesForCurrentYear,\r\n    GetAllExpenses,\r\n    DeleteExpense,\r\n    GetExpensesSumForToday,\r\n    GetExpensesSumForMonth,\r\n    GetExpensesSumForYear,\r\n    GetUserExpensesByTopic,\r\n    GetUserExpenses\r\n}"]},"metadata":{},"sourceType":"module"}