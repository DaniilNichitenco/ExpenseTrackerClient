{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\ExpensesList\\\\TopicPaper.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Box, Button, CircularProgress, Dialog, DialogContent, DialogActions, DialogTitle, Grid, makeStyles, Paper, Typography, DialogContentText, useMediaQuery, useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { GetPagedUserExpenses, DeleteExpense } from '../../Services/expense.service/ExpenseService';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport { GetMonthName } from '../../Date/MonthName';\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\nimport CreateExpenseForm from '../Forms/ExpenseForm/CreateExpenseForm';\nimport EditExpenseForm from '../Forms/ExpenseForm/EditExpenseForm';\nimport GridPaperHeader from '../GridPaper/GridPaperHeader';\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  dialogPaper: {\n    maxHeight: \"600px\",\n    minHeight: \"600px\"\n  },\n  buttons: {\n    width: 100\n  }\n}));\n\nconst TopicExpensesList = props => {\n  _s();\n\n  const pageSize = 20;\n  const [pageIndex, setPageIndex] = useState(0);\n  const [hasData, setHasData] = useState(true);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [expenses, setExpenses] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", []);\n  const [dialog, setDialog] = useState({\n    isOpen: false,\n    action: \"update\",\n    itemId: 0\n  });\n  const classes = useStyles();\n  useNonInitialEffect(() => {\n    console.log(dialog);\n\n    if (!dialog.isOpen) //if we close nested dialog, we rerender whole component\n      {\n        console.log(\"rerender\");\n        setPageIndex(0);\n        setHasData(true);\n        setIsLoadingData(true);\n        setHasNextPage(true);\n        setExpenses([...[]]);\n      }\n  }, [dialog]);\n  useEffect(() => {\n    if (isLoadingData) {\n      handleLoadMore();\n    }\n  }, [isLoadingData]);\n\n  const handleLoadMore = () => {\n    if (hasNextPage) {\n      setIsLoadingData(true);\n      const request = {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      };\n      GetPagedUserExpenses(request, props.topic).then(result => {\n        if (result.response.status == 200) {\n          console.log(result.data);\n\n          if (result.data.total == 0) {\n            setHasData(false);\n          }\n\n          setExpenses([...expenses, ...result.data.items]);\n          setHasNextPage(result.data.items.length == pageSize);\n          setIsLoadingData(false);\n          setPageIndex(pageIndex + 1);\n        }\n      });\n    }\n  };\n\n  const infiniteRef = useInfiniteScroll({\n    loading: isLoadingData,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer: \"parent\"\n  });\n\n  const handleClose = () => {\n    setDialog({ ...dialog,\n      isOpen: false\n    });\n  };\n\n  const handleOpen = (action, itemId) => {\n    if (itemId == undefined) {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action\n      });\n    } else {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action,\n        itemId: itemId\n      });\n    }\n  };\n\n  const Delete = async expenseId => {\n    await DeleteExpense(expenseId);\n    handleClose();\n  };\n\n  if (dialog.isOpen && dialog.action != \"delete\") {\n    if (dialog.action == \"create\") {\n      return /*#__PURE__*/_jsxDEV(CreateExpenseForm, {\n        topic: props.topic,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (dialog.action == \"update\") {\n      return /*#__PURE__*/_jsxDEV(EditExpenseForm, {\n        topic: props.topic,\n        expenseId: dialog.itemId,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row-reverse\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"outlined\",\n          onClick: () => handleOpen(\"create\"),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: props.topic.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"scroll-dialog-description\",\n        ref: infiniteRef,\n        children: [!hasData ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"You do not have any \", props.topic.name, \" expeses\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this) : expenses.map(expense => {\n          let currencyCode = \"\";\n          let purse = pursesData.find(p => p.id == expense.purseId);\n\n          if (purse != null && purse != undefined) {\n            currencyCode = purse.currencyCode.toUpperCase();\n          }\n\n          return /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 45\n              }, this),\n              \"aria-controls\": expense.id + \"-content\",\n              id: expense.id + \"-header\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.heading,\n                children: expense.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [expense.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 60\n                    }, this), \"Date: \", expense.date.getDate(), \"/\", GetMonthName(expense.date.getMonth()), \"/\", expense.date.getFullYear(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 45\n                    }, this), \"Sum: \", expense.money, \" \", currencyCode]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: {\n                    padding: 10\n                  },\n                  container: true,\n                  xs: 12,\n                  direction: \"row-reverse\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    onClick: () => handleOpen(\"delete\", expense.id),\n                    color: \"secondary\",\n                    className: classes.buttons,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: () => handleOpen(\"update\", expense.id),\n                    className: classes.buttons,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this)]\n          }, expense.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this);\n        }), isLoadingData && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Loading expenses...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: props.handleClose,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialog.isOpen && dialog.action == \"delete\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Delete expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Are you sure you want to delete this expense?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: async () => {\n            await Delete(dialog.itemId);\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopicExpensesList, \"Ce3ZnZTL/dAK0mm7LCzXqu7n2E0=\", false, function () {\n  return [useSessionStorage, useStyles, useNonInitialEffect, useInfiniteScroll];\n});\n\n_c = TopicExpensesList;\nexport const TopicPaper = props => {\n  _s2();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n    props.setIsLoading(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 8,\n    xl: 7,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: \"100%\",\n        padding: 0\n      },\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 20,\n        style: {\n          marginBottom: 10,\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(GridPaperHeader, {\n          style: {\n            color: \"white\",\n            padding: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 37\n        }, this), props.topic.expenses.length == 0 && /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"There are not any expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 41\n        }, this), props.topic.expenses.map(expense => {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [expense.title, \" - \", expense.money]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 41\n            }, this)\n          }, expense.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 37\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      scroll: \"paper\",\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      \"aria-describedby\": \"scroll-dialog-description\",\n      fullWidth: useMediaQuery(theme.breakpoints.down('lg')),\n      classes: {\n        paper: classes.dialogPaper\n      },\n      children: /*#__PURE__*/_jsxDEV(TopicExpensesList, {\n        topic: {\n          id: props.topic.id,\n          name: props.topic.name\n        },\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(TopicPaper, \"BVhelrXhPPpFzrblyxhUsaq+mBY=\", false, function () {\n  return [useTheme, useStyles, useMediaQuery];\n});\n\n_c2 = TopicPaper;\nexport default TopicPaper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopicExpensesList\");\n$RefreshReg$(_c2, \"TopicPaper\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/ExpensesList/TopicPaper.tsx"],"names":["Box","Button","CircularProgress","Dialog","DialogContent","DialogActions","DialogTitle","Grid","makeStyles","Paper","Typography","DialogContentText","useMediaQuery","useTheme","Accordion","AccordionSummary","AccordionDetails","React","useEffect","useState","GetPagedUserExpenses","DeleteExpense","ExpandMoreIcon","useSessionStorage","GetMonthName","useInfiniteScroll","useNonInitialEffect","CreateExpenseForm","EditExpenseForm","GridPaperHeader","useStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","dialogPaper","maxHeight","minHeight","buttons","width","TopicExpensesList","props","pageSize","pageIndex","setPageIndex","hasData","setHasData","isLoadingData","setIsLoadingData","expenses","setExpenses","hasNextPage","setHasNextPage","pursesData","setPursesData","removePursesData","dialog","setDialog","isOpen","action","itemId","classes","console","log","handleLoadMore","request","topic","then","result","response","status","data","total","items","length","infiniteRef","loading","onLoadMore","scrollContainer","handleClose","handleOpen","undefined","Delete","expenseId","name","map","expense","currencyCode","purse","find","p","id","purseId","toUpperCase","title","date","getDate","getMonth","getFullYear","money","padding","TopicPaper","setIsOpen","setIsLoading","marginBottom","color","breakpoints","down","paper"],"mappings":"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","sourcesContent":["import { Box, Button, List, CircularProgress, Dialog, DialogContent,\r\n    DialogActions, DialogTitle, Grid, makeStyles, Paper, \r\n    Typography, DialogProps, DialogContentText, useMediaQuery, \r\n    useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Expense from '../../Data/Models/Expenses/Expense';\r\nimport Topic from '../../Data/Models/Topics/Topic';\r\nimport TopicWithExpenses from '../../Data/Models/Topics/TopicWithExpenses';\r\nimport { GetPagedUserExpenses, DeleteExpense } from '../../Services/expense.service/ExpenseService';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\nimport { GetMonthName } from '../../Date/MonthName';\r\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\r\nimport PagedRequest from '../../Services/pagedRequests/PagedRequest';\r\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\r\nimport CreateExpenseForm from '../Forms/ExpenseForm/CreateExpenseForm';\r\nimport EditExpenseForm from '../Forms/ExpenseForm/EditExpenseForm';\r\nimport GridPaperHeader from '../GridPaper/GridPaperHeader';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  dialogPaper: {\r\n      maxHeight: \"600px\",\r\n      minHeight: \"600px\"\r\n  },\r\n  buttons:{\r\n      width: 100\r\n  }\r\n}),\r\n);\r\n\r\n\r\ninterface TopicExpensesListProps\r\n{\r\n    topic: Topic;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst TopicExpensesList: React.FC<TopicExpensesListProps> = (props) => {\r\n\r\n    const pageSize: number = 20;\r\n    \r\n    const [pageIndex, setPageIndex] = useState<number>(0);\r\n    const [hasData, setHasData] = useState<boolean>(true);\r\n    const [isLoadingData, setIsLoadingData] = useState<boolean>(true);\r\n    const [expenses, setExpenses] = useState<Expense[]>([]);\r\n    const [hasNextPage, setHasNextPage] = useState<boolean>(true);\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", []);\r\n    \r\n\r\n    const [dialog, setDialog] = useState<{\r\n        isOpen: boolean, \r\n        action: \"update\" | \"create\" | \"delete\",\r\n        itemId: number\r\n    }>({isOpen: false, action: \"update\", itemId: 0});\r\n\r\n    const classes = useStyles();\r\n\r\n    useNonInitialEffect(() => {\r\n        console.log(dialog);\r\n        if(!dialog.isOpen) //if we close nested dialog, we rerender whole component\r\n        {\r\n            console.log(\"rerender\");\r\n            setPageIndex(0);\r\n            setHasData(true);\r\n            setIsLoadingData(true);\r\n            setHasNextPage(true);\r\n            setExpenses([...[]]);\r\n        }\r\n    }, [dialog]);\r\n\r\n    useEffect(() => {\r\n        if (isLoadingData)\r\n        {\r\n            handleLoadMore();\r\n        }\r\n      }, [isLoadingData]);\r\n\r\n    const handleLoadMore = () => {\r\n        if(hasNextPage)\r\n        {\r\n            setIsLoadingData(true);\r\n            const request: PagedRequest = {\r\n            pageIndex: pageIndex,\r\n            pageSize: pageSize\r\n        };\r\n\r\n        GetPagedUserExpenses(request, props.topic)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    console.log(result.data);\r\n                    if(result.data.total == 0)\r\n                    {\r\n                        setHasData(false);\r\n                    }\r\n                    setExpenses([...expenses, ...result.data.items]);\r\n                    setHasNextPage(result.data.items.length == pageSize);\r\n                    setIsLoadingData(false);\r\n                    setPageIndex(pageIndex + 1);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const infiniteRef = useInfiniteScroll({\r\n        loading:isLoadingData,\r\n        hasNextPage,\r\n        onLoadMore: handleLoadMore,\r\n        scrollContainer: \"parent\"\r\n      });\r\n\r\n      const handleClose = () => {\r\n          setDialog({...dialog, isOpen: false});\r\n      }\r\n      \r\n      const handleOpen = (action: \"update\" | \"create\" | \"delete\", itemId?: number) => {\r\n        if(itemId == undefined)\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action});\r\n        }\r\n        else\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action, itemId: itemId})\r\n        }\r\n      }\r\n\r\n      const Delete = async (expenseId: number) => {\r\n        await DeleteExpense(expenseId);\r\n        handleClose();\r\n      }\r\n\r\n    if(dialog.isOpen && dialog.action!=\"delete\")\r\n    {\r\n        if(dialog.action == \"create\")\r\n        {\r\n            return(<CreateExpenseForm topic={props.topic} handleClose={handleClose} />);\r\n        }\r\n        if(dialog.action == \"update\")\r\n        {\r\n            return(<EditExpenseForm topic={props.topic} \r\n                expenseId={dialog.itemId} handleClose={handleClose} />);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <DialogTitle id=\"scroll-dialog-title\">\r\n                <Grid container direction=\"row-reverse\">\r\n                    <Button color=\"secondary\" variant=\"outlined\" onClick={() => handleOpen(\"create\")}>\r\n                        Create\r\n                    </Button>\r\n                </Grid>\r\n                <Grid container justify=\"center\" xs={12}>\r\n                    <Typography variant=\"h6\">{props.topic.name}</Typography>\r\n                </Grid>\r\n            </DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                <DialogContentText id=\"scroll-dialog-description\" ref={infiniteRef}\r\n                >\r\n                    {!hasData ?\r\n                        <Grid container xs={12} justify=\"center\">\r\n                            <Typography variant=\"h6\">\r\n                                You do not have any {props.topic.name} expeses\r\n                            </Typography>\r\n                        </Grid>\r\n                        : expenses.map((expense) => {\r\n\r\n                        let currencyCode: string = \"\";\r\n                        let purse = pursesData.find(p => p.id == expense.purseId);\r\n                        \r\n                        if(purse != null && purse != undefined)\r\n                        {\r\n                            currencyCode = purse.currencyCode.toUpperCase();\r\n                        }\r\n\r\n                        return(\r\n                            <Accordion key={expense.id}>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={expense.id + \"-content\"}\r\n                                id={expense.id + \"-header\"}\r\n                                >\r\n                                <Typography className={classes.heading}>{expense.title}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                <Grid container xs={12}>\r\n                                    <Grid container item xs={12}>\r\n                                        <Typography>\r\n                                            {expense.title}<br/>\r\n                                            Date: {expense.date.getDate()}/\r\n                                            {GetMonthName(expense.date.getMonth())}/\r\n                                            {expense.date.getFullYear()}\r\n                                            <br/>\r\n                                            Sum: {expense.money} {currencyCode}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item style={{padding:10}} container xs={12} direction=\"row-reverse\">\r\n                                        <Button variant=\"contained\" onClick={() => handleOpen(\"delete\", expense.id)}\r\n                                        color=\"secondary\" className={classes.buttons}>\r\n                                            <Typography>\r\n                                                Delete\r\n                                            </Typography>\r\n                                        </Button>\r\n                                        <Button variant=\"contained\" \r\n                                        color=\"primary\" onClick={() => handleOpen(\"update\", expense.id)}\r\n                                         className={classes.buttons}>\r\n                                            <Typography>\r\n                                                Edit\r\n                                            </Typography>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n\r\n                        );\r\n                    })}\r\n                    {isLoadingData && \r\n                        <Grid container xs={12} justify=\"center\">\r\n                            <Grid container item xs={12} justify=\"center\">\r\n                                <CircularProgress color=\"secondary\" />\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify=\"center\">\r\n                                <Typography variant=\"h6\">\r\n                                    Loading expenses...\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={props.handleClose}\r\n                    >\r\n                    <Typography>\r\n                        Close\r\n                    </Typography>\r\n                </Button>\r\n            </DialogActions>\r\n            <Dialog open={dialog.isOpen && dialog.action==\"delete\"}>\r\n                <DialogTitle>\r\n                    <Typography>\r\n                        Delete expense\r\n                    </Typography>\r\n                </DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                        <DialogContentText>\r\n                            <Typography>\r\n                                Are you sure you want to delete this expense?\r\n                            </Typography>\r\n                        </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    onClick={async () => {await Delete(dialog.itemId);}}\r\n                    >\r\n                    <Typography>\r\n                        Delete\r\n                    </Typography>\r\n                </Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={handleClose}\r\n                    >\r\n                    <Typography>\r\n                        Close\r\n                    </Typography>\r\n                </Button>\r\n            </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface TopicPaperProps\r\n{\r\n    topic: TopicWithExpenses;\r\n    setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const TopicPaper: React.FC<TopicPaperProps> = (props) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    \r\n    const handleOpen = () => {\r\n        setIsOpen(true);\r\n      };\r\n\r\n    const handleClose = () => {\r\n        setIsOpen(false);\r\n        props.setIsLoading(true);\r\n    }\r\n\r\n    return(\r\n        <Grid item xs={8} xl={7}>\r\n                                <Button style={{width:\"100%\", padding:0}} onClick={handleOpen}>\r\n                                <Paper elevation={20} style={{marginBottom:10, width:\"100%\"}}\r\n                                >\r\n                                    {/* <Box display=\"flex\" p={1}\r\n                                    style={{backgroundColor: \"black\", color:\"white\",\r\n                                    borderRadius:\"10px 10px 0 0\"\r\n                                }} \r\n                                    justifyContent=\"center\">\r\n                                        <Typography>{props.topic.name}</Typography>\r\n                                    </Box> */}\r\n                                    <GridPaperHeader style={{color: \"white\", \r\n                                    padding: 10}}>\r\n                                        <Typography>{props.topic.name}</Typography>\r\n                                    </GridPaperHeader>\r\n                                    {\r\n                                        props.topic.expenses.length == 0 &&\r\n                                        <Box display=\"flex\" justifyContent=\"center\"\r\n                                        flexWrap=\"wrap\">\r\n                                            <Typography variant=\"h5\">\r\n                                                There are not any expenses\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    }\r\n                                    {props.topic.expenses.map((expense) => {\r\n                                    return(\r\n                                    <Box display=\"flex\" justifyContent=\"center\"\r\n                                    flexWrap=\"wrap\" key={expense.id}\r\n                                    >\r\n                                        <Typography>\r\n                                            {expense.title} - {expense.money}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    );\r\n                                })}\r\n                        </Paper>\r\n                    </Button>\r\n                    <Dialog open={isOpen}\r\n                    scroll=\"paper\" aria-labelledby=\"scroll-dialog-title\"\r\n                    aria-describedby=\"scroll-dialog-description\"\r\n                    fullWidth={useMediaQuery(theme.breakpoints.down('lg'))}\r\n                    classes={{paper: classes.dialogPaper}}\r\n                    >\r\n                        <TopicExpensesList topic={{\r\n                            id: props.topic.id,\r\n                            name: props.topic.name\r\n                        }} \r\n                        handleClose={handleClose}\r\n                        />\r\n                    </Dialog>\r\n                </Grid>\r\n    );\r\n}\r\n\r\nexport default TopicPaper;"]},"metadata":{},"sourceType":"module"}