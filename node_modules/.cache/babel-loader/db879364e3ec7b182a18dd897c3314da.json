{"ast":null,"code":"import API from '../Api';\nimport { getCurrentUser } from '../auth.services/auth-service';\nimport jwt_decode from 'jwt-decode';\nimport LogicalOperators from '../pagedRequests/LogicalOperators';\nexport const getAllExpenses = async () => {\n  return API.get(\"/expenses/all\").then(response => {\n    let expenses = [];\n    let data = response.data;\n    data.forEach(element => {\n      let dateString = element.date;\n      let date = dateString.substring(0, 10);\n      let expense = {\n        id: element.id,\n        purseId: element.purseId,\n        title: element.title,\n        money: element.money,\n        date: new Date(date)\n      };\n      expenses.push(expense);\n    });\n    return {\n      response: response,\n      data: expenses\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getExpensesForCurrentYear = async () => {\n  return API.get(\"/expenses/year\").then(response => {\n    let expenses = response.data.expenses;\n    console.log(expenses);\n    return {\n      response: response,\n      data: expenses\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const deleteExpense = async id => {\n  return API.delete(\"/expenses/\" + id).then(response => {\n    console.log(response);\n    return {\n      response: response,\n      data: response.data\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const updateExpense = async expense => {\n  return API.put(\"/expenses\", expense).then(response => {\n    console.log(response);\n    return {\n      response: response,\n      data: response.data\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getExpensesSumForYear = async () => {\n  return API.get(\"/expenses/sum/year\").then(response => {\n    console.log(response);\n    const sums = response.data.sums;\n    return {\n      response: response,\n      data: sums\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getExpensesSumForMonth = async () => {\n  return API.get(\"/expenses/sum/month\").then(response => {\n    console.log(response);\n    const sums = response.data.sums;\n    return {\n      response: response,\n      data: sums\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getExpensesSumForToday = async () => {\n  return API.get(\"/expenses/sum/today\").then(response => {\n    console.log(response);\n    const sums = response.data.sums;\n    return {\n      response: response,\n      data: sums\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getUserExpenses = async () => {\n  return API.get(\"/expenses\").then(response => {\n    let expenses = [];\n    let data = response.data;\n    data.forEach(element => {\n      let dateString = element.date;\n      let date = dateString.substring(0, 10);\n      let expense = {\n        id: element.id,\n        purseId: element.purseId,\n        title: element.title,\n        money: element.money,\n        date: new Date(date)\n      };\n      expenses.push(expense);\n    });\n    return {\n      response: response,\n      data: expenses\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getUserExpensesByTopic = async topic => {\n  return API.get(\"/expenses/topic/\" + topic.id).then(response => {\n    let expenses = [];\n    let data = response.data;\n    data.forEach(element => {\n      let dateString = element.date;\n      let date = dateString.substring(0, 10);\n      let expense = {\n        id: element.id,\n        purseId: element.purseId,\n        title: element.title,\n        money: element.money,\n        date: new Date(date)\n      };\n      expenses.push(expense);\n    });\n    return {\n      response: response,\n      data: expenses\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getPagedUserExpenses = async (request, topic) => {\n  const token = getCurrentUser().accessToken;\n  const userId = jwt_decode(token).UserId;\n  const filters = {\n    logicalOperators: LogicalOperators.and,\n    filters: [{\n      path: \"OwnerId\",\n      value: userId\n    }]\n  };\n\n  if (topic != undefined) {\n    filters.filters.push({\n      path: \"TopicId\",\n      value: topic.id.toString()\n    });\n  }\n\n  request.requestFilters = filters;\n\n  if (request.columnNameForSorting == undefined) {\n    request.columnNameForSorting = \"Date\";\n    request.sortDirection = \"DESC\";\n  }\n\n  if (request.sortDirection == undefined) {\n    request.sortDirection = \"ASC\";\n  }\n\n  return API.post(\"Expenses/PaginatedSearch\", request).then(response => {\n    let result = response.data;\n    let expenses = [];\n    result.items.forEach(e => {\n      let dateString = e.date.toString();\n      let date = dateString.substring(0, 10);\n      let expense = {\n        id: e.id,\n        purseId: e.purseId,\n        title: e.title,\n        money: e.money,\n        date: new Date(date)\n      };\n      expenses.push(expense);\n    });\n    result.items = expenses;\n    return {\n      response: response,\n      data: result\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const createExpense = async expense => {\n  return API.post(\"Expenses\", expense).then(response => {\n    return {\n      response: response,\n      data: response.data\n    };\n  }).catch(error => {\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getExpense = async id => {\n  return API.get(\"Expenses/\" + id).then(response => {\n    const expense = response.data;\n    let dateString = response.data.date.toString().substring(0, 10);\n    expense.date = new Date(dateString);\n    return {\n      response: response,\n      data: expense\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getPercentsExpensesPerTopic = async () => {\n  return API.get(\"Expenses/percentsExpensesPerTopic\").then(response => {\n    let percents = response.data;\n    console.log(percents);\n    return {\n      data: percents,\n      response: response\n    };\n  }).catch(error => {\n    console.log(error);\n    return {\n      data: error.response.data,\n      response: error.response\n    };\n  });\n};\nexport const getCountUserExpenses = async () => {\n  return API.get(\"Expenses/count\").then(response => {\n    return {\n      response: response,\n      data: response.data\n    };\n  }).catch(error => {\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport const getExpensesPerDayForCurrentMonth = async () => {\n  return API.get(\"Expenses/month\").then(response => {\n    return {\n      response: response,\n      data: response.data\n    };\n  }).catch(error => {\n    return {\n      response: error.response,\n      data: error.response.data\n    };\n  });\n};\nexport default {\n  getExpensesForCurrentYear,\n  getAllExpenses,\n  deleteExpense,\n  getExpensesSumForToday,\n  getExpensesSumForMonth,\n  getExpensesSumForYear,\n  getUserExpensesByTopic,\n  getUserExpenses,\n  getPagedUserExpenses,\n  getExpense,\n  createExpense,\n  updateExpense,\n  getPercentsExpensesPerTopic,\n  getCountUserExpenses,\n  getExpensesPerDayForCurrentMonth\n};","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Services/expense.service/ExpenseService.tsx"],"names":["API","getCurrentUser","jwt_decode","LogicalOperators","getAllExpenses","get","then","response","expenses","data","forEach","element","dateString","date","substring","expense","id","purseId","title","money","Date","push","catch","error","console","log","getExpensesForCurrentYear","deleteExpense","delete","updateExpense","put","getExpensesSumForYear","sums","getExpensesSumForMonth","getExpensesSumForToday","getUserExpenses","getUserExpensesByTopic","topic","getPagedUserExpenses","request","token","accessToken","userId","UserId","filters","logicalOperators","and","path","value","undefined","toString","requestFilters","columnNameForSorting","sortDirection","post","result","items","e","createExpense","getExpense","getPercentsExpensesPerTopic","percents","getCountUserExpenses","getExpensesPerDayForCurrentMonth"],"mappings":"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","sourcesContent":["import Expense from '../../Data/Models/Expenses/Expense';\r\nimport ExpenseForSum from '../../Data/Models/Expenses/ExpenseForSum';\r\nimport ExpensesForYear from '../../Data/Models/Expenses/ExpensesForYear';\r\nimport Topic from '../../Data/Models/Topics/Topic';\r\nimport API from '../Api';\r\nimport { getCurrentUser } from '../auth.services/auth-service';\r\nimport PagedRequest from '../pagedRequests/PagedRequest';\r\nimport RequestFilters from '../pagedRequests/RequestFilters';\r\nimport jwt_decode from 'jwt-decode';\r\nimport PagedResult from '../pagedRequests/PagedResult';\r\nimport LogicalOperators from '../pagedRequests/LogicalOperators';\r\nimport ExpenseForCreate from '../../Data/Models/Expenses/ExpenseForCreate';\r\nimport PercentsTopicExpense from '../../Data/Models/Expenses/PercentsTopicExpense';\r\nimport PurseExpensesPerDay from '../../Data/Models/Expenses/PurseExpensesPerDay';\r\n\r\nexport const getAllExpenses = async () => {\r\n    \r\n    return API.get(\"/expenses/all\")\r\n        .then(response => {\r\n            let expenses: Expense[] = [];\r\n            let data:any[] = response.data;\r\n\r\n            data.forEach(element => {\r\n                let dateString = element.date;\r\n                let date = dateString.substring(0, 10);\r\n                let expense:Expense = {\r\n                    id: element.id,\r\n                    purseId: element.purseId,\r\n                    title: element.title,\r\n                    money: element.money,\r\n                    date: new Date(date),\r\n                };\r\n                \r\n                expenses.push(expense);\r\n            });\r\n\r\n            return {\r\n                response: response,\r\n                data: expenses\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getExpensesForCurrentYear = async () => {\r\n    \r\n    return API.get(\"/expenses/year\")\r\n        .then(response => {\r\n            let expenses:ExpensesForYear[] = response.data.expenses;\r\n            console.log(expenses);\r\n            \r\n            return {\r\n                response: response,\r\n                data: expenses\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const deleteExpense = async (id: number) => {\r\n\r\n    return API.delete(\"/expenses/\" + id)\r\n        .then(response => {\r\n            console.log(response);\r\n\r\n            return {\r\n                response: response,\r\n                data: response.data\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            \r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        })\r\n}\r\n\r\nexport const updateExpense = async (expense: Expense) => {\r\n\r\n    return API.put(\"/expenses\", expense)\r\n        .then(response => {\r\n            console.log(response);\r\n            return {\r\n                response: response,\r\n                data: response.data\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        })\r\n}\r\n\r\nexport const getExpensesSumForYear = async () => {\r\n\r\n    return API.get(\"/expenses/sum/year\")\r\n        .then(response => {\r\n            console.log(response);\r\n            const sums: ExpenseForSum[] = response.data.sums;\r\n\r\n            return {\r\n                response: response,\r\n                data: sums\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getExpensesSumForMonth = async () => {\r\n\r\n    return API.get(\"/expenses/sum/month\")\r\n        .then(response => {\r\n            console.log(response);\r\n            const sums: ExpenseForSum[] = response.data.sums;\r\n\r\n            return {\r\n                response: response,\r\n                data: sums\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getExpensesSumForToday = async () => {\r\n\r\n    return API.get(\"/expenses/sum/today\")\r\n        .then(response => {\r\n            console.log(response);\r\n            const sums: ExpenseForSum[] = response.data.sums;\r\n\r\n            return {\r\n                response: response,\r\n                data: sums\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return {\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getUserExpenses = async () => {\r\n\r\n    return API.get(\"/expenses\")\r\n        .then(response => {\r\n            let expenses: Expense[] = [];\r\n            let data:any[] = response.data;\r\n\r\n            data.forEach(element => {\r\n                let dateString = element.date;\r\n                let date = dateString.substring(0, 10);\r\n                let expense:Expense = {\r\n                    id: element.id,\r\n                    purseId: element.purseId,\r\n                    title: element.title,\r\n                    money: element.money,\r\n                    date: new Date(date),\r\n                };\r\n                \r\n                expenses.push(expense);\r\n            });\r\n            \r\n            return {\r\n                response: response,\r\n                data: expenses\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response:error.response,\r\n                data: error.response.data\r\n            };\r\n        })\r\n}\r\n\r\nexport const getUserExpensesByTopic = async (topic: Topic) => {\r\n\r\n    return API.get(\"/expenses/topic/\" + topic.id)\r\n        .then(response => {\r\n            let expenses: Expense[] = [];\r\n            let data:any[] = response.data;\r\n\r\n            data.forEach(element => {\r\n                let dateString = element.date;\r\n                let date = dateString.substring(0, 10);\r\n                let expense:Expense = {\r\n                    id: element.id,\r\n                    purseId: element.purseId,\r\n                    title: element.title,\r\n                    money: element.money,\r\n                    date: new Date(date),\r\n                };\r\n                \r\n                expenses.push(expense);\r\n            });\r\n            \r\n            return {\r\n                response: response,\r\n                data: expenses\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response:error.response,\r\n                data: error.response.data\r\n            };\r\n        })\r\n}\r\n\r\nexport const getPagedUserExpenses = async (request: PagedRequest, topic?: Topic) => {\r\n\r\n    const token = getCurrentUser().accessToken;\r\n    const userId: string = (jwt_decode(token) as any).UserId;\r\n\r\n    const filters: RequestFilters = {\r\n        logicalOperators: LogicalOperators.and,\r\n        filters: [\r\n            {\r\n                path: \"OwnerId\",\r\n                value: userId\r\n            }\r\n        ]\r\n    }\r\n\r\n    if(topic != undefined)\r\n    {\r\n        filters.filters.push(\r\n            {\r\n                path: \"TopicId\",\r\n                value: topic.id.toString()\r\n            }\r\n        );\r\n    }\r\n\r\n    request.requestFilters = filters;\r\n    if(request.columnNameForSorting == undefined)\r\n    {\r\n        request.columnNameForSorting = \"Date\";\r\n        request.sortDirection = \"DESC\";\r\n    }\r\n    if(request.sortDirection == undefined)\r\n    {\r\n        request.sortDirection = \"ASC\";\r\n    }\r\n    \r\n    return API.post(\"Expenses/PaginatedSearch\", request)\r\n        .then(response => {\r\n            let result: PagedResult<Expense> = response.data;\r\n            let expenses: Expense[] = [];\r\n\r\n            result.items.forEach(e => {\r\n                let dateString = e.date.toString();\r\n                let date = dateString.substring(0, 10);\r\n                let expense:Expense = {\r\n                    id: e.id,\r\n                    purseId: e.purseId,\r\n                    title: e.title,\r\n                    money: e.money,\r\n                    date: new Date(date),\r\n                };\r\n                expenses.push(expense);\r\n            });\r\n\r\n            result.items = expenses;\r\n\r\n            return {\r\n                response: response,\r\n                data: result\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response:error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const createExpense = async (expense: ExpenseForCreate) => {\r\n    return API.post(\"Expenses\", expense)\r\n        .then(response => {\r\n            return {\r\n                response: response,\r\n                data: response.data\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return{\r\n                response: error.response,\r\n                data: error.response.data\r\n            }\r\n        });\r\n}\r\n\r\nexport const getExpense = async (id: number) => {\r\n    return API.get(\"Expenses/\" + id)\r\n        .then(response => {\r\n            const expense: Expense = response.data;\r\n            let dateString = response.data.date.toString().substring(0, 10);\r\n            expense.date = new Date(dateString);\r\n\r\n            return {\r\n                response: response,\r\n                data: expense\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return {\r\n                response:error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getPercentsExpensesPerTopic = async () => {\r\n    return API.get(\"Expenses/percentsExpensesPerTopic\")\r\n        .then(response => {\r\n            let percents: PercentsTopicExpense[] = response.data;\r\n            console.log(percents);\r\n\r\n            return{\r\n                data: percents,\r\n                response: response\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            return{\r\n                data: error.response.data,\r\n                response: error.response\r\n            }\r\n        });\r\n}\r\n\r\nexport const getCountUserExpenses = async () => {\r\n    return API.get(\"Expenses/count\")\r\n        .then(response => {\r\n\r\n            return{\r\n                response: response,\r\n                data: response.data as number\r\n            };\r\n        })\r\n        .catch(error => {\r\n\r\n            return{\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        });\r\n}\r\n\r\nexport const getExpensesPerDayForCurrentMonth = async () => {\r\n    return API.get(\"Expenses/month\")\r\n        .then(response => {\r\n\r\n            return{\r\n                response: response,\r\n                data: response.data as PurseExpensesPerDay[]\r\n            };\r\n        })\r\n        .catch(error => {\r\n            \r\n            return{\r\n                response: error.response,\r\n                data: error.response.data\r\n            };\r\n        })\r\n}\r\n\r\nexport default {\r\n    getExpensesForCurrentYear,\r\n    getAllExpenses,\r\n    deleteExpense,\r\n    getExpensesSumForToday,\r\n    getExpensesSumForMonth,\r\n    getExpensesSumForYear,\r\n    getUserExpensesByTopic,\r\n    getUserExpenses,\r\n    getPagedUserExpenses,\r\n    getExpense,\r\n    createExpense,\r\n    updateExpense,\r\n    getPercentsExpensesPerTopic,\r\n    getCountUserExpenses,\r\n    getExpensesPerDayForCurrentMonth\r\n}"]},"metadata":{},"sourceType":"module"}