{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\ExpensesList\\\\TopicPaper.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Box, Button, CircularProgress, Dialog, DialogContent, DialogActions, DialogTitle, Grid, makeStyles, Paper, Typography, DialogContentText, useMediaQuery, useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport { GetMonthName } from '../../Date/MonthName';\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nconst TopicExpensesList = props => {\n  _s();\n\n  const pageSize = 10;\n  const [pageIndex, setPageIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [expenses, setExpenses] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", []);\n  const classes = useStyles();\n\n  const handleScroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) {\n      return;\n    }\n\n    setIsLoadingData(true);\n    console.log('Fetch more list items!');\n  };\n\n  useEffect(() => {\n    if (isLoadingData) {\n      handleLoadMore();\n    }\n\n    console.log(\"useEffect state:\" + isLoadingData + expenses);\n  }, [isLoadingData]); // useEffect(() => {\n  //         window.addEventListener('scroll', handleScroll);\n  //         return () => window.removeEventListener('scroll', handleScroll);\n  // },[]);\n\n  const handleLoadMore = () => {\n    console.log(\"load more\");\n\n    if (hasNextPage) {\n      setIsLoadingData(true);\n      const request = {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      };\n      ExpenseService.GetPagedUserExpenses(request, props.topic).then(result => {\n        if (result.response.status == 200) {\n          setExpenses([...expenses, ...result.data.items]);\n          console.log(result.data.items.length + \" \" + pageSize);\n          console.log(result.data.items.length == pageSize);\n          setHasNextPage(result.data.items.length == pageSize);\n          setIsLoadingData(false);\n          setPageIndex(pageIndex + 1);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const infiniteRef = useInfiniteScroll({\n    loading: isLoadingData,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer: \"parent\"\n  }); // if(isLoading)\n  // {\n  //     return (<Grid container xs={12} justify=\"center\">\n  //     <CircularProgress color=\"secondary\" />\n  // </Grid>);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      children: props.topic.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"scroll-dialog-description\",\n        ref: infiniteRef,\n        children: [isLoadingData && expenses.length == 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this) : expenses.length == 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"You do not have any \", props.topic.name, \" expeses\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this) : expenses.map(expense => {\n          let currencyCode = \"\";\n          let purse = pursesData.find(p => p.id == expense.purseId);\n\n          if (purse != null && purse != undefined) {\n            currencyCode = purse.currencyCode.toUpperCase();\n          }\n\n          return /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 45\n              }, this),\n              \"aria-controls\": expense.id + \"-content\",\n              id: expense.id + \"-header\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.heading,\n                children: expense.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [expense.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 52\n                }, this), \"Date: \", expense.date.getDate(), \"/\", GetMonthName(expense.date.getMonth()), \"/\", expense.date.getFullYear(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this), \"Sum: \", expense.money, \" \", currencyCode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this);\n        }), isLoadingData && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Loading expenses...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: props.handleClose,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopicExpensesList, \"FzMxL6lUXKYBoqUN86q4I09N5HM=\", false, function () {\n  return [useSessionStorage, useStyles, useInfiniteScroll];\n});\n\n_c = TopicExpensesList;\nexport const TopicPaper = props => {\n  _s2();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const theme = useTheme();\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const expensesTopic = props.topic.expenses.slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 8,\n    xl: 7,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: \"100%\",\n        padding: 0\n      },\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 20,\n        style: {\n          marginBottom: 10,\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          p: 1,\n          style: {\n            backgroundColor: \"black\",\n            color: \"white\",\n            borderRadius: \"10px 10px 0 0\"\n          },\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 37\n        }, this), expensesTopic.length == 0 && /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"There are not any expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 41\n        }, this), expensesTopic.map(expense => {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [expense.title, \" - \", expense.money]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 41\n            }, this)\n          }, expense.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 37\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      scroll: \"paper\",\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      \"aria-describedby\": \"scroll-dialog-description\",\n      fullWidth: useMediaQuery(theme.breakpoints.down('lg')),\n      style: {\n        minHeight: \"70vh\",\n        maxHeight: \"70vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(TopicExpensesList, {\n        topic: {\n          id: props.topic.id,\n          name: props.topic.name\n        },\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(TopicPaper, \"n9aAkirk7BGarKyHY6yGHk9blJ0=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c2 = TopicPaper;\nexport default TopicPaper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopicExpensesList\");\n$RefreshReg$(_c2, \"TopicPaper\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/ExpensesList/TopicPaper.tsx"],"names":["Box","Button","CircularProgress","Dialog","DialogContent","DialogActions","DialogTitle","Grid","makeStyles","Paper","Typography","DialogContentText","useMediaQuery","useTheme","Accordion","AccordionSummary","AccordionDetails","React","useEffect","useState","ExpenseService","ExpandMoreIcon","useSessionStorage","GetMonthName","useInfiniteScroll","useStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","TopicExpensesList","props","pageSize","pageIndex","setPageIndex","isLoading","setIsLoading","isLoadingData","setIsLoadingData","expenses","setExpenses","hasNextPage","setHasNextPage","pursesData","setPursesData","removePursesData","classes","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","console","log","handleLoadMore","request","GetPagedUserExpenses","topic","then","result","response","status","data","items","length","catch","error","infiniteRef","loading","onLoadMore","scrollContainer","name","map","expense","currencyCode","purse","find","p","id","purseId","undefined","toUpperCase","title","date","getDate","getMonth","getFullYear","money","handleClose","TopicPaper","isOpen","setIsOpen","handleOpen","expensesTopic","slice","width","padding","marginBottom","backgroundColor","color","borderRadius","breakpoints","down","minHeight","maxHeight"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAA4BC,gBAA5B,EAA8CC,MAA9C,EAAsDC,aAAtD,EACIC,aADJ,EACmBC,WADnB,EACgCC,IADhC,EACsCC,UADtC,EACkDC,KADlD,EAEIC,UAFJ,EAE6BC,iBAF7B,EAEgDC,aAFhD,EAGIC,QAHJ,EAGcC,SAHd,EAGyBC,gBAHzB,EAG2CC,gBAH3C,QAGmE,mBAHnE;AAIA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAIA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AAGA,MAAMC,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAC5B;AACCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEF,KAAK,CAACG,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADH;AAEPC,IAAAA,UAAU,EAAEL,KAAK,CAACG,UAAN,CAAiBG;AAFtB;AADV,CAD4B,CAAD,CAA5B;;AAgBA,MAAMC,iBAAmD,GAAIC,KAAD,IAAW;AAAA;;AAEnE,QAAMC,QAAgB,GAAG,EAAzB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAS,CAAT,CAA1C;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAU,IAAV,CAAlD;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAY,EAAZ,CAAxC;AACA,QAAM,CAACyB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAU,IAAV,CAA9C;AACA,QAAM,CAAC2B,UAAD,EAAaC,aAAb,EAA4BC,gBAA5B,IAAgD1B,iBAAiB,CAAU,YAAV,EAAwB,EAAxB,CAAvE;AAEA,QAAM2B,OAAO,GAAGxB,SAAS,EAAzB;;AAEA,QAAMyB,YAAY,GAAG,MAAM;AACvB,QAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KAA4DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzF,EACA;AACI;AACH;;AACDf,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,GAPD;;AASAxC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsB,aAAJ,EACA;AACImB,MAAAA,cAAc;AACjB;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBlB,aAArB,GAAqCE,QAAjD;AACD,GANM,EAMJ,CAACF,aAAD,CANI,CAAT,CAtBmE,CA+BnE;AAEA;AACA;AACA;;AAEA,QAAMmB,cAAc,GAAG,MAAM;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,QAAGd,WAAH,EACA;AACIH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,YAAMmB,OAAqB,GAAG;AAC9BxB,QAAAA,SAAS,EAAEA,SADmB;AAE9BD,QAAAA,QAAQ,EAAEA;AAFoB,OAA9B;AAKJf,MAAAA,cAAc,CAACyC,oBAAf,CAAoCD,OAApC,EAA6C1B,KAAK,CAAC4B,KAAnD,EACKC,IADL,CACUC,MAAM,IAAI;AACZ,YAAGA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,IAA0B,GAA7B,EACA;AACIvB,UAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc,GAAGsB,MAAM,CAACG,IAAP,CAAYC,KAA7B,CAAD,CAAX;AACAX,UAAAA,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACG,IAAP,CAAYC,KAAZ,CAAkBC,MAAlB,GAA2B,GAA3B,GAAiClC,QAA7C;AACAsB,UAAAA,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACG,IAAP,CAAYC,KAAZ,CAAkBC,MAAlB,IAA4BlC,QAAxC;AACAU,UAAAA,cAAc,CAACmB,MAAM,CAACG,IAAP,CAAYC,KAAZ,CAAkBC,MAAlB,IAA4BlC,QAA7B,CAAd;AACAM,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAJ,UAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACH;AACJ,OAXL,EAYKkC,KAZL,CAYWC,KAAK,IAAI;AACZd,QAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACH,OAdL;AAeC;AACJ,GA1BD;;AA4BA,QAAMC,WAAW,GAAGhD,iBAAiB,CAAC;AAClCiD,IAAAA,OAAO,EAACjC,aAD0B;AAElCI,IAAAA,WAFkC;AAGlC8B,IAAAA,UAAU,EAAEf,cAHsB;AAIlCgB,IAAAA,eAAe,EAAE;AAJiB,GAAD,CAArC,CAjEmE,CAwEnE;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,qBAAhB;AAAA,gBACKzC,KAAK,CAAC4B,KAAN,CAAYc;AADjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,IAAzB;AAAA,6BACI,QAAC,iBAAD;AAAmB,QAAA,EAAE,EAAC,2BAAtB;AAAkD,QAAA,GAAG,EAAEJ,WAAvD;AAAA,mBAEKhC,aAAa,IAAIE,QAAQ,CAAC2B,MAAT,IAAmB,CAApC,gBACG,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,EAAE,EAAE,EAApB;AAAwB,UAAA,OAAO,EAAC,QAAhC;AAAA,iCACI,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADH,GAIK3B,QAAQ,CAAC2B,MAAT,IAAmB,CAAnB,gBACF,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,EAAE,EAAE,EAApB;AAAwB,UAAA,OAAO,EAAC,QAAhC;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,+CACyBnC,KAAK,CAAC4B,KAAN,CAAYc,IADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADE,GAMAlC,QAAQ,CAACmC,GAAT,CAAcC,OAAD,IAAa;AAE5B,cAAIC,YAAoB,GAAG,EAA3B;AACA,cAAIC,KAAK,GAAGlC,UAAU,CAACmC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,IAAQL,OAAO,CAACM,OAArC,CAAZ;;AAEA,cAAGJ,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAIK,SAA7B,EACA;AACIN,YAAAA,YAAY,GAAGC,KAAK,CAACD,YAAN,CAAmBO,WAAnB,EAAf;AACH;;AAED,8BACI,QAAC,SAAD;AAAA,oCACI,QAAC,gBAAD;AACA,cAAA,UAAU,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,sBADZ;AAEA,+BAAeR,OAAO,CAACK,EAAR,GAAa,UAF5B;AAGA,cAAA,EAAE,EAAEL,OAAO,CAACK,EAAR,GAAa,SAHjB;AAAA,qCAKA,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAElC,OAAO,CAACtB,OAA/B;AAAA,0BAAyCmD,OAAO,CAACS;AAAjD;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,gBAAD;AAAA,qCACA,QAAC,UAAD;AAAA,2BACKT,OAAO,CAACS,KADb,eACmB;AAAA;AAAA;AAAA;AAAA,wBADnB,YAEWT,OAAO,CAACU,IAAR,CAAaC,OAAb,EAFX,OAGKlE,YAAY,CAACuD,OAAO,CAACU,IAAR,CAAaE,QAAb,EAAD,CAHjB,OAIKZ,OAAO,CAACU,IAAR,CAAaG,WAAb,EAJL,eAKI;AAAA;AAAA;AAAA;AAAA,wBALJ,WAMUb,OAAO,CAACc,KANlB,OAM0Bb,YAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAsBH,SAhCK,CAZV,EA6CKvC,aAAa,iBACV,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,EAAE,EAAE,EAApB;AAAwB,UAAA,OAAO,EAAC,QAAhC;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA9CR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eA0DI,QAAC,aAAD;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,OAAO,EAAEN,KAAK,CAAC2D,WAHnB;AAAA,+BAKI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1DJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwEH,CAvJD;;GAAM5D,iB;UASoDX,iB,EAEtCG,S,EAsDID,iB;;;KAjElBS,iB;AA8JN,OAAO,MAAM6D,UAAqC,GAAI5D,KAAD,IAAW;AAAA;;AAE5D,QAAM,CAAC6D,MAAD,EAASC,SAAT,IAAsB7E,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMO,KAAK,GAAGb,QAAQ,EAAtB;;AAEA,QAAMoF,UAAU,GAAG,MAAM;AACrBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFH;;AAIA,QAAMH,WAAW,GAAG,MAAM;AACtBG,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFD;;AAIA,QAAME,aAAa,GAAGhE,KAAK,CAAC4B,KAAN,CAAYpB,QAAZ,CAAqByD,KAArB,CAA2B,CAA3B,EAA8B,EAA9B,CAAtB;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA,4BACwB,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,OAAO,EAAC;AAAvB,OAAf;AAA0C,MAAA,OAAO,EAAEJ,UAAnD;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,EAAlB;AAAsB,QAAA,KAAK,EAAE;AAACK,UAAAA,YAAY,EAAC,EAAd;AAAkBF,UAAAA,KAAK,EAAC;AAAxB,SAA7B;AAAA,gCAEI,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,MAAb;AAAoB,UAAA,CAAC,EAAE,CAAvB;AACA,UAAA,KAAK,EAAE;AAACG,YAAAA,eAAe,EAAE,OAAlB;AAA2BC,YAAAA,KAAK,EAAC,OAAjC;AACPC,YAAAA,YAAY,EAAC;AADN,WADP;AAIA,UAAA,cAAc,EAAC,QAJf;AAAA,iCAKI,QAAC,UAAD;AAAA,sBAAavE,KAAK,CAAC4B,KAAN,CAAYc;AAAzB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAUQsB,aAAa,CAAC7B,MAAd,IAAwB,CAAxB,iBACA,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,MAAb;AAAoB,UAAA,cAAc,EAAC,QAAnC;AACA,UAAA,QAAQ,EAAC,MADT;AAAA,iCAEI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAXR,EAkBK6B,aAAa,CAACrB,GAAd,CAAmBC,OAAD,IAAa;AAChC,8BACA,QAAC,GAAD;AAAK,YAAA,OAAO,EAAC,MAAb;AAAoB,YAAA,cAAc,EAAC,QAAnC;AACA,YAAA,QAAQ,EAAC,MADT;AAAA,mCAGI,QAAC,UAAD;AAAA,yBACKA,OAAO,CAACS,KADb,SACuBT,OAAO,CAACc,KAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,aACqBd,OAAO,CAACK,EAD7B;AAAA;AAAA;AAAA;AAAA,kBADA;AASH,SAVI,CAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADxB,eAiCY,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEY,MAAd;AACA,MAAA,MAAM,EAAC,OADP;AACe,yBAAgB,qBAD/B;AAEA,0BAAiB,2BAFjB;AAGA,MAAA,SAAS,EAAEnF,aAAa,CAACc,KAAK,CAACgF,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAHxB;AAIA,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,MAAZ;AAAoBC,QAAAA,SAAS,EAAE;AAA/B,OAJP;AAAA,6BAMI,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE;AACtB1B,UAAAA,EAAE,EAAEjD,KAAK,CAAC4B,KAAN,CAAYqB,EADM;AAEtBP,UAAAA,IAAI,EAAE1C,KAAK,CAAC4B,KAAN,CAAYc;AAFI,SAA1B;AAIA,QAAA,WAAW,EAAEiB;AAJb;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAjCZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CAhEM;;IAAMC,U;UAGKjF,Q,EAiDaD,a;;;MApDlBkF,U;AAkEb,eAAeA,UAAf","sourcesContent":["import { Box, Button, List, CircularProgress, Dialog, DialogContent,\r\n    DialogActions, DialogTitle, Grid, makeStyles, Paper, \r\n    Typography, DialogProps, DialogContentText, useMediaQuery, \r\n    useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Expense from '../../Data/Models/Expenses/Expense';\r\nimport Topic from '../../Data/Models/Topics/Topic';\r\nimport TopicWithExpenses from '../../Data/Models/Topics/TopicWithExpenses';\r\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\nimport { GetMonthName } from '../../Date/MonthName';\r\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\r\nimport PagedRequest from '../../Services/pagedRequests/PagedRequest';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}),\r\n);\r\n\r\n\r\ninterface TopicExpensesListProps\r\n{\r\n    topic: Topic;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst TopicExpensesList: React.FC<TopicExpensesListProps> = (props) => {\r\n\r\n    const pageSize: number = 10;\r\n    \r\n    const [pageIndex, setPageIndex] = useState<number>(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isLoadingData, setIsLoadingData] = useState<boolean>(true);\r\n    const [expenses, setExpenses] = useState<Expense[]>([]);\r\n    const [hasNextPage, setHasNextPage] = useState<boolean>(true);\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", []);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleScroll = () => {\r\n        if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight)\r\n        {\r\n            return;\r\n        }\r\n        setIsLoadingData(true);\r\n        console.log('Fetch more list items!');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isLoadingData)\r\n        {\r\n            handleLoadMore();\r\n        }\r\n        console.log(\"useEffect state:\" + isLoadingData + expenses);\r\n      }, [isLoadingData]);\r\n      \r\n\r\n    // useEffect(() => {\r\n\r\n    //         window.addEventListener('scroll', handleScroll);\r\n    //         return () => window.removeEventListener('scroll', handleScroll);\r\n    // },[]);\r\n\r\n    const handleLoadMore = () => {\r\n        console.log(\"load more\");\r\n        if(hasNextPage)\r\n        {\r\n            setIsLoadingData(true);\r\n            const request: PagedRequest = {\r\n            pageIndex: pageIndex,\r\n            pageSize: pageSize\r\n        };\r\n\r\n        ExpenseService.GetPagedUserExpenses(request, props.topic)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    setExpenses([...expenses, ...result.data.items]);\r\n                    console.log(result.data.items.length + \" \" + pageSize);\r\n                    console.log(result.data.items.length == pageSize);\r\n                    setHasNextPage(result.data.items.length == pageSize);\r\n                    setIsLoadingData(false);\r\n                    setPageIndex(pageIndex + 1);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    const infiniteRef = useInfiniteScroll({\r\n        loading:isLoadingData,\r\n        hasNextPage,\r\n        onLoadMore: handleLoadMore,\r\n        scrollContainer: \"parent\"\r\n      });\r\n\r\n    // if(isLoading)\r\n    // {\r\n    //     return (<Grid container xs={12} justify=\"center\">\r\n    //     <CircularProgress color=\"secondary\" />\r\n    // </Grid>);\r\n    // }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <DialogTitle id=\"scroll-dialog-title\">\r\n                {props.topic.name}\r\n            </DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                <DialogContentText id=\"scroll-dialog-description\" ref={infiniteRef}\r\n                >\r\n                    {isLoadingData && expenses.length == 0 ? \r\n                        <Grid container xs={12} justify=\"center\">\r\n                            <CircularProgress color=\"secondary\" />\r\n                        </Grid>\r\n                        : expenses.length == 0 ?\r\n                        <Grid container xs={12} justify=\"center\">\r\n                            <Typography variant=\"h6\">\r\n                                You do not have any {props.topic.name} expeses\r\n                            </Typography>\r\n                        </Grid>\r\n                        : expenses.map((expense) => {\r\n\r\n                        let currencyCode: string = \"\";\r\n                        let purse = pursesData.find(p => p.id == expense.purseId);\r\n                        \r\n                        if(purse != null && purse != undefined)\r\n                        {\r\n                            currencyCode = purse.currencyCode.toUpperCase();\r\n                        }\r\n\r\n                        return(\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={expense.id + \"-content\"}\r\n                                id={expense.id + \"-header\"}\r\n                                >\r\n                                <Typography className={classes.heading}>{expense.title}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                <Typography>\r\n                                    {expense.title}<br/>\r\n                                    Date: {expense.date.getDate()}/\r\n                                    {GetMonthName(expense.date.getMonth())}/\r\n                                    {expense.date.getFullYear()}\r\n                                    <br/>\r\n                                    Sum: {expense.money} {currencyCode}\r\n                                </Typography>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n\r\n                        );\r\n                    })}\r\n                    {isLoadingData && \r\n                        <Grid container xs={12} justify=\"center\">\r\n                            <Typography variant=\"h6\">\r\n                                Loading expenses...\r\n                            </Typography>\r\n                        </Grid>}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={props.handleClose}\r\n                    >\r\n                    <Typography>\r\n                        Close\r\n                    </Typography>\r\n                </Button>\r\n            </DialogActions>     \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface TopicPaperProps\r\n{\r\n    topic: TopicWithExpenses\r\n}\r\n\r\nexport const TopicPaper: React.FC<TopicPaperProps> = (props) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const theme = useTheme();\r\n    \r\n    const handleOpen = () => {\r\n        setIsOpen(true);\r\n      };\r\n\r\n    const handleClose = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    const expensesTopic = props.topic.expenses.slice(0, 10);\r\n\r\n    return(\r\n        <Grid item xs={8} xl={7}>\r\n                                <Button style={{width:\"100%\", padding:0}} onClick={handleOpen}>\r\n                                <Paper elevation={20} style={{marginBottom:10, width:\"100%\"}}\r\n                                >\r\n                                    <Box display=\"flex\" p={1}\r\n                                    style={{backgroundColor: \"black\", color:\"white\",\r\n                                    borderRadius:\"10px 10px 0 0\"\r\n                                }} \r\n                                    justifyContent=\"center\">\r\n                                        <Typography>{props.topic.name}</Typography>\r\n                                    </Box>\r\n                                    {\r\n                                        expensesTopic.length == 0 &&\r\n                                        <Box display=\"flex\" justifyContent=\"center\"\r\n                                        flexWrap=\"wrap\">\r\n                                            <Typography variant=\"h5\">\r\n                                                There are not any expenses\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    }\r\n                                    {expensesTopic.map((expense) => {\r\n                                    return(\r\n                                    <Box display=\"flex\" justifyContent=\"center\"\r\n                                    flexWrap=\"wrap\" key={expense.id}\r\n                                    >\r\n                                        <Typography>\r\n                                            {expense.title} - {expense.money}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    );\r\n                                })}\r\n                        </Paper>\r\n                    </Button>\r\n                    <Dialog open={isOpen}\r\n                    scroll=\"paper\" aria-labelledby=\"scroll-dialog-title\"\r\n                    aria-describedby=\"scroll-dialog-description\"\r\n                    fullWidth={useMediaQuery(theme.breakpoints.down('lg'))}\r\n                    style={{minHeight: \"70vh\", maxHeight: \"70vh\"}}\r\n                    >\r\n                        <TopicExpensesList topic={{\r\n                            id: props.topic.id,\r\n                            name: props.topic.name\r\n                        }} \r\n                        handleClose={handleClose}\r\n                        />\r\n                    </Dialog>\r\n                </Grid>\r\n    );\r\n}\r\n\r\nexport default TopicPaper;"]},"metadata":{},"sourceType":"module"}