{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Forms\\\\SignInForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Button, DialogTitle, DialogContent, DialogContentText, DialogActions, makeStyles } from \"@material-ui/core\";\nimport InputForm from './InputForm';\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nconst validationSchema = yup.object().shape({\n  login: yup.string().required(\"Enter login!!!\"),\n  password: yup.string().required(\"Enter password!!!\")\n});\nconst useStyles = makeStyles(theme => ({\n  title: {\n    alignSelf: \"center\",\n    color: \"black\"\n  },\n  subtitle: {\n    color: \"black\"\n  },\n  buttonContainer: {\n    justifyContent: \"center\",\n    marginTop: 30\n  },\n  button: {\n    marginLeft: 50,\n    marginRight: 50\n  }\n}));\n\nconst SignInForm = props => {\n  _s();\n\n  const styles = useStyles();\n  const methods = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const {\n    handleSubmit,\n    errors\n  } = methods;\n\n  const onSubmit = formValues => {\n    props.signIn(formValues.login, formValues.password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      className: styles.title,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        className: styles.subtitle,\n        children: \"Please, fill fields to sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(InputForm, {\n          errorObj: errors,\n          name: \"login\",\n          label: \"Login(Username/Email)\",\n          autoFocus: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n          errorObj: errors,\n          type: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: styles.buttonContainer,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit(onSubmit),\n          className: styles.button,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleClose,\n          className: styles.button,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignInForm, \"1fPvP5eQ5hlJRwo5NZDNbKiiS68=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Forms/SignInForm.tsx"],"names":["React","useForm","FormProvider","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","makeStyles","InputForm","yup","yupResolver","validationSchema","object","shape","login","string","required","password","useStyles","theme","title","alignSelf","color","subtitle","buttonContainer","justifyContent","marginTop","button","marginLeft","marginRight","SignInForm","props","styles","methods","resolver","handleSubmit","errors","onSubmit","formValues","signIn","handleClose"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Grid, Button, DialogTitle, DialogContent, DialogContentText, DialogActions, makeStyles, Theme } from \"@material-ui/core\";\r\nimport InputForm from './InputForm';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport ISignInFormData from './FormDatas/ISignInFormData'\r\n\r\nconst validationSchema = yup.object().shape({\r\n    login: yup.string().required(\"Enter login!!!\"),\r\n    password: yup.string().required(\"Enter password!!!\")\r\n  });\r\n\r\ninterface ISignInFormProps\r\n{\r\n    handleClose(): void,\r\n    signIn(login: string, password: string): void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    title: {\r\n        alignSelf: \"center\",\r\n        color: \"black\"\r\n    },\r\n    subtitle: {\r\n        color: \"black\"\r\n    },\r\n    buttonContainer: {\r\n        justifyContent: \"center\",\r\n        marginTop: 30\r\n    },\r\n    button: {\r\n        marginLeft:50,\r\n        marginRight:50\r\n    }\r\n}));\r\n\r\nconst SignInForm: React.FC<ISignInFormProps> = (props) => {\r\n\r\n    const styles = useStyles();\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const { handleSubmit, errors } = methods;\r\n    const onSubmit = (formValues: ISignInFormData) => {\r\n        props.signIn(formValues.login, formValues.password);\r\n    };\r\n\r\n    return(\r\n        <FormProvider {...methods}>\r\n            <DialogTitle id=\"form-dialog-title\" className={styles.title}>\r\n                Sign In\r\n            </DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText className={styles.subtitle}>\r\n                Please, fill fields to sign in\r\n            </DialogContentText>\r\n            <form>\r\n                <InputForm \r\n                errorObj={errors}\r\n                name=\"login\" \r\n                label=\"Login(Username/Email)\" \r\n                autoFocus={true} \r\n                required={true}\r\n                />\r\n                <InputForm \r\n                errorObj={errors}\r\n                type=\"password\"\r\n                name=\"password\" \r\n                label=\"Password\" \r\n                required={true}\r\n                />\r\n            </form>\r\n            <DialogActions className={styles.buttonContainer}>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={handleSubmit(onSubmit)}\r\n                    className={styles.button}\r\n                    >\r\n                    Sign In\r\n                </Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={props.handleClose}\r\n                    className={styles.button}\r\n                    >\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n            </DialogContent>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\nexport default SignInForm;"]},"metadata":{},"sourceType":"module"}