{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\ExpensesList\\\\ExpensesList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, GridList, CircularProgress } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport TopicService from '../../Services/topic.services/TopicService';\nimport { TopicPaper } from './TopicPaper';\nexport const ExpensesList = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true); // const [topics, setTopics, removeTopics] = useSessionStorage<Topic[]>(\"topics\", []);\n  // const [expenses, setExpenses, removeExpenses] = useSessionStorage<Expense[]>(\"expenses\", []);\n\n  const [topicsWithExpenses, setTopicsWithExpenses, removeTopicsWithExpenses] = useSessionStorage(\"topicsWithExpenses\", []);\n  useEffect(() => {\n    if (topicsWithExpenses.length == 0) {\n      TopicService.GetTopicsWithExpenses(10).then(result => {\n        if (result.response.status == 200) {\n          setTopicsWithExpenses(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(GridList, {\n    cellHeight: \"auto\",\n    cols: 2,\n    style: {\n      width: \"100%\",\n      paddingBottom: 40,\n      marginTop: 20\n    },\n    children: topicsWithExpenses.map(topic => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: \"center\",\n        style: {\n          marginBottom: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(TopicPaper, {\n          topic: topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, topic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpensesList, \"ZND4dfHGbBGbI+LOaufINncem1c=\", false, function () {\n  return [useSessionStorage];\n});\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/ExpensesList/ExpensesList.tsx"],"names":["Grid","GridList","CircularProgress","React","useEffect","useState","useSessionStorage","TopicService","TopicPaper","ExpensesList","isLoading","setIsLoading","topicsWithExpenses","setTopicsWithExpenses","removeTopicsWithExpenses","length","GetTopicsWithExpenses","then","result","response","status","data","catch","error","console","log","width","paddingBottom","marginTop","map","topic","marginBottom","id"],"mappings":";;;;;AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyDC,gBAAzD,QAAqH,mBAArH;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AAEA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAMC,YAAsB,GAAG,MAAM;AAAA;;AAExC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C,CAFwC,CAGxC;AACA;;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,EACFC,wBADE,IAC0BR,iBAAiB,CAAsB,oBAAtB,EAA4C,EAA5C,CADjD;AAGAF,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGQ,kBAAkB,CAACG,MAAnB,IAA6B,CAAhC,EACA;AACIR,MAAAA,YAAY,CAACS,qBAAb,CAAmC,EAAnC,EACCC,IADD,CACMC,MAAM,IAAI;AACZ,YAAGA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,IAA0B,GAA7B,EACA;AACIP,UAAAA,qBAAqB,CAACK,MAAM,CAACG,IAAR,CAArB;AACAV,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,OAPD,EAQCW,KARD,CAQOC,KAAK,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVD;AAWH,KAbD,MAeA;AACIZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AAEJ,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,MAAGD,SAAH,EACA;AACI,wBACA,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,EAAE,EAAE,EAApB;AAAwB,MAAA,OAAO,EAAC,QAAhC;AAAA,6BACI,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAIH;;AAED,sBACI,QAAC,QAAD;AAAU,IAAA,UAAU,EAAE,MAAtB;AACA,IAAA,IAAI,EAAE,CADN;AACS,IAAA,KAAK,EAAE;AAACgB,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,aAAa,EAAC,EAA7B;AAAiCC,MAAAA,SAAS,EAAC;AAA3C,KADhB;AAAA,cAGKhB,kBAAkB,CAACiB,GAAnB,CAAwBC,KAAD,IAAW;AAE/B,0BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,SAAS,MAApB;AAAoC,QAAA,OAAO,EAAC,QAA5C;AAAqD,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAA5D;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,KAAK,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ,SAA0BA,KAAK,CAACE,EAAhC;AAAA;AAAA;AAAA;AAAA,cADJ;AAKC,KAPJ;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CArDM;;GAAMvB,Y;UAMuBH,iB;;;KANvBG,Y;AAwDb,eAAeA,YAAf","sourcesContent":["import { Grid, GridList, Button, Box, Paper, Typography, CircularProgress, Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport TopicWithExpenses from '../../Data/Models/Topics/TopicWithExpenses';\r\nimport TopicService from '../../Services/topic.services/TopicService';\r\nimport { TopicPaper } from './TopicPaper';\r\n\r\nexport const ExpensesList: React.FC = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    // const [topics, setTopics, removeTopics] = useSessionStorage<Topic[]>(\"topics\", []);\r\n    // const [expenses, setExpenses, removeExpenses] = useSessionStorage<Expense[]>(\"expenses\", []);\r\n    const [topicsWithExpenses, setTopicsWithExpenses, \r\n        removeTopicsWithExpenses] = useSessionStorage<TopicWithExpenses[]>(\"topicsWithExpenses\", []);\r\n\r\n    useEffect(() => {\r\n\r\n        if(topicsWithExpenses.length == 0)\r\n        {\r\n            TopicService.GetTopicsWithExpenses(10)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    setTopicsWithExpenses(result.data);\r\n                    setIsLoading(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n        else\r\n        {\r\n            setIsLoading(false);\r\n        }\r\n\r\n    }, []);\r\n\r\n    if(isLoading)\r\n    {\r\n        return(\r\n        <Grid container xs={12} justify=\"center\">\r\n            <CircularProgress color=\"secondary\" />\r\n        </Grid>);\r\n    }\r\n\r\n    return(\r\n        <GridList cellHeight={\"auto\"}\r\n        cols={2} style={{width:\"100%\", paddingBottom:40, marginTop:20}}\r\n        >\r\n            {topicsWithExpenses.map((topic) => {\r\n\r\n                return(\r\n                    <Grid item container key={topic.id} justify=\"center\" style={{ marginBottom: 10}}>\r\n                        <TopicPaper topic={topic} />\r\n                    </Grid>\r\n                );\r\n                })}\r\n        </GridList>\r\n    );\r\n}\r\n\r\n\r\nexport default ExpensesList;"]},"metadata":{},"sourceType":"module"}