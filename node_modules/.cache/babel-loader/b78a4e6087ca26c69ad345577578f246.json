{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Pages\\\\TopicsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Accordion, AccordionDetails, AccordionSummary, Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, Grid, makeStyles, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\nimport GridPaperHeader from '../GridPaper/GridPaperHeader';\nimport { deleteTopic, getMaxUserTopics, getTopicsForList } from '../../Services/topic.services/TopicService';\nimport CreateTopicForm from '../Forms/topicForms/CreateTopicForm';\nimport EditTopicForm from '../Forms/topicForms/EditTopicForm';\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  buttons: {\n    width: 100\n  }\n}));\nexport const TopicsPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isLoadingTopics, setIsLoadingTopics] = useState(true);\n  const [topicsForList, setTopicsForList] = useState([]);\n  const [maxCountTopics, setMaxCountTopics] = useState(0);\n  const [isLoadingCurrencies, setIsLoadingCurrencies] = useState(true);\n  const theme = useTheme();\n  const [dialog, setDialog] = useState({\n    isOpen: false,\n    action: \"update\",\n    itemId: 0\n  });\n  const width = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const handleOpen = (action, itemId) => {\n    if (itemId == undefined) {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action\n      });\n    } else {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action,\n        itemId: itemId\n      });\n    }\n  };\n\n  const handleClose = () => {\n    setDialog({ ...dialog,\n      isOpen: false\n    });\n  };\n\n  useEffect(() => {\n    getTopicsForList().then(res => {\n      if (res.response.status == 200) {\n        setTopicsForList([...res.data]);\n        setIsLoadingTopics(false);\n      }\n    });\n    getMaxUserTopics().then(res => {\n      if (res.response.status == 200) {\n        setMaxCountTopics(res.data);\n        setIsLoadingCurrencies(false);\n      }\n    });\n  }, []);\n  useNonInitialEffect(() => {\n    if (!dialog.isOpen) //if we close nested dialog, we rerender whole component\n      {\n        setIsLoadingTopics(true);\n        getTopicsForList().then(res => {\n          if (res.response.status == 200) {\n            setTopicsForList([...res.data]);\n            setIsLoadingTopics(false);\n          }\n        });\n      }\n  }, [dialog]);\n\n  const handleDeleteTopic = async id => {\n    deleteTopic(id).then(res => {\n      handleClose();\n    }).catch(error => {\n      console.log(error);\n      handleClose();\n    });\n  };\n\n  if (isLoadingTopics) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"baseline\",\n      className: \"contentDiv\",\n      xs: 10,\n      xl: 9,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          xs: 12,\n          direction: \"row-reverse\",\n          spacing: 2,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: isLoadingTopics || isLoadingCurrencies ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              disabled: topicsForList.length >= maxCountTopics,\n              variant: \"outlined\",\n              onClick: () => {\n                handleOpen(\"create\");\n              },\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Count topics: \", isLoadingTopics ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this) : topicsForList.length, \"/\", isLoadingCurrencies ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this) : maxCountTopics]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          spacing: 2,\n          children: isLoadingTopics ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this) : topicsForList.length == 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"There are not any topics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this) : topicsForList.map(topic => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              xs: 12,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Accordion, {\n                style: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(GridPaperHeader, {\n                    style: {\n                      margin: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(AccordionSummary, {\n                    expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 57\n                    }, this),\n                    \"aria-controls\": topic.id + \"-content\",\n                    id: topic.id + \"-header\",\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.heading,\n                      children: topic.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    xs: 12,\n                    spacing: 6,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        children: [\"Topic name: \", topic.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 82\n                        }, this), \"Count expenses: \", topic.countExpenses]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      spacing: 3,\n                      item: true,\n                      container: true,\n                      xs: 12,\n                      direction: \"row-reverse\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          color: \"secondary\",\n                          onClick: () => {\n                            handleOpen(\"delete\", topic.id);\n                          },\n                          className: classes.buttons,\n                          disabled: topic.isGeneral,\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            children: \"Delete\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 178,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          color: \"primary\",\n                          onClick: () => {\n                            handleOpen(\"update\", topic.id);\n                          },\n                          className: classes.buttons,\n                          disabled: topic.isGeneral,\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            children: \"Edit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 194,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this)]\n              }, topic.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this)\n            }, topic.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialog.isOpen,\n      fullWidth: width,\n      children: dialog.action == \"create\" ? /*#__PURE__*/_jsxDEV(CreateTopicForm, {\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this) : dialog.action == \"update\" ? /*#__PURE__*/_jsxDEV(EditTopicForm, {\n        topicId: dialog.itemId,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Delete topic?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Are you sure you want to delete this topic?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: async () => {\n              await handleDeleteTopic(dialog.itemId);\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopicsPage, \"KjpUukQNHdxJ/5UHidbBrO6zJGU=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery, useNonInitialEffect];\n});\n\n_c = TopicsPage;\nexport default TopicsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopicsPage\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Pages/TopicsPage.tsx"],"names":["Accordion","AccordionDetails","AccordionSummary","Button","CircularProgress","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","Grid","makeStyles","Typography","useMediaQuery","useTheme","React","useEffect","useState","ExpandMoreIcon","useNonInitialEffect","GridPaperHeader","deleteTopic","getMaxUserTopics","getTopicsForList","CreateTopicForm","EditTopicForm","useStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","buttons","width","TopicsPage","classes","isLoadingTopics","setIsLoadingTopics","topicsForList","setTopicsForList","maxCountTopics","setMaxCountTopics","isLoadingCurrencies","setIsLoadingCurrencies","dialog","setDialog","isOpen","action","itemId","breakpoints","down","handleOpen","undefined","handleClose","then","res","response","status","data","handleDeleteTopic","id","catch","error","console","log","length","map","topic","margin","name","countExpenses","isGeneral"],"mappings":"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","sourcesContent":["import { Accordion, AccordionDetails, AccordionSummary, Button, \r\n    CircularProgress, Dialog, DialogActions, DialogContent, \r\n    DialogContentText, DialogTitle, Divider, Grid, makeStyles, \r\n    Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\r\nimport GridPaperHeader from '../GridPaper/GridPaperHeader';\r\nimport { deleteTopic, getMaxUserTopics, getTopicsForList } from '../../Services/topic.services/TopicService';\r\nimport TopicForList from '../../Data/Models/Topics/TopicForList';\r\nimport CreateTopicForm from '../Forms/topicForms/CreateTopicForm';\r\nimport EditTopicForm from '../Forms/topicForms/EditTopicForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n      buttons: {\r\n          width: 100\r\n      }\r\n}));\r\n\r\nexport const TopicsPage: React.FC = () => {\r\n\r\n    const classes = useStyles();\r\n    const [isLoadingTopics, setIsLoadingTopics] = useState<boolean>(true);\r\n    const [topicsForList, setTopicsForList] = useState<TopicForList[]>([]);\r\n    const [maxCountTopics, setMaxCountTopics] = useState<number>(0);\r\n    const [isLoadingCurrencies, setIsLoadingCurrencies] = useState<boolean>(true);\r\n    const theme = useTheme();\r\n    const [dialog, setDialog] = useState<{\r\n        isOpen: boolean, \r\n        action: \"update\" | \"create\" | \"delete\",\r\n        itemId: number\r\n    }>({isOpen: false, action: \"update\", itemId: 0});\r\n    const width = useMediaQuery(theme.breakpoints.down('lg'));\r\n\r\n    const handleOpen = (action: \"update\" | \"create\" | \"delete\", itemId?: number) => {\r\n        if(itemId == undefined)\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action});\r\n        }\r\n        else\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action, itemId: itemId})\r\n        }\r\n      }\r\n\r\n    const handleClose = () => {\r\n        setDialog({...dialog, isOpen: false});\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTopicsForList()\r\n            .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    setTopicsForList([...res.data]);\r\n                    setIsLoadingTopics(false);\r\n                }\r\n            });\r\n\r\n        getMaxUserTopics()\r\n            .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    setMaxCountTopics(res.data);\r\n                    setIsLoadingCurrencies(false);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    useNonInitialEffect(() => {\r\n        if(!dialog.isOpen) //if we close nested dialog, we rerender whole component\r\n        {\r\n            setIsLoadingTopics(true);\r\n            getTopicsForList()\r\n                .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    setTopicsForList([...res.data]);\r\n                    setIsLoadingTopics(false);\r\n                }\r\n            });\r\n        }\r\n    }, [dialog])\r\n\r\n    const handleDeleteTopic = async (id: number) => {\r\n        deleteTopic(id)\r\n            .then(res => {\r\n                handleClose();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                handleClose();\r\n            });\r\n    }\r\n\r\n    if(isLoadingTopics)\r\n    {\r\n      return (\r\n        <Grid container xs={12} justify=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container justify=\"center\" alignItems=\"baseline\"\r\n            className=\"contentDiv\" xs={10} xl={9}>\r\n                <Grid item container xs={12} spacing={5}>\r\n                    <Grid item container xs={12} direction=\"row-reverse\"\r\n                    spacing={2} alignItems=\"center\">\r\n                        <Grid item>\r\n                            {isLoadingTopics || isLoadingCurrencies ? \r\n                            <CircularProgress color=\"secondary\" /> :\r\n                            <Button color=\"secondary\" \r\n                            disabled={topicsForList.length >= maxCountTopics} \r\n                            variant=\"outlined\" onClick={() => {handleOpen(\"create\");}}>\r\n                                Create\r\n                            </Button>\r\n                            }\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\">\r\n                                Count topics: {isLoadingTopics ?\r\n                                <CircularProgress color=\"secondary\" /> :\r\n                                    topicsForList.length}/{isLoadingCurrencies ?\r\n                                <CircularProgress color=\"secondary\" /> :\r\n                                    maxCountTopics}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Divider variant=\"middle\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item container xs={12} justify=\"center\" spacing={2}>\r\n                        {isLoadingTopics ? \r\n                        <Grid item>\r\n                            <CircularProgress color=\"secondary\" />\r\n                        </Grid> :\r\n                        topicsForList.length == 0 ? \r\n                        <Grid item>\r\n                            <Typography variant=\"h5\">\r\n                                There are not any topics\r\n                            </Typography>\r\n                        </Grid> :\r\n                        topicsForList.map((topic) => {\r\n                            return(\r\n                                <Grid key={topic.id} item container xs={12} justify=\"center\">\r\n                                    <Accordion key={topic.id} style={{width: \"100%\"}}>\r\n                                        <Grid item xs={12}>\r\n                                            <GridPaperHeader style={{margin:0}} />\r\n                                            <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls={topic.id + \"-content\"}\r\n                                            id={topic.id + \"-header\"}\r\n                                            >\r\n                                                <Typography className={classes.heading}>\r\n                                                    {topic.name}\r\n                                                </Typography>\r\n                                            </AccordionSummary>\r\n                                        </Grid>\r\n                                        <AccordionDetails>\r\n                                            <Grid container xs={12} spacing={6}>\r\n                                                <Grid container item xs={12}>\r\n                                                    <Typography>\r\n                                                        Topic name: {topic.name} <br/>\r\n                                                        Count expenses: {topic.countExpenses}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid spacing={3}\r\n                                                    item container xs={12} \r\n                                                    direction=\"row-reverse\">\r\n                                                    <Grid item>\r\n                                                        <Button variant=\"contained\" \r\n                                                            color=\"secondary\" \r\n                                                            onClick={() => {handleOpen(\"delete\", topic.id);}}\r\n                                                            className={classes.buttons}\r\n                                                            disabled={topic.isGeneral} >\r\n                                                            <Typography>\r\n                                                                Delete\r\n                                                            </Typography>\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Button variant=\"contained\" \r\n                                                        color=\"primary\" \r\n                                                        onClick={() => {handleOpen(\"update\", topic.id);}}\r\n                                                        className={classes.buttons}\r\n                                                        disabled={topic.isGeneral} >\r\n                                                            <Typography>\r\n                                                                Edit\r\n                                                            </Typography>\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                </Grid>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={dialog.isOpen} fullWidth={width}>\r\n                {dialog.action == \"create\" ? \r\n                <CreateTopicForm handleClose={handleClose} /> :\r\n                dialog.action == \"update\" ?\r\n                <EditTopicForm topicId={dialog.itemId} handleClose={handleClose} /> :\r\n                <React.Fragment>\r\n                    <DialogTitle>\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography variant=\"h6\">Delete topic?</Typography>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers={true}>\r\n                        <DialogContentText>\r\n                            <Typography>\r\n                                Are you sure you want to delete this topic?\r\n                            </Typography>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"secondary\"\r\n                        onClick={async () => {await handleDeleteTopic(dialog.itemId);}}\r\n                        >\r\n                        <Typography>\r\n                            Delete\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={handleClose}\r\n                        >\r\n                        <Typography>\r\n                            Close\r\n                        </Typography>\r\n                    </Button>\r\n                    </DialogActions>\r\n                </React.Fragment>\r\n                }\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TopicsPage;"]},"metadata":{},"sourceType":"module"}