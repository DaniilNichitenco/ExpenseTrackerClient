{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\ErrorBoundaries\\\\ErrorBoundary.tsx\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: false,\n      error: undefined,\n      errorInfo: undefined\n    };\n  }\n\n  static getDerivedStateFromError(_) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error: new Error(\"asd\"),\n      errorInfo: undefined\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n    this.state.error = error;\n    this.state.errorInfo = errorInfo;\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        alignItems: \"baseline\",\n        className: \"contentDiv\",\n        xs: 10,\n        xl: 9,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          xs: 10,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            justify: \"center\",\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: \"Something went wrong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            justify: \"center\",\n            xs: 12,\n            children: this.props.admin ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Error: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 32\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Try to refresh that page. If after refreshing you still see this message, then server may be down.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/ErrorBoundaries/ErrorBoundary.tsx"],"names":["Grid","Typography","React","Component","ErrorBoundary","state","hasError","error","undefined","errorInfo","getDerivedStateFromError","_","Error","componentDidCatch","console","render","props","admin","children"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAuD,OAAvD;;AAaA,MAAMC,aAAN,SAA4BD,SAA5B,CAA8E;AAAA;AAAA;AAAA,SACrEE,KADqE,GACzC;AACjCC,MAAAA,QAAQ,EAAE,KADuB;AAEjCC,MAAAA,KAAK,EAAEC,SAF0B;AAGjCC,MAAAA,SAAS,EAAED;AAHsB,KADyC;AAAA;;AAO5E,SAAcE,wBAAd,CAAuCC,CAAvC,EAAqE;AACnE;AACA,WAAO;AAACL,MAAAA,QAAQ,EAAE,IAAX;AAAiBC,MAAAA,KAAK,EAAE,IAAIK,KAAJ,CAAU,KAAV,CAAxB;AAA0CH,MAAAA,SAAS,EAAED;AAArD,KAAP;AACD;;AAEMK,EAAAA,iBAAP,CAAyBN,KAAzB,EAAuCE,SAAvC,EAA6D;AAC3DK,IAAAA,OAAO,CAACP,KAAR,CAAc,iBAAd,EAAiCA,KAAjC,EAAwCE,SAAxC;AACA,SAAKJ,KAAL,CAAWE,KAAX,GAAmBA,KAAnB;AACA,SAAKF,KAAL,CAAWI,SAAX,GAAuBA,SAAvB;AACD;;AAEMM,EAAAA,MAAP,GAAgB;AACd,QAAI,KAAKV,KAAL,CAAWC,QAAf,EACA;AACE,0BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAiC,QAAA,UAAU,EAAC,UAA5C;AACI,QAAA,SAAS,EAAC,YADd;AAC2B,QAAA,EAAE,EAAE,EAD/B;AACmC,QAAA,EAAE,EAAE,CADvC;AAAA,+BAEI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,EAAE,EAAE,EAAzB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,SAAS,MAApB;AAAqB,YAAA,OAAO,EAAC,QAA7B;AAAsC,YAAA,EAAE,EAAE,EAA1C;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,SAAS,MAApB;AAAqB,YAAA,OAAO,EAAC,QAA7B;AAAsC,YAAA,EAAE,EAAE,EAA1C;AAAA,sBACK,KAAKU,KAAL,CAAWC,KAAX,gBACD,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA,iDACW;AAAA;AAAA;AAAA;AAAA,sBADX;AAAA;AAAA;AAAA;AAAA;AAAA,oBADC,gBAKD,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADF;AAwBD;;AAED,WAAO,KAAKD,KAAL,CAAWE,QAAlB;AACD;;AAhD2E;;AAmD9E,eAAed,aAAf","sourcesContent":["import { Grid, Typography } from \"@material-ui/core\";\r\nimport React, { Component, ErrorInfo, ReactNode } from \"react\";\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: ReactNode;\r\n  admin?: boolean;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean;\r\n  error: Error | undefined;\r\n  errorInfo: ErrorInfo | undefined;\r\n}\r\n\r\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  public state: ErrorBoundaryState = {\r\n    hasError: false,\r\n    error: undefined,\r\n    errorInfo: undefined\r\n  };\r\n\r\n  public static getDerivedStateFromError(_: Error): ErrorBoundaryState {\r\n    // Update state so the next render will show the fallback UI.\r\n    return {hasError: true, error: new Error(\"asd\"), errorInfo: undefined};\r\n  }\r\n\r\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error(\"Uncaught error:\", error, errorInfo);\r\n    this.state.error = error;\r\n    this.state.errorInfo = errorInfo;\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.hasError) \r\n    {\r\n      return (\r\n        <Grid container justify=\"center\" alignItems=\"baseline\"\r\n            className=\"contentDiv\" xs={10} xl={9}>\r\n            <Grid item container xs={10}>\r\n                <Grid item container justify=\"center\" xs={12}>\r\n                    <Typography variant=\"h4\">\r\n                        Something went wrong\r\n                    </Typography>\r\n                </Grid>    \r\n                <Grid item container justify=\"center\" xs={12}>\r\n                    {this.props.admin ? \r\n                    <Typography variant=\"h6\">\r\n                        Error: <br /> {}\r\n                    </Typography>\r\n                    :\r\n                    <Typography variant=\"h6\">\r\n                        Try to refresh that page. If after refreshing you \r\n                        still see this message, then server may be down.\r\n                    </Typography>\r\n                    }\r\n                </Grid>    \r\n            </Grid>     \r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;"]},"metadata":{},"sourceType":"module"}