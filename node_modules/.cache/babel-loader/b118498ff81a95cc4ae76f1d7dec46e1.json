{"ast":null,"code":"import _slicedToArray from\"D:/vscommunity/ExpenseTrackerFront/expensetracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{deepEqual,propertiesEqual}from\"../../Comparers/ObjectsComparer\";var useSessionStorage=function useSessionStorage(key,initialValue){var check=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var _useState=useState(function(){try{var item=sessionStorage.getItem(key);if(item!=null&&item!=\"undefined\"){return JSON.parse(item);}return initialValue;}catch(error){console.log(\"Error happens in useSessionStorage hook, useCustomState func, block 'storedValue'\");console.log(error);return initialValue;}}),_useState2=_slicedToArray(_useState,2),storedValue=_useState2[0],setStoredValue=_useState2[1];var checkItem=storedValue;var setValue=function setValue(value){try{var valueToStore=value instanceof Function?value(storedValue):value;setStoredValue(valueToStore);sessionStorage.setItem(key,JSON.stringify(valueToStore));}catch(error){console.log(\"Error happens in useSessionStorage hook, block 'setValue'\");console.log(error);}};var removeValue=function removeValue(){var item=sessionStorage.getItem(key);if(item!=null){sessionStorage.removeItem(key);}};useEffect(function(){if(check){setInterval(function(){var itemStr=sessionStorage.getItem(key);if(itemStr!=null){try{var item=JSON.parse(itemStr);if(propertiesEqual(item,storedValue)){if(!deepEqual(item,checkItem)){setStoredValue(item);checkItem=item;}}}catch(error){console.log(error);}}},3000);}},[]);return[storedValue,setValue,removeValue];};export default useSessionStorage;","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/CustomHooks/StorageHooks/useSessionStorage.tsx"],"names":["useEffect","useState","deepEqual","propertiesEqual","useSessionStorage","key","initialValue","check","item","sessionStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","checkItem","setValue","value","valueToStore","Function","setItem","stringify","removeValue","removeItem","setInterval","itemStr"],"mappings":"oIAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,SAAT,CAAoBC,eAApB,KAA2C,iCAA3C,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAoBC,GAApB,CAAiCC,YAAjC,CAAmE,IAAlBC,CAAAA,KAAkB,2DAAV,KAAU,eAEnDN,QAAQ,CAAI,UAAM,CACpD,GACA,CACI,GAAMO,CAAAA,IAAI,CAAGC,cAAc,CAACC,OAAf,CAAuBL,GAAvB,CAAb,CACA,GAAGG,IAAI,EAAI,IAAR,EAAgBA,IAAI,EAAI,WAA3B,CACA,CACI,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP,CACH,CACD,MAAOF,CAAAA,YAAP,CACH,CACD,MAAMO,KAAN,CACA,CACIC,OAAO,CAACC,GAAR,CAAY,mFAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,MAAOP,CAAAA,YAAP,CACH,CACJ,CAhB6C,CAF2C,wCAElFU,WAFkF,eAErEC,cAFqE,eAoBzF,GAAIC,CAAAA,SAAS,CAAGF,WAAhB,CAEA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAc,CAC3B,GACA,CACI,GAAMC,CAAAA,YAAY,CAAGD,KAAK,WAAYE,CAAAA,QAAjB,CACjBF,KAAK,CAACJ,WAAD,CADY,CACII,KADzB,CAGAH,cAAc,CAACI,YAAD,CAAd,CACAZ,cAAc,CAACc,OAAf,CAAuBlB,GAAvB,CAA4BM,IAAI,CAACa,SAAL,CAAeH,YAAf,CAA5B,EACH,CACD,MAAMR,KAAN,CACA,CACIC,OAAO,CAACC,GAAR,CAAY,2DAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CACJ,CAdD,CAgBA,GAAMY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAMjB,CAAAA,IAAI,CAAGC,cAAc,CAACC,OAAf,CAAuBL,GAAvB,CAAb,CACA,GAAGG,IAAI,EAAI,IAAX,CACA,CACIC,cAAc,CAACiB,UAAf,CAA0BrB,GAA1B,EACH,CACJ,CAND,CAQAL,SAAS,CAAC,UAAM,CACZ,GAAGO,KAAH,CACA,CACIoB,WAAW,CAAC,UAAM,CACd,GAAMC,CAAAA,OAAO,CAAGnB,cAAc,CAACC,OAAf,CAAuBL,GAAvB,CAAhB,CACA,GAAGuB,OAAO,EAAI,IAAd,CACA,CACI,GACA,CACI,GAAMpB,CAAAA,IAAI,CAAGG,IAAI,CAACC,KAAL,CAAWgB,OAAX,CAAb,CACA,GAAGzB,eAAe,CAACK,IAAD,CAAOQ,WAAP,CAAlB,CACA,CACI,GAAG,CAACd,SAAS,CAACM,IAAD,CAAOU,SAAP,CAAb,CACA,CACID,cAAc,CAACT,IAAD,CAAd,CACAU,SAAS,CAAGV,IAAZ,CACH,CACJ,CACJ,CACD,MAAMK,KAAN,CACA,CACIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CACJ,CACJ,CArBU,CAqBR,IArBQ,CAAX,CAsBH,CACJ,CA1BQ,CA0BN,EA1BM,CAAT,CA4BA,MAAO,CAACG,WAAD,CAAcG,QAAd,CAAwBM,WAAxB,CAAP,CACH,CA3ED,CA6EA,cAAerB,CAAAA,iBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { deepEqual, propertiesEqual } from \"../../Comparers/ObjectsComparer\";\r\n\r\nconst useSessionStorage = <T extends unknown>(key: string, initialValue:T, check = false) => {\r\n\r\n    const [storedValue, setStoredValue] = useState<T>(() => {\r\n        try\r\n        {\r\n            const item = sessionStorage.getItem(key);\r\n            if(item != null && item != \"undefined\")\r\n            {\r\n                return JSON.parse(item);\r\n            }\r\n            return initialValue;\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(\"Error happens in useSessionStorage hook, useCustomState func, block 'storedValue'\");\r\n            console.log(error);\r\n            return initialValue;\r\n        }   \r\n    });\r\n\r\n    let checkItem = storedValue;\r\n\r\n    const setValue = (value: T) => {\r\n        try\r\n        {\r\n            const valueToStore = value instanceof Function ?\r\n                value(storedValue) : value;\r\n            \r\n            setStoredValue(valueToStore);\r\n            sessionStorage.setItem(key, JSON.stringify(valueToStore));\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(\"Error happens in useSessionStorage hook, block 'setValue'\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const removeValue = () => {\r\n        const item = sessionStorage.getItem(key);\r\n        if(item != null)\r\n        {\r\n            sessionStorage.removeItem(key);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(check)\r\n        {\r\n            setInterval(() => {\r\n                const itemStr = sessionStorage.getItem(key);\r\n                if(itemStr != null)\r\n                {\r\n                    try\r\n                    {\r\n                        const item = JSON.parse(itemStr) as T;\r\n                        if(propertiesEqual(item, storedValue))\r\n                        {\r\n                            if(!deepEqual(item, checkItem))\r\n                            {\r\n                                setStoredValue(item);\r\n                                checkItem = item;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch(error : any)\r\n                    {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            }, 3000);\r\n        }\r\n    }, []);\r\n\r\n    return [storedValue, setValue, removeValue] as const;\r\n}\r\n\r\nexport default useSessionStorage;"]},"metadata":{},"sourceType":"module"}