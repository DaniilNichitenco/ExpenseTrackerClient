{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Diagrams\\\\Generic\\\\LineDiagram.tsx\",\n    _s = $RefreshSig$();\n\nimport { Line } from 'react-chartjs-2';\nimport React, { useContext, useEffect } from 'react';\nimport PursesContext from '../../../Context/PursesContext';\n\nconst randomColor = require('random-color');\n\nconst LineDiagram = props => {\n  _s();\n\n  const pursesContext = useContext(PursesContext);\n  let dataset;\n  useEffect(() => {\n    props.getExpenses(props.time, props.code);\n    pursesContext.pursesData.purses.forEach(p => {\n      let color = randomColor(0.99, 0.99);\n    });\n  }, []);\n  const state = {\n    labels: props.time,\n    datasets: [{\n      label: 'Rainfall',\n      data: [0, 59, 80, 81, 56],\n      lineTension: 0.1,\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 2,\n      pointHoverRadius: 9,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 4,\n      pointHitRadius: 10\n    }, {\n      label: 'Test',\n      data: [0, 15, 9, 40, 35],\n      lineTension: 0.1,\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: 'red',\n      pointBorderWidth: 2,\n      pointHoverRadius: 9,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 4,\n      pointHitRadius: 10\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: state,\n      options: {\n        title: {\n          display: true,\n          text: 'Average Rainfall per month',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LineDiagram, \"gtJMKKKuudgIXaMCVEh91e5ZWac=\");\n\n_c = LineDiagram;\nexport default LineDiagram;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineDiagram\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Diagrams/Generic/LineDiagram.tsx"],"names":["Line","React","useContext","useEffect","PursesContext","randomColor","require","LineDiagram","props","pursesContext","dataset","getExpenses","time","code","pursesData","purses","forEach","p","color","state","labels","datasets","label","data","lineTension","fill","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","title","display","text","fontSize","legend","position"],"mappings":";;;;;AAAA,SAASA,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEE,MAAMC,WAAoB,GAAIC,KAAD,IAAe;AAAA;;AAE1C,QAAMC,aAAa,GAAGP,UAAU,CAACE,aAAD,CAAhC;AAEA,MAAIM,OAAJ;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACG,WAAN,CAAkBH,KAAK,CAACI,IAAxB,EAA8BJ,KAAK,CAACK,IAApC;AAEAJ,IAAAA,aAAa,CAACK,UAAd,CAAyBC,MAAzB,CAAgCC,OAAhC,CAAwCC,CAAC,IAAI;AAC3C,UAAIC,KAAK,GAAGb,WAAW,CAAC,IAAD,EAAO,IAAP,CAAvB;AAGD,KAJD;AAMD,GATQ,EASP,EATO,CAAT;AAWA,QAAMc,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAEZ,KAAK,CAACI,IADF;AAEZS,IAAAA,QAAQ,EAAE,CACR;AACFC,MAAAA,KAAK,EAAE,UADL;AAEFC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,CAFJ;AAGFC,MAAAA,WAAW,EAAE,GAHX;AAIFC,MAAAA,IAAI,EAAE,KAJJ;AAKFC,MAAAA,eAAe,EAAE,sBALf;AAMFC,MAAAA,WAAW,EAAE,oBANX;AAOFC,MAAAA,gBAAgB,EAAE,oBAPhB;AAQFC,MAAAA,oBAAoB,EAAE,MARpB;AASFC,MAAAA,gBAAgB,EAAE,CAThB;AAUFC,MAAAA,gBAAgB,EAAE,CAVhB;AAWFC,MAAAA,yBAAyB,EAAE,oBAXzB;AAYFC,MAAAA,qBAAqB,EAAE,qBAZrB;AAaFC,MAAAA,qBAAqB,EAAE,CAbrB;AAcFC,MAAAA,WAAW,EAAE,CAdX;AAeFC,MAAAA,cAAc,EAAE;AAfd,KADQ,EAkBR;AACEd,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,EAAf,CAFR;AAGEC,MAAAA,WAAW,EAAE,GAHf;AAIEC,MAAAA,IAAI,EAAE,KAJR;AAKFC,MAAAA,eAAe,EAAE,sBALf;AAMFC,MAAAA,WAAW,EAAE,oBANX;AAOFC,MAAAA,gBAAgB,EAAE,oBAPhB;AAQFC,MAAAA,oBAAoB,EAAE,KARpB;AASFC,MAAAA,gBAAgB,EAAE,CAThB;AAUFC,MAAAA,gBAAgB,EAAE,CAVhB;AAWFC,MAAAA,yBAAyB,EAAE,oBAXzB;AAYFC,MAAAA,qBAAqB,EAAE,qBAZrB;AAaFC,MAAAA,qBAAqB,EAAE,CAbrB;AAcFC,MAAAA,WAAW,EAAE,CAdX;AAeFC,MAAAA,cAAc,EAAE;AAfd,KAlBQ;AAFE,GAAd;AAwCA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEjB,KAAZ;AACA,MAAA,OAAO,EAAE;AACLkB,QAAAA,KAAK,EAAC;AACFC,UAAAA,OAAO,EAAC,IADN;AAEFC,UAAAA,IAAI,EAAC,4BAFH;AAGFC,UAAAA,QAAQ,EAAC;AAHP,SADD;AAMLC,QAAAA,MAAM,EAAC;AACHH,UAAAA,OAAO,EAAC,IADL;AAEHI,UAAAA,QAAQ,EAAC;AAFN;AANF;AADT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBD,CAzED;;GAAMnC,W;;KAAAA,W;AA2EN,eAAeA,WAAf","sourcesContent":["import { Line } from 'react-chartjs-2';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport PursesContext from '../../../Context/PursesContext';\r\n\r\nconst randomColor = require('random-color');\r\n\r\n  const LineDiagram:React.FC = (props:any) => {\r\n\r\n    const pursesContext = useContext(PursesContext);\r\n\r\n    let dataset:any[];\r\n    useEffect(() => {\r\n      props.getExpenses(props.time, props.code);\r\n      \r\n      pursesContext.pursesData.purses.forEach(p => {\r\n        let color = randomColor(0.99, 0.99);\r\n        \r\n        \r\n      });\r\n\r\n    },[]);\r\n\r\n    const state = {\r\n      labels: props.time,\r\n      datasets: [\r\n        {\r\n      label: 'Rainfall',\r\n      data: [0, 59, 80, 81, 56],\r\n      lineTension: 0.1,\r\n      fill: false,\r\n      backgroundColor: 'rgba(75,192,192,0.4)',\r\n      borderColor: 'rgba(75,192,192,1)',\r\n      pointBorderColor: 'rgba(75,192,192,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 9,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 4,\r\n      pointHitRadius: 10,\r\n        },\r\n        {\r\n          label: 'Test',\r\n          data: [0, 15, 9, 40, 35],\r\n          lineTension: 0.1,\r\n          fill: false,\r\n      backgroundColor: 'rgba(75,192,192,0.4)',\r\n      borderColor: 'rgba(75,192,192,1)',\r\n      pointBorderColor: 'rgba(75,192,192,1)',\r\n      pointBackgroundColor: 'red',\r\n      pointBorderWidth: 2,\r\n      pointHoverRadius: 9,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 4,\r\n      pointHitRadius: 10,\r\n        }\r\n      ]\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <Line data={state}\r\n            options={{\r\n                title:{\r\n                    display:true,\r\n                    text:'Average Rainfall per month',\r\n                    fontSize:20\r\n                },\r\n                legend:{\r\n                    display:true,\r\n                    position:'right'\r\n                }\r\n            }}\r\n            />\r\n        </div>\r\n    );\r\n  }\r\n\r\n  export default LineDiagram;"]},"metadata":{},"sourceType":"module"}