{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\ExpensesList\\\\TopicPaper.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Box, Button, CircularProgress, Dialog, DialogContent, DialogActions, DialogTitle, Grid, makeStyles, Paper, Typography, DialogContentText, useMediaQuery, useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nconst TopicExpensesList = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [expenses, setExpenses] = useState([]);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", []);\n  const classes = useStyles();\n  useEffect(() => {\n    ExpenseService.GetUserExpensesByTopic(props.topic).then(result => {\n      if (result.response.status == 200) {\n        setExpenses(result.data);\n        setIsLoading(false);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      children: props.topic.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"scroll-dialog-description\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 34\n        }, this) : expenses.map(expense => {\n          let currencyCode = \"\";\n          let purse = pursesData.find(p => p.id == expense.purseId);\n          return /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 45\n              }, this),\n              \"aria-controls\": expense.id + \"-content\",\n              id: expense.id + \"-header\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.heading,\n                children: expense.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [expense.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 52\n                }, this), \"Date: \", expense.date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 57\n                }, this), \"Sum: \", expense.money]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: props.handleClose,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopicExpensesList, \"xTxNn/2OIooULkSZhBg96oT8Yvo=\", false, function () {\n  return [useSessionStorage, useStyles];\n});\n\n_c = TopicExpensesList;\nexport const TopicPaper = props => {\n  _s2();\n\n  const [isOpenOuter, setIsOpenOuter] = useState(false);\n  const theme = useTheme();\n\n  const handleOpenOuter = () => {\n    setIsOpenOuter(true);\n  };\n\n  const handleCloseOuter = () => {\n    setIsOpenOuter(false);\n  };\n\n  const expensesTopic = props.topic.expenses.slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    style: {\n      marginBottom: 10\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 8,\n      xl: 7,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          width: \"100%\",\n          padding: 0\n        },\n        onClick: handleOpenOuter,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 20,\n          style: {\n            marginBottom: 10,\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            p: 1,\n            style: {\n              backgroundColor: \"black\",\n              color: \"white\",\n              borderRadius: \"10px 10px 0 0\"\n            },\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: props.topic.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 37\n          }, this), expensesTopic.length == 0 && /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"There are not any expenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 41\n          }, this), expensesTopic.map(expense => {\n            return /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexWrap: \"wrap\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [expense.title, \" - \", expense.money]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 41\n              }, this)\n            }, expense.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: isOpenOuter,\n        scroll: \"paper\",\n        \"aria-labelledby\": \"scroll-dialog-title\",\n        \"aria-describedby\": \"scroll-dialog-description\",\n        fullWidth: useMediaQuery(theme.breakpoints.down('lg')),\n        children: /*#__PURE__*/_jsxDEV(TopicExpensesList, {\n          topic: {\n            id: props.topic.id,\n            name: props.topic.name\n          },\n          handleClose: handleCloseOuter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }, this)\n  }, props.topic.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(TopicPaper, \"V2/oZDkU8Cl/vmM7Bi90Uhs8seI=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c2 = TopicPaper;\nexport default TopicPaper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopicExpensesList\");\n$RefreshReg$(_c2, \"TopicPaper\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/ExpensesList/TopicPaper.tsx"],"names":["Box","Button","CircularProgress","Dialog","DialogContent","DialogActions","DialogTitle","Grid","makeStyles","Paper","Typography","DialogContentText","useMediaQuery","useTheme","Accordion","AccordionSummary","AccordionDetails","React","useEffect","useState","ExpenseService","ExpandMoreIcon","useSessionStorage","useStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","TopicExpensesList","props","isLoading","setIsLoading","expenses","setExpenses","pursesData","setPursesData","removePursesData","classes","GetUserExpensesByTopic","topic","then","result","response","status","data","catch","error","console","log","name","map","expense","currencyCode","purse","find","p","id","purseId","title","date","money","handleClose","TopicPaper","isOpenOuter","setIsOpenOuter","handleOpenOuter","handleCloseOuter","expensesTopic","slice","marginBottom","width","padding","backgroundColor","color","borderRadius","length","breakpoints","down"],"mappings":"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","sourcesContent":["import { Box, Button, CircularProgress, Dialog, DialogContent,\r\n    DialogActions, DialogTitle, Grid, makeStyles, Paper, Typography, DialogProps, DialogContentText, useMediaQuery, useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Expense from '../../Data/Models/Expenses/Expense';\r\nimport Topic from '../../Data/Models/Topics/Topic';\r\nimport TopicWithExpenses from '../../Data/Models/Topics/TopicWithExpenses';\r\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}),\r\n);\r\n\r\n\r\ninterface TopicExpensesListProps\r\n{\r\n    topic: Topic;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst TopicExpensesList: React.FC<TopicExpensesListProps> = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [expenses, setExpenses] = useState<Expense[]>([]);\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", []);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        ExpenseService.GetUserExpensesByTopic(props.topic)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    setExpenses(result.data);\r\n                    setIsLoading(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    },[]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <DialogTitle id=\"scroll-dialog-title\">\r\n                {props.topic.name}\r\n            </DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                <DialogContentText id=\"scroll-dialog-description\"\r\n                >\r\n                    {isLoading ? <CircularProgress color=\"secondary\" /> : \r\n                        expenses.map((expense) => {\r\n\r\n                        let currencyCode: string = \"\";\r\n                        let purse: Purse = pursesData.find(p => p.id == expense.purseId);\r\n                        \r\n                        return(\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={expense.id + \"-content\"}\r\n                                id={expense.id + \"-header\"}\r\n                                >\r\n                                <Typography className={classes.heading}>{expense.title}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                <Typography>\r\n                                    {expense.title}<br/>\r\n                                    Date: {expense.date}<br/>\r\n                                    Sum: {expense.money}\r\n                                </Typography>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n\r\n                        );\r\n                    })}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={props.handleClose}\r\n                    >\r\n                    <Typography>\r\n                        Close\r\n                    </Typography>\r\n                </Button>\r\n            </DialogActions>     \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface TopicPaperProps\r\n{\r\n    topic: TopicWithExpenses\r\n}\r\n\r\nexport const TopicPaper: React.FC<TopicPaperProps> = (props) => {\r\n\r\n    const [isOpenOuter, setIsOpenOuter] = useState(false);\r\n    const theme = useTheme();\r\n    \r\n    const handleOpenOuter = () => {\r\n        setIsOpenOuter(true);\r\n      };\r\n\r\n    const handleCloseOuter = () => {\r\n        setIsOpenOuter(false);\r\n    }\r\n\r\n    const expensesTopic = props.topic.expenses.slice(0, 10);\r\n\r\n    return(\r\n        <Grid item container key={props.topic.id}\r\n                        justify=\"center\" style={{ marginBottom: 10}}\r\n                        >\r\n                            <Grid item xs={8} xl={7}>\r\n                                <Button style={{width:\"100%\", padding:0}} onClick={handleOpenOuter}>\r\n                                <Paper elevation={20} style={{marginBottom:10, width:\"100%\"}}\r\n                                >\r\n                                    <Box display=\"flex\" p={1}\r\n                                    style={{backgroundColor: \"black\", color:\"white\",\r\n                                    borderRadius:\"10px 10px 0 0\"\r\n                                }} \r\n                                    justifyContent=\"center\">\r\n                                        <Typography>{props.topic.name}</Typography>\r\n                                    </Box>\r\n                                    {\r\n                                        expensesTopic.length == 0 &&\r\n                                        <Box display=\"flex\" justifyContent=\"center\"\r\n                                        flexWrap=\"wrap\">\r\n                                            <Typography variant=\"h5\">\r\n                                                There are not any expenses\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    }\r\n                                    {expensesTopic.map((expense) => {\r\n                                    return(\r\n                                    <Box display=\"flex\" justifyContent=\"center\"\r\n                                    flexWrap=\"wrap\" key={expense.id}\r\n                                    >\r\n                                        <Typography>\r\n                                            {expense.title} - {expense.money}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    );\r\n                                })}\r\n                        </Paper>\r\n                    </Button>\r\n                    <Dialog open={isOpenOuter}\r\n                    scroll=\"paper\" aria-labelledby=\"scroll-dialog-title\"\r\n                    aria-describedby=\"scroll-dialog-description\"\r\n                    fullWidth={useMediaQuery(theme.breakpoints.down('lg'))}\r\n                    >\r\n                        <TopicExpensesList topic={{\r\n                            id: props.topic.id,\r\n                            name: props.topic.name\r\n                        }} \r\n                        handleClose={handleCloseOuter}\r\n                        />\r\n                    </Dialog>\r\n                </Grid>\r\n            </Grid>\r\n    );\r\n}\r\n\r\nexport default TopicPaper;"]},"metadata":{},"sourceType":"module"}