{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Pages\\\\HomePage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PursesDoughnutDiagram from '../Diagrams/PursesDoughnutDiagram';\nimport { Grid } from '@material-ui/core';\nimport { PursesDefault } from '../../Data/Models/Purses/default/PurseDefault';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport PursesService from '../../Services/purse.services/Purse.service';\n\nconst HomePage = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", PursesDefault);\n  useEffect(() => {\n    if (pursesData == PursesDefault) {\n      PursesService.GetCurrentUserPurses().then(result => {\n        if (result.response.status == 200) {\n          setPursesData(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"contentDiv\",\n      xs: 10,\n      xl: 9,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          indicatorColor: \"primary\",\n          textColor: \"primary\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Item One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Item Two\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Item Three\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PursesDoughnutDiagram, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"GwZwZXKSUTX1wJkzWL/KlW9qnfs=\", false, function () {\n  return [useSessionStorage];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Pages/HomePage.tsx"],"names":["React","useEffect","useState","PursesDoughnutDiagram","Grid","PursesDefault","useSessionStorage","PursesService","HomePage","isLoading","setIsLoading","pursesData","setPursesData","removePursesData","GetCurrentUserPurses","then","result","response","status","data","catch","error","console","log","classes","root","value","handleChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,aAAT,QAA8B,+CAA9B;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AAEA,OAAOC,aAAP,MAA0B,6CAA1B;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAE7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,EAA4BC,gBAA5B,IAAgDP,iBAAiB,CAAU,YAAV,EAAwBD,aAAxB,CAAvE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGU,UAAU,IAAIN,aAAjB,EACA;AACIE,MAAAA,aAAa,CAACO,oBAAd,GACKC,IADL,CACUC,MAAM,IAAI;AACZ,YAAGA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,IAA0B,GAA7B,EACA;AACIN,UAAAA,aAAa,CAACI,MAAM,CAACG,IAAR,CAAb;AACAT,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,OAPL,EAQKU,KARL,CAQWC,KAAK,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVL;AAWH,KAbD,MAeA;AACIX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AAEF,GArBM,EAqBJ,EArBI,CAAT;AAuBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAqC,MAAA,EAAE,EAAE,CAAzC;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEc,OAAO,CAACC,IAA1B;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,KAAK,EAAEC,KADX;AAEI,UAAA,QAAQ,EAAEC,YAFd;AAGI,UAAA,cAAc,EAAC,SAHnB;AAII,UAAA,SAAS,EAAC,SAJd;AAKI,UAAA,QAAQ,MALZ;AAAA,kCAOI,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAhDD;;GAAMnB,Q;UAGoDF,iB;;;KAHpDE,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PursesDoughnutDiagram from '../Diagrams/PursesDoughnutDiagram';\r\nimport { Grid } from '@material-ui/core';\r\nimport { PursesDefault } from '../../Data/Models/Purses/default/PurseDefault';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\nimport PursesService from '../../Services/purse.services/Purse.service';\r\n  \r\nconst HomePage: React.FC = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", PursesDefault);\r\n\r\n    useEffect(() => {\r\n    \r\n        if(pursesData == PursesDefault)\r\n        {\r\n            PursesService.GetCurrentUserPurses()\r\n                .then(result => {\r\n                    if(result.response.status == 200)\r\n                    {\r\n                        setPursesData(result.data);\r\n                        setIsLoading(false);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        else\r\n        {\r\n            setIsLoading(false);\r\n        }\r\n        \r\n      }, []);\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <Grid className=\"contentDiv\" xs={10} xl={9}>\r\n                <Paper className={classes.root}>\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        centered\r\n                    >\r\n                        <Tab label=\"Item One\" />\r\n                        <Tab label=\"Item Two\" />\r\n                        <Tab label=\"Item Three\" />\r\n                    </Tabs>\r\n                </Paper>\r\n                <PursesDoughnutDiagram />\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}