{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Pages\\\\UsersPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Accordion, AccordionDetails, AccordionSummary, Button, CircularProgress, useMediaQuery, Grid, makeStyles, Typography, useTheme, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, List, Divider } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { getCurrentUser } from '../../Services/auth.services/auth-service';\nimport jwt_decode from 'jwt-decode';\nimport { deleteAccountById, getPagedUsers } from '../../Services/user.services/User.service';\nimport GridPaperHeader from '../GridPaper/GridPaperHeader';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EditUserForm from '../Forms/AdminForms/EditUserForm';\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  buttons: {\n    width: 100\n  }\n}));\n\nconst UsersPage = () => {\n  _s();\n\n  const pageSize = 20;\n  const [pageIndex, setPageIndex] = useState(0);\n  const [hasData, setHasData] = useState(true);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [users, setUsers] = useState([]);\n  const theme = useTheme();\n  const width = useMediaQuery(theme.breakpoints.down('lg'));\n  const [dialog, setDialog] = useState({\n    isOpen: false,\n    action: \"update\",\n    itemId: 0\n  });\n  const classes = useStyles();\n  const token = getCurrentUser().accessToken;\n  const userId = jwt_decode(token).UserId;\n  useEffect(() => {\n    if (isLoadingData) {\n      handleLoadMore();\n    }\n  }, [isLoadingData]);\n  useNonInitialEffect(() => {\n    if (!dialog.isOpen) //if we close nested dialog, we rerender whole component\n      {\n        setUsers([...[]]);\n        setPageIndex(0);\n        setHasData(true);\n        setHasNextPage(true);\n        setIsLoadingData(true);\n      }\n  }, [dialog]);\n\n  const handleLoadMore = () => {\n    if (hasNextPage) {\n      setIsLoadingData(true);\n      const request = {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      };\n      getPagedUsers(request).then(result => {\n        if (result.response.status == 200) {\n          console.log(result.data);\n\n          if (result.data.total == 0) {\n            setHasData(false);\n          }\n\n          setUsers([...users, ...result.data.items]);\n          setHasNextPage(result.data.items.length == pageSize);\n          setIsLoadingData(false);\n          setPageIndex(pageIndex + 1);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const infiniteRef = useInfiniteScroll({\n    loading: isLoadingData,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer: \"window\"\n  });\n\n  const deleteUser = async id => {\n    deleteAccountById(id).then(res => {\n      handleClose();\n    }).catch(error => {\n      console.log(error);\n      handleClose();\n    });\n  };\n\n  const handleOpen = (action, itemId) => {\n    if (itemId == undefined) {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action\n      });\n    } else {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action,\n        itemId: itemId\n      });\n    }\n  };\n\n  const handleClose = () => {\n    setDialog({ ...dialog,\n      isOpen: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    ref: infiniteRef,\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"baseline\",\n      item: true,\n      className: \"contentDiv\",\n      xs: 10,\n      xl: 9,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        spacing: 5,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"List of users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          spacing: 2,\n          children: [!hasData ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"There are not any users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this) : users.map(user => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Accordion, {\n                style: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(GridPaperHeader, {\n                    style: {\n                      margin: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(AccordionSummary, {\n                    expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 61\n                    }, this),\n                    \"aria-controls\": user.id + \"-content\",\n                    id: user.id + \"-header\",\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.heading,\n                      children: [user.id, \". \", user.userName]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    xs: 12,\n                    spacing: 6,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        children: [\"Id: \", user.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 167,\n                          columnNumber: 74\n                        }, this), \"UserName: \", user.userName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 86\n                        }, this), \"Email: \", user.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 80\n                        }, this), \"Name: \", user.firstName, \" \", user.lastName]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      spacing: 3,\n                      item: true,\n                      container: true,\n                      xs: 12,\n                      direction: \"row-reverse\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          color: \"secondary\",\n                          onClick: () => {\n                            handleOpen(\"delete\", user.id);\n                          },\n                          className: classes.buttons,\n                          disabled: user.id == userId,\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            children: \"Delete\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 177,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          color: \"primary\",\n                          onClick: () => {\n                            handleOpen(\"update\", user.id);\n                            console.log(user.id);\n                          },\n                          className: classes.buttons,\n                          disabled: user.id == userId,\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            children: \"Edit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 45\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 41\n              }, this)\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 37\n            }, this);\n          }), isLoadingData && /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            xs: 12,\n            justify: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 12,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 12,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Loading expenses...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialog.isOpen,\n      fullWidth: width,\n      children: dialog.action == \"delete\" ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Delete user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Are you sure you want to delete this user?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: async () => {\n              await deleteUser(dialog.itemId);\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(EditUserForm, {\n        handleClose: handleClose,\n        userId: dialog.itemId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsersPage, \"2RPpNI26dGUgDc/1hlz3WJR1bmA=\", false, function () {\n  return [useTheme, useMediaQuery, useStyles, useNonInitialEffect, useInfiniteScroll];\n});\n\n_c = UsersPage;\nexport default UsersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Pages/UsersPage.tsx"],"names":["Accordion","AccordionDetails","AccordionSummary","Button","CircularProgress","useMediaQuery","Grid","makeStyles","Typography","useTheme","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","List","Divider","React","useEffect","useState","getCurrentUser","jwt_decode","deleteAccountById","getPagedUsers","GridPaperHeader","ExpandMoreIcon","EditUserForm","useNonInitialEffect","useInfiniteScroll","useStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","buttons","width","UsersPage","pageSize","pageIndex","setPageIndex","hasData","setHasData","isLoadingData","setIsLoadingData","hasNextPage","setHasNextPage","users","setUsers","breakpoints","down","dialog","setDialog","isOpen","action","itemId","classes","token","accessToken","userId","UserId","handleLoadMore","request","then","result","response","status","console","log","data","total","items","length","catch","error","infiniteRef","loading","onLoadMore","scrollContainer","deleteUser","id","res","handleClose","handleOpen","undefined","display","justifyContent","map","user","margin","userName","email","firstName","lastName"],"mappings":"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","sourcesContent":["import { Accordion, AccordionDetails, AccordionSummary,\r\n     Button, CircularProgress, useMediaQuery, \r\n     Grid, makeStyles, Typography, useTheme, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, List, Divider, GridList } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getCurrentUser } from '../../Services/auth.services/auth-service';\r\nimport jwt_decode from 'jwt-decode';\r\nimport User from '../../Data/Models/User/User';\r\nimport { deleteAccountById, getPagedUsers } from '../../Services/user.services/User.service';\r\nimport PagedRequest from '../../Services/pagedRequests/PagedRequest';\r\nimport GridPaperHeader from '../GridPaper/GridPaperHeader';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport EditUserForm from '../Forms/AdminForms/EditUserForm';\r\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\r\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n      buttons: {\r\n          width: 100\r\n      }\r\n}));\r\n\r\nconst UsersPage: React.FC = () => {\r\n    const pageSize: number = 20;\r\n    \r\n    const [pageIndex, setPageIndex] = useState<number>(0);\r\n    const [hasData, setHasData] = useState<boolean>(true);\r\n    const [isLoadingData, setIsLoadingData] = useState<boolean>(true);\r\n    const [hasNextPage, setHasNextPage] = useState<boolean>(true);\r\n    const [users, setUsers] = useState<User[]>([]);\r\n    const theme = useTheme();\r\n    const width = useMediaQuery(theme.breakpoints.down('lg'));\r\n    const [dialog, setDialog] = useState<{\r\n        isOpen: boolean, \r\n        action: \"update\" | \"delete\",\r\n        itemId: number\r\n    }>({isOpen: false, action: \"update\", itemId: 0});\r\n    const classes = useStyles();\r\n    const token = getCurrentUser().accessToken;\r\n    const userId = (jwt_decode(token) as any).UserId as number;\r\n\r\n    useEffect(() => {\r\n        if (isLoadingData)\r\n        {\r\n            handleLoadMore();\r\n        }\r\n      }, [isLoadingData]);\r\n\r\n    useNonInitialEffect(() => {\r\n        if(!dialog.isOpen) //if we close nested dialog, we rerender whole component\r\n        {\r\n            setUsers([...[]]);\r\n            setPageIndex(0);\r\n            setHasData(true);\r\n            setHasNextPage(true);\r\n            setIsLoadingData(true);\r\n        }\r\n    }, [dialog])  \r\n\r\n      const handleLoadMore = () => {\r\n        if(hasNextPage)\r\n        {\r\n            setIsLoadingData(true);\r\n            const request: PagedRequest = {\r\n            pageIndex: pageIndex,\r\n            pageSize: pageSize\r\n        };\r\n\r\n        getPagedUsers(request)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    console.log(result.data);\r\n                    if(result.data.total == 0)\r\n                    {\r\n                        setHasData(false);\r\n                    }\r\n                    setUsers([...users, ...result.data.items]);\r\n                    setHasNextPage(result.data.items.length == pageSize);\r\n                    setIsLoadingData(false);\r\n                    setPageIndex(pageIndex + 1);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    const infiniteRef = useInfiniteScroll({\r\n        loading:isLoadingData,\r\n        hasNextPage,\r\n        onLoadMore: handleLoadMore,\r\n        scrollContainer: \"window\"\r\n      });\r\n\r\n    const deleteUser = async (id: number) => {\r\n        deleteAccountById(id)\r\n            .then(res => {\r\n                handleClose();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                handleClose();\r\n            })\r\n    }\r\n\r\n    const handleOpen = (action: \"update\" | \"delete\", itemId?: number) => {\r\n        if(itemId == undefined)\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action});\r\n        }\r\n        else\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action, itemId: itemId})\r\n        }\r\n      }\r\n\r\n      const handleClose = () => {\r\n        setDialog({...dialog, isOpen: false});\r\n    }\r\n\r\n    return(\r\n        <List ref={infiniteRef as React.RefObject<HTMLUListElement>} style={{width: \"100%\", \r\n        display: \"flex\", justifyContent:\"center\"}}>\r\n            <Grid container justify=\"center\" alignItems=\"baseline\" item\r\n            className=\"contentDiv\" xs={10} xl={9}>\r\n                 <Grid item container xs={12} spacing={5} justify=\"center\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">\r\n                            List of users\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Divider variant=\"middle\" />\r\n                    </Grid>\r\n                    <Grid item container xs={12} justify=\"center\" spacing={2}> \r\n                        {\r\n                            !hasData ?\r\n                            <Typography variant=\"h6\">\r\n                                There are not any users\r\n                            </Typography>\r\n                            : \r\n                            users.map(user => {\r\n                                return(\r\n                                    <Grid key={user.id} item xs={12}>\r\n                                        <Accordion key={user.id} style={{width: \"100%\"}}>\r\n                                            <Grid item xs={12}>\r\n                                                <GridPaperHeader style={{margin:0}} />\r\n                                                <AccordionSummary\r\n                                                expandIcon={<ExpandMoreIcon />}\r\n                                                aria-controls={user.id + \"-content\"}\r\n                                                id={user.id + \"-header\"}\r\n                                                >\r\n                                                    <Typography className={classes.heading}>\r\n                                                        {user.id}. {user.userName}\r\n                                                    </Typography>\r\n                                                </AccordionSummary>\r\n                                            </Grid>\r\n                                            <AccordionDetails>\r\n                                                <Grid container xs={12} spacing={6}>\r\n                                                    <Grid container item xs={12}>\r\n                                                        <Typography>\r\n                                                            Id: {user.id}<br />\r\n                                                            UserName: {user.userName}<br />\r\n                                                            Email: {user.email}<br />\r\n                                                            Name: {user.firstName} {user.lastName}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid spacing={3}\r\n                                                        item container xs={12} \r\n                                                        direction=\"row-reverse\">\r\n                                                        <Grid item>\r\n                                                            <Button variant=\"contained\" \r\n                                                                color=\"secondary\" \r\n                                                                onClick={() => {handleOpen(\"delete\", user.id);}}\r\n                                                                className={classes.buttons}\r\n                                                                disabled={user.id == userId}\r\n                                                                >\r\n                                                                <Typography>\r\n                                                                    Delete\r\n                                                                </Typography>\r\n                                                            </Button>\r\n                                                        </Grid>\r\n                                                        <Grid item>\r\n                                                            <Button variant=\"contained\" \r\n                                                            color=\"primary\" \r\n                                                            onClick={() => {handleOpen(\"update\", user.id);console.log(user.id);}}\r\n                                                            className={classes.buttons}\r\n                                                            disabled={user.id == userId}\r\n                                                            >\r\n                                                                <Typography>\r\n                                                                    Edit\r\n                                                                </Typography>\r\n                                                            </Button>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </AccordionDetails>\r\n                                        </Accordion>\r\n                                    </Grid>\r\n                                );\r\n                            })\r\n                        }\r\n                        {\r\n                            isLoadingData && \r\n                            <Grid container xs={12} justify=\"center\">\r\n                                <Grid container item xs={12} justify=\"center\">\r\n                                    <CircularProgress color=\"secondary\" />\r\n                                </Grid>\r\n                                <Grid container item xs={12} justify=\"center\">\r\n                                    <Typography variant=\"h6\">\r\n                                        Loading expenses...\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                 </Grid>\r\n            </Grid>\r\n            <Dialog open={dialog.isOpen} fullWidth={width}>\r\n                {dialog.action == \"delete\" ? \r\n                <React.Fragment>\r\n                    <DialogTitle>\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography variant=\"h6\">Delete user</Typography>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers={true}>\r\n                        <DialogContentText>\r\n                            <Typography>\r\n                                Are you sure you want to delete this user?\r\n                            </Typography>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"secondary\"\r\n                        onClick={async () => {await deleteUser(dialog.itemId)}}\r\n                        >\r\n                        <Typography>\r\n                            Delete\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={handleClose}\r\n                        >\r\n                        <Typography>\r\n                            Close\r\n                        </Typography>\r\n                    </Button>\r\n                    </DialogActions>\r\n                </React.Fragment>\r\n                :\r\n                <EditUserForm handleClose={handleClose} userId={dialog.itemId} />\r\n            }\r\n            </Dialog>\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default UsersPage;"]},"metadata":{},"sourceType":"module"}