{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Forms\\\\EditProfileForm\\\\EditProfileForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Button, DialogTitle, DialogContent, DialogContentText, DialogActions, makeStyles, Typography, CircularProgress, Grid } from \"@material-ui/core\";\nimport InputForm from '../InputForm/InputForm';\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { EditUser, GetCurrentUserData } from \"../../../Services/user.services/User.service\";\nimport useSessionStorage from \"../../../CustomHooks/StorageHooks/useSessionStorage\";\nconst validationSchema = yup.object().shape({\n  firstName: yup.string().required(\"Enter first name!\").min(3, \"Minimum length is 3 characters!\").max(15, \"maximum length is 15 characters!\"),\n  lastName: yup.string().required(\"Enter last name!\").min(3, \"Minimum length is 3 characters!\").max(15, \"maximum length is 15 characters!\")\n});\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%' // Fix IE 11 issue.\n\n  }\n}));\n\nconst EditProfileForm = props => {\n  _s();\n\n  const classes = useStyles();\n  const methods = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const {\n    handleSubmit,\n    errors\n  } = methods;\n  const [userData, setUserData] = useSessionStorage(\"userData\", undefined);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const onSubmit = async formValues => {\n    EditUser(formValues).then(res => {\n      props.handleClose();\n    });\n  };\n\n  useEffect(() => {\n    if (userData == undefined) {\n      GetCurrentUserData().then(res => {\n        if (res.status == 200) {\n          setUserData(res.data);\n          setIsLoading(false);\n        } else {\n          console.log(res.data);\n          props.handleClose();\n        }\n      }).catch(error => {\n        console.log(error);\n        props.handleClose();\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"Editing profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [isLoading || userData == undefined ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Fill the folowing fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(InputForm, {\n            errorObj: errors,\n            name: \"firstName\",\n            label: \"First name\",\n            autoFocus: true,\n            required: true,\n            defaultValue: userData.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n            errorObj: errors,\n            name: \"lastName\",\n            type: \"text\",\n            label: \"Last name\",\n            required: true,\n            defaultValue: userData.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleSubmit(onSubmit),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProfileForm, \"DhE9D+LzHwZT/VW7xPMyAzdGlaw=\", false, function () {\n  return [useStyles, useForm, useSessionStorage];\n});\n\n_c = EditProfileForm;\nexport default EditProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileForm\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Forms/EditProfileForm/EditProfileForm.tsx"],"names":["React","useEffect","useState","useForm","FormProvider","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","makeStyles","Typography","CircularProgress","Grid","InputForm","yup","yupResolver","EditUser","GetCurrentUserData","useSessionStorage","validationSchema","object","shape","firstName","string","required","min","max","lastName","useStyles","theme","form","width","EditProfileForm","props","classes","methods","resolver","handleSubmit","errors","userData","setUserData","undefined","isLoading","setIsLoading","onSubmit","formValues","then","res","handleClose","status","data","console","log","catch","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useForm, FormProvider, SubmitHandler } from \"react-hook-form\";\r\nimport { Button, DialogTitle, DialogContent, \r\n    DialogContentText, DialogActions, makeStyles, \r\n    Theme, Typography, CircularProgress, Grid } from \"@material-ui/core\";\r\nimport InputForm from '../InputForm/InputForm';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport IEditProfileFormProps from './IEditProfileFormProps';\r\nimport UserForUpdate from \"../../../Data/Models/User/UserForUpdate\";\r\nimport { EditUser, GetCurrentUserData } from \"../../../Services/user.services/User.service\";\r\nimport User from \"../../../Data/Models/User/User\";\r\nimport useSessionStorage from \"../../../CustomHooks/StorageHooks/useSessionStorage\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n    firstName: yup.string().required(\"Enter first name!\").min(3, \"Minimum length is 3 characters!\")\r\n        .max(15, \"maximum length is 15 characters!\"),\r\n    lastName: yup.string().required(\"Enter last name!\").min(3, \"Minimum length is 3 characters!\")\r\n        .max(15, \"maximum length is 15 characters!\"),\r\n  });\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n    }\r\n}));\r\n\r\nconst EditProfileForm: React.FC<IEditProfileFormProps> = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const { handleSubmit, errors } = methods;\r\n    const [userData, setUserData] = useSessionStorage<User | undefined>(\"userData\", \r\n    undefined);\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n    const onSubmit: SubmitHandler<UserForUpdate> = async (formValues) => {\r\n\r\n        EditUser(formValues)\r\n            .then(res => {\r\n                props.handleClose();\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(userData == undefined)\r\n        {\r\n            GetCurrentUserData()\r\n                .then(res => {\r\n                    if(res.status == 200)\r\n                    {\r\n                        setUserData(res.data);\r\n                        setIsLoading(false);\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(res.data);\r\n                        props.handleClose();\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    props.handleClose();\r\n                });\r\n        }\r\n        else\r\n        {\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <FormProvider {...methods}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                Editing profile\r\n            </DialogTitle>\r\n            <DialogContent>\r\n            {isLoading || userData == undefined ?\r\n            <Grid container xs={12}>\r\n                <CircularProgress color=\"secondary\" />\r\n            </Grid>\r\n            : <>\r\n                <DialogContentText>\r\n                    <Typography>Fill the folowing fields</Typography>\r\n                </DialogContentText>\r\n                <form noValidate className={classes.form}>\r\n                    <InputForm \r\n                    errorObj={errors}\r\n                    name=\"firstName\" \r\n                    label=\"First name\" \r\n                    autoFocus={true} \r\n                    required={true}\r\n                    defaultValue={userData.firstName}\r\n                    />\r\n                    <InputForm \r\n                    errorObj={errors}\r\n                    name=\"lastName\" \r\n                    type=\"text\"\r\n                    label=\"Last name\"\r\n                    required={true}\r\n                    defaultValue={userData.lastName}\r\n                    />\r\n                </form>\r\n            </>\r\n            }\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={handleSubmit(onSubmit)}\r\n                    >\r\n                    Edit\r\n                </Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={props.handleClose}\r\n                    >\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n            </DialogContent>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\nexport default EditProfileForm;"]},"metadata":{},"sourceType":"module"}