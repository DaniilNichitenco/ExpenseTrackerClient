{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Router\\\\AutorizedRouter.tsx\",\n    _s = $RefreshSig$();\n\nimport { CircularProgress } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Route, Redirect, Switch, useHistory } from \"react-router-dom\";\nimport SignOutButtom from '../Components/Buttons/SignOutButtom';\nimport AppContent from '../Components/Content/AppContent';\nimport AppbarGeneric from '../Components/Generics/AppbarGeneric';\nimport LeftMenu from '../Components/LeftMenu/LeftMenu';\nimport CalendarPage from '../Components/Pages/CalendarPage';\nimport HomePage from '../Components/Pages/HomePage';\nimport ProfilePage from '../Components/Pages/ProfilePage';\nimport StatisticPage from '../Components/Pages/StatisticPage';\nimport useLocalStorage from '../CustomHooks/StorageHooks/useLocalStorage';\nimport useSessionStorage from '../CustomHooks/StorageHooks/useSessionStorage';\nimport { SignOut } from '../Services/auth.services/auth-service';\nimport { GetCurrentUserData } from '../Services/user.services/User.service';\nimport DefaultUser from '../Data/Models/User/default/DefaultUser';\n\nconst AuthorizedRouter = () => {\n  _s();\n\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthorized, setIsAuthorized] = useLocalStorage(\"authorized\", false);\n  const [userData, setUserData, removeUserData] = useSessionStorage(\"userData\", DefaultUser);\n  useEffect(() => {\n    setIsLoading();\n\n    if (isAuthorized) {\n      if (userData == DefaultUser) {\n        GetCurrentUserData().then(result => {\n          if (result == undefined) {\n            console.log(\"Cannot get response from server\");\n            return;\n          }\n\n          if (result.status == 200) {\n            let user = result.data;\n            setUserData(user);\n            setIsLoading(false);\n          } else {\n            SignOut();\n            setIsAuthorized(false);\n            history.push('/');\n          }\n        });\n      } else {\n        setIsLoading(false);\n      }\n    } else {\n      history.push('/');\n    }\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LeftMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: 256\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppbarGeneric, {\n        rightButtons: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(SignOutButtom, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 48\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AppContent, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/au/home\",\n            component: HomePage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/au/profile\",\n            component: ProfilePage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/au/statistic\",\n            component: StatisticPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/au/calendar\",\n            component: CalendarPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/au/home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthorizedRouter, \"XlnpPajsuvvRqOHElLlJL2tZ5XA=\", false, function () {\n  return [useHistory, useLocalStorage, useSessionStorage];\n});\n\n_c = AuthorizedRouter;\nexport default AuthorizedRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorizedRouter\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Router/AutorizedRouter.tsx"],"names":["CircularProgress","React","useEffect","useState","Route","Redirect","Switch","useHistory","SignOutButtom","AppContent","AppbarGeneric","LeftMenu","CalendarPage","HomePage","ProfilePage","StatisticPage","useLocalStorage","useSessionStorage","SignOut","GetCurrentUserData","DefaultUser","AuthorizedRouter","history","isLoading","setIsLoading","isAuthorized","setIsAuthorized","userData","setUserData","removeUserData","then","result","undefined","console","log","status","user","data","push","paddingLeft"],"mappings":"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","sourcesContent":["import { CircularProgress } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n    Route, Redirect, Switch, useHistory\r\n  } from \"react-router-dom\";\r\nimport SignOutButtom from '../Components/Buttons/SignOutButtom';\r\nimport AppContent from '../Components/Content/AppContent';\r\nimport AppbarGeneric from '../Components/Generics/AppbarGeneric';\r\nimport LeftMenu from '../Components/LeftMenu/LeftMenu';\r\nimport CalendarPage from '../Components/Pages/CalendarPage';\r\nimport HomePage from '../Components/Pages/HomePage';\r\nimport ProfilePage from '../Components/Pages/ProfilePage';\r\nimport StatisticPage from '../Components/Pages/StatisticPage';\r\nimport useLocalStorage from '../CustomHooks/StorageHooks/useLocalStorage';\r\nimport useSessionStorage from '../CustomHooks/StorageHooks/useSessionStorage';\r\nimport User from '../Data/Models/User/User';\r\nimport { GetCurrentUser, SignOut } from '../Services/auth.services/auth-service';\r\nimport { GetCurrentUserData } from '../Services/user.services/User.service';\r\nimport DefaultUser from '../Data/Models/User/default/DefaultUser';\r\n\r\n  const AuthorizedRouter:React.FC = () => {\r\n\r\n      const history = useHistory();\r\n      const [isLoading, setIsLoading] = useState(true);\r\n      const [isAuthorized, setIsAuthorized] = useLocalStorage(\"authorized\", false);\r\n      const [userData, setUserData, removeUserData] = useSessionStorage<User>(\r\n        \"userData\", DefaultUser\r\n        );\r\n\r\n      useEffect(() => {\r\n\r\n        setIsLoading()\r\n        if(isAuthorized)\r\n        {\r\n          if(userData == DefaultUser)\r\n          {\r\n            GetCurrentUserData().then(result => {\r\n              if(result == undefined)\r\n              {\r\n                console.log(\"Cannot get response from server\");\r\n                return;\r\n              }\r\n              if(result.status == 200)\r\n              {\r\n                let user = result.data as User;\r\n                setUserData(user);\r\n                setIsLoading(false);\r\n              }\r\n              else\r\n              {\r\n                SignOut();\r\n                setIsAuthorized(false);\r\n                history.push('/');\r\n              }\r\n            });\r\n          }\r\n          else\r\n          {\r\n            setIsLoading(false);\r\n          }\r\n        }\r\n        else\r\n        {\r\n          history.push('/');\r\n        }\r\n        \r\n      }, []);\r\n\r\n    if(isLoading)\r\n    {\r\n      return (<CircularProgress color=\"secondary\" />);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <LeftMenu />\r\n            <div style={{paddingLeft: 256}}>\r\n                <AppbarGeneric rightButtons={<><SignOutButtom /></>} />\r\n                <AppContent>\r\n                  <Switch>\r\n                    <Route exact path=\"/au/home\" component={HomePage} />\r\n                    <Route exact path=\"/au/profile\" component={ProfilePage} />\r\n                    <Route exact path=\"/au/statistic\" component={StatisticPage} />\r\n                    <Route exact path=\"/au/calendar\" component={CalendarPage} />\r\n                    <Redirect to=\"/au/home\" />\r\n                  </Switch>\r\n                </AppContent>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n\r\n  export default AuthorizedRouter;"]},"metadata":{},"sourceType":"module"}