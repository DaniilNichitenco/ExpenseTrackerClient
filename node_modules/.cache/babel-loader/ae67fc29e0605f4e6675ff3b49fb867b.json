{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Forms\\\\ExpenseForm\\\\EditExpenseForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Button, DialogTitle, DialogContent, DialogContentText, DialogActions, makeStyles, Grid, Typography, CircularProgress } from \"@material-ui/core\";\nimport InputForm from '../InputForm/InputForm';\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { mapToSelectItems } from \"../../../mapper/mapper\";\nimport useSessionStorage from \"../../../CustomHooks/StorageHooks/useSessionStorage\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./datepickerStyles.css\";\nimport { GetExpense, UpdateExpense } from \"../../../Services/expense.service/ExpenseService\";\nconst validationSchema = yup.object().shape({\n  title: yup.string().required(\"Enter title!\").min(3, \"Title is too short!\").max(15, \"Should be 15 chars maximum\"),\n  purseId: yup.number().required(\"Chose purse!\"),\n  money: yup.number().required(\"Enter money!\").min(1, \"Minimum value is 1!\").max(9999999999, \"Maximum value is 9999999999!\")\n});\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%' // Fix IE 11 issue.\n\n  }\n}));\nexport const EditExpenseForm = props => {\n  _s();\n\n  const methods = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const {\n    handleSubmit,\n    errors\n  } = methods;\n  const classes = useStyles();\n  const [items, setitems] = useState([]);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", []);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [isLoading, setIsLoading] = useState(true);\n  const [result, setResult] = useState({\n    successed: false,\n    description: \"\"\n  });\n  useEffect(() => {\n    setitems(mapToSelectItems(\"id\", \"currencyCode\", pursesData));\n    console.log(items);\n  }, [pursesData]);\n  useEffect(() => {\n    GetResult(props.expenseId).then(res => {\n      if (res.successed) {\n        setCurrentDate(new Date(res.expense.date));\n      }\n\n      setResult(res);\n      console.log(res.expense.purseId);\n      console.log(pursesData);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const GetResult = async expenseId => {\n    return GetExpense(expenseId).then(result => {\n      if (result.response.status == 200) {\n        return {\n          expense: result.data,\n          successed: true,\n          description: \"Successed\"\n        };\n      }\n\n      if (result.response.status == 404) {\n        return {\n          successed: false,\n          description: \"Expense has already deleted\",\n          expense: undefined\n        };\n      }\n\n      return {\n        successed: false,\n        description: \"You do not have access to this expense\",\n        expense: undefined\n      };\n    }).catch(error => {\n      console.log(error);\n      return {\n        successed: false,\n        description: \"Something went wrong\",\n        expense: undefined\n      };\n    });\n  };\n\n  const filterPassedTime = time => {\n    const currentDate = new Date();\n    const selectedDate = new Date(time);\n    return currentDate > selectedDate;\n  };\n\n  const onSubmit = formValues => {\n    formValues.date = new Date(currentDate);\n    formValues.id = props.expenseId;\n    UpdateExpense(formValues).then(res => {\n      console.log(res);\n      props.handleClose();\n    });\n  };\n\n  const ExampleCustomInput = ({\n    value,\n    onClick,\n    ...rest\n  }) => /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      fontSize: 22\n    },\n    onClick: onClick,\n    variant: \"contained\",\n    color: \"primary\",\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!result.successed || result.expense == undefined) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Error!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: result.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: props.topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Creating expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          className: classes.form,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"title\",\n                type: \"text\",\n                label: \"Title\",\n                autoFocus: true,\n                required: true,\n                defaultValue: result.expense.title,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                variant: \"outlined\",\n                type: \"text\",\n                required: true,\n                label: \"Topic\",\n                name: \"topic\",\n                defaultValue: props.topic.name,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"purseId\",\n                type: \"text\",\n                label: \"Purse\",\n                required: true,\n                defaultValue: result.expense.purseId.toString(),\n                variant: \"outlined\",\n                select: {\n                  select: true,\n                  items: items,\n                  upperCase: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"money\",\n                type: \"number\",\n                label: \"Money\",\n                required: true,\n                defaultValue: result.expense.money.toString(),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: currentDate,\n                onChange: date => setCurrentDate(date),\n                showTimeSelect: true,\n                filterDate: filterPassedTime,\n                name: \"date\",\n                customInput: /*#__PURE__*/_jsxDEV(ExampleCustomInput, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit(onSubmit),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditExpenseForm, \"HOWthMVKkxQgyVWu7woUoDj83l4=\", false, function () {\n  return [useForm, useStyles, useSessionStorage];\n});\n\n_c = EditExpenseForm;\nexport default EditExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditExpenseForm\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Forms/ExpenseForm/EditExpenseForm.tsx"],"names":["React","useEffect","useState","useForm","FormProvider","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","makeStyles","Grid","Typography","CircularProgress","InputForm","yup","yupResolver","mapToSelectItems","useSessionStorage","DatePicker","GetExpense","UpdateExpense","validationSchema","object","shape","title","string","required","min","max","purseId","number","money","useStyles","theme","form","width","EditExpenseForm","props","methods","resolver","handleSubmit","errors","classes","items","setitems","pursesData","setPursesData","removePursesData","currentDate","setCurrentDate","Date","isLoading","setIsLoading","result","setResult","successed","description","console","log","GetResult","expenseId","then","res","expense","date","response","status","data","undefined","catch","error","filterPassedTime","time","selectedDate","onSubmit","formValues","id","handleClose","ExampleCustomInput","value","onClick","rest","fontSize","topic","name","toString","select","upperCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useForm, FormProvider, SubmitHandler } from \"react-hook-form\";\r\nimport { Button, DialogTitle, DialogContent, DialogContentText, DialogActions, makeStyles, Theme, Grid, Typography, CircularProgress } from \"@material-ui/core\";\r\nimport InputForm from '../InputForm/InputForm';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Topic from \"../../../Data/Models/Topics/Topic\";\r\nimport { mapToSelectItems } from \"../../../mapper/mapper\";\r\nimport useSessionStorage from \"../../../CustomHooks/StorageHooks/useSessionStorage\";\r\nimport Purse from \"../../../Data/Models/Purses/Purse\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ExpenseForCreate from \"../../../Data/Models/Expenses/ExpenseForCreate\";\r\nimport \"./datepickerStyles.css\";\r\nimport Expense from \"../../../Data/Models/Expenses/Expense\";\r\nimport { GetExpense, UpdateExpense } from \"../../../Services/expense.service/ExpenseService\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n    title: yup.string().required(\"Enter title!\")\r\n        .min(3, \"Title is too short!\").max(15,  \"Should be 15 chars maximum\"),\r\n    purseId: yup.number().required(\"Chose purse!\"),\r\n    money: yup.number().required(\"Enter money!\")\r\n        .min(1, \"Minimum value is 1!\").max(9999999999, \"Maximum value is 9999999999!\")\r\n  });\r\n\r\ninterface EditExpenseFormProps\r\n{\r\n    topic: Topic;\r\n    expenseId: number;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n    }\r\n}));\r\n\r\nexport const EditExpenseForm: React.FC<EditExpenseFormProps> = (props) => {\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const { handleSubmit, errors } = methods;\r\n    const classes = useStyles();\r\n    const [items, setitems] = useState<{id: number, label: string}[]>([]);\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", []);\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [result, setResult] = useState<{\r\n        expense?:Expense,\r\n        successed: boolean,\r\n        description: string\r\n    }>({successed: false, description: \"\"});\r\n\r\n    useEffect(() => {\r\n        setitems(mapToSelectItems(\"id\", \"currencyCode\", pursesData));\r\n        console.log(items);\r\n    }, [pursesData])\r\n\r\n    useEffect(() => {\r\n        GetResult(props.expenseId)\r\n            .then(res => {\r\n                if(res.successed)\r\n                {\r\n                    setCurrentDate(new Date(res.expense.date));\r\n                }\r\n                setResult(res);\r\n                console.log(res.expense.purseId);\r\n                console.log(pursesData);\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const GetResult = async (expenseId: number) => {\r\n        return GetExpense(expenseId)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    return{\r\n                        expense: result.data,\r\n                        successed: true,\r\n                        description: \"Successed\"\r\n                    }\r\n                }\r\n                if(result.response.status == 404)\r\n                {\r\n                    return{\r\n                        successed: false,\r\n                        description: \"Expense has already deleted\",\r\n                        expense: undefined\r\n                    };\r\n                }\r\n                return{\r\n                    successed: false,\r\n                    description: \"You do not have access to this expense\",\r\n                    expense: undefined\r\n                };\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n\r\n                return{\r\n                    successed: false,\r\n                    description: \"Something went wrong\",\r\n                    expense: undefined\r\n                };\r\n            })\r\n      }\r\n\r\n    const filterPassedTime = (time: Date) => {\r\n        const currentDate = new Date();\r\n        const selectedDate = new Date(time);\r\n    \r\n        return currentDate > selectedDate;\r\n      }\r\n    \r\n\r\n    const onSubmit = (formValues: Expense) => {\r\n        formValues.date = new Date(currentDate);\r\n        formValues.id = props.expenseId;\r\n         \r\n        UpdateExpense(formValues).then(res => {\r\n            console.log(res);\r\n            props.handleClose();\r\n        })\r\n    }\r\n\r\n    const ExampleCustomInput = ({ value, onClick, ...rest}: any) => (\r\n        <Button style={{fontSize:22}} onClick={onClick} variant=\"contained\" color=\"primary\">\r\n          {value}\r\n        </Button>\r\n      );\r\n\r\n    if(isLoading)\r\n    {\r\n        return(\r\n            <Grid container xs={12} justify=\"center\">\r\n                <CircularProgress color=\"secondary\" />\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    if(!result.successed || result.expense == undefined)\r\n    {\r\n        return(\r\n            <React.Fragment>\r\n                <DialogTitle id=\"scroll-dialog-title\">\r\n                    <Grid container justify=\"center\" xs={12}>\r\n                        <Typography variant=\"h6\">Error!</Typography>\r\n                    </Grid>\r\n                </DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    <DialogContentText>\r\n                        <Typography>\r\n                            {result.description}\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={props.handleClose}\r\n                        >\r\n                        <Typography>\r\n                            Close\r\n                        </Typography>\r\n                    </Button>\r\n                </DialogActions>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <FormProvider {...methods}>\r\n            <DialogTitle id=\"scroll-dialog-title\">\r\n                <Grid container justify=\"center\" xs={12}>\r\n                    <Typography variant=\"h6\">{props.topic.name}</Typography>\r\n                </Grid>\r\n            </DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                        <DialogContentText>\r\n                            <Typography>\r\n                                Creating expense\r\n                            </Typography>\r\n                        </DialogContentText>\r\n                            <form noValidate className={classes.form}>\r\n                                <Grid container spacing={2}>\r\n                                        <Grid item xs={5}>\r\n                                                <InputForm \r\n                                                errorObj={errors}\r\n                                                name=\"title\" \r\n                                                type=\"text\"\r\n                                                label=\"Title\" \r\n                                                autoFocus \r\n                                                required\r\n                                                defaultValue={result.expense.title}\r\n                                                variant=\"outlined\"\r\n                                                />\r\n                                        </Grid>\r\n                                        <Grid item xs={5}>\r\n                                            <InputForm\r\n                                                errorObj={errors}\r\n                                                variant=\"outlined\"\r\n                                                type=\"text\"\r\n                                                required\r\n                                                label=\"Topic\"\r\n                                                name=\"topic\"\r\n                                                defaultValue={props.topic.name}\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={5}>\r\n                                            <InputForm \r\n                                            errorObj={errors}\r\n                                            name=\"purseId\" \r\n                                            type=\"text\"\r\n                                            label=\"Purse\"\r\n                                            required\r\n                                            defaultValue={result.expense.purseId.toString()}\r\n                                            variant=\"outlined\"\r\n                                            select={{select: true, items: items, upperCase:true}}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={5}>\r\n                                            <InputForm \r\n                                            errorObj={errors}\r\n                                            name=\"money\" \r\n                                            type=\"number\"\r\n                                            label=\"Money\"\r\n                                            required\r\n                                            defaultValue={result.expense.money.toString()}\r\n                                            variant=\"outlined\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8}>\r\n                                            <DatePicker\r\n                                            selected={currentDate}\r\n                                            onChange={(date: Date) => setCurrentDate(date)}\r\n                                            showTimeSelect\r\n                                            filterDate={filterPassedTime}\r\n                                            name=\"date\"\r\n                                            customInput={<ExampleCustomInput/>}\r\n                                            />\r\n                                        </Grid> \r\n                                    </Grid>\r\n                                </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            onClick={handleSubmit(onSubmit)}\r\n                            >\r\n                            <Typography>\r\n                                Save\r\n                            </Typography>\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            onClick={props.handleClose}\r\n                            >\r\n                            <Typography>\r\n                                Close\r\n                            </Typography>\r\n                        </Button>\r\n                    </DialogActions>\r\n            </FormProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EditExpenseForm;"]},"metadata":{},"sourceType":"module"}