{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\ExpensesList\\\\TopicPaper.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Box, Button, CircularProgress, Dialog, DialogContent, DialogActions, DialogTitle, Grid, makeStyles, Paper, Typography, DialogContentText, useMediaQuery, useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport { GetMonthName } from '../../Date/MonthName';\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  dialogPaper: {\n    maxHeight: \"600px\",\n    minHeight: \"400px\"\n  }\n}));\n\nconst TopicExpensesList = props => {\n  _s();\n\n  const pageSize = 20;\n  const [pageIndex, setPageIndex] = useState(0);\n  const [hasData, setHasData] = useState(true);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [expenses, setExpenses] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [pursesData, setPursesData, removePursesData] = useSessionStorage(\"pursesData\", []);\n  const classes = useStyles();\n  useEffect(() => {\n    if (isLoadingData) {\n      handleLoadMore();\n    }\n\n    console.log(\"useEffect state:\" + isLoadingData + expenses);\n  }, [isLoadingData]);\n\n  const handleLoadMore = () => {\n    if (hasNextPage) {\n      setIsLoadingData(true);\n      const request = {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      };\n      ExpenseService.GetPagedUserExpenses(request, props.topic).then(result => {\n        if (result.response.status == 200) {\n          if (result.data.total == 0) {\n            setHasData(false);\n          }\n\n          setExpenses([...expenses, ...result.data.items]);\n          setHasNextPage(result.data.items.length == pageSize);\n          setIsLoadingData(false);\n          setPageIndex(pageIndex + 1);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const infiniteRef = useInfiniteScroll({\n    loading: isLoadingData,\n    hasNextPage,\n    onLoadMore: handleLoadMore,\n    scrollContainer: \"parent\"\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: props.topic.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"scroll-dialog-description\",\n        ref: infiniteRef,\n        children: [!hasData ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: [\"You do not have any \", props.topic.name, \" expeses\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this) : expenses.map(expense => {\n          let currencyCode = \"\";\n          let purse = pursesData.find(p => p.id == expense.purseId);\n\n          if (purse != null && purse != undefined) {\n            currencyCode = purse.currencyCode.toUpperCase();\n          }\n\n          return /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 45\n              }, this),\n              \"aria-controls\": expense.id + \"-content\",\n              id: expense.id + \"-header\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.heading,\n                children: expense.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [expense.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 52\n                }, this), \"Date: \", expense.date.getDate(), \"/\", GetMonthName(expense.date.getMonth()), \"/\", expense.date.getFullYear(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this), \"Sum: \", expense.money, \" \", currencyCode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this);\n        }), isLoadingData && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Loading expenses...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: props.handleClose,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopicExpensesList, \"X3DqGgh8eIYmv5MIdBf+BnSCazg=\", false, function () {\n  return [useSessionStorage, useStyles, useInfiniteScroll];\n});\n\n_c = TopicExpensesList;\nexport const TopicPaper = props => {\n  _s2();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 8,\n    xl: 7,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: \"100%\",\n        padding: 0\n      },\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 20,\n        style: {\n          marginBottom: 10,\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          p: 1,\n          style: {\n            backgroundColor: \"black\",\n            color: \"white\",\n            borderRadius: \"10px 10px 0 0\"\n          },\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 37\n        }, this), props.topic.expenses.length == 0 && /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"There are not any expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 41\n        }, this), props.topic.expenses.map(expense => {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexWrap: \"wrap\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [expense.title, \" - \", expense.money]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 41\n            }, this)\n          }, expense.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 37\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      scroll: \"paper\",\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      \"aria-describedby\": \"scroll-dialog-description\",\n      fullWidth: useMediaQuery(theme.breakpoints.down('lg')),\n      classes: {\n        paper: classes.dialogPaper\n      },\n      children: /*#__PURE__*/_jsxDEV(TopicExpensesList, {\n        topic: {\n          id: props.topic.id,\n          name: props.topic.name\n        },\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(TopicPaper, \"BVhelrXhPPpFzrblyxhUsaq+mBY=\", false, function () {\n  return [useTheme, useStyles, useMediaQuery];\n});\n\n_c2 = TopicPaper;\nexport default TopicPaper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopicExpensesList\");\n$RefreshReg$(_c2, \"TopicPaper\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/ExpensesList/TopicPaper.tsx"],"names":["Box","Button","CircularProgress","Dialog","DialogContent","DialogActions","DialogTitle","Grid","makeStyles","Paper","Typography","DialogContentText","useMediaQuery","useTheme","Accordion","AccordionSummary","AccordionDetails","React","useEffect","useState","ExpenseService","ExpandMoreIcon","useSessionStorage","GetMonthName","useInfiniteScroll","useStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","dialogPaper","maxHeight","minHeight","TopicExpensesList","props","pageSize","pageIndex","setPageIndex","hasData","setHasData","isLoadingData","setIsLoadingData","expenses","setExpenses","hasNextPage","setHasNextPage","pursesData","setPursesData","removePursesData","classes","handleLoadMore","console","log","request","GetPagedUserExpenses","topic","then","result","response","status","data","total","items","length","catch","error","infiniteRef","loading","onLoadMore","scrollContainer","name","map","expense","currencyCode","purse","find","p","id","purseId","undefined","toUpperCase","title","date","getDate","getMonth","getFullYear","money","handleClose","TopicPaper","isOpen","setIsOpen","handleOpen","width","padding","marginBottom","backgroundColor","color","borderRadius","breakpoints","down","paper"],"mappings":"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","sourcesContent":["import { Box, Button, List, CircularProgress, Dialog, DialogContent,\r\n    DialogActions, DialogTitle, Grid, makeStyles, Paper, \r\n    Typography, DialogProps, DialogContentText, useMediaQuery, \r\n    useTheme, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Expense from '../../Data/Models/Expenses/Expense';\r\nimport Topic from '../../Data/Models/Topics/Topic';\r\nimport TopicWithExpenses from '../../Data/Models/Topics/TopicWithExpenses';\r\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\nimport { GetMonthName } from '../../Date/MonthName';\r\nimport useInfiniteScroll from 'react-infinite-scroll-hook';\r\nimport PagedRequest from '../../Services/pagedRequests/PagedRequest';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  dialogPaper: {\r\n      maxHeight: \"600px\",\r\n      minHeight: \"400px\"\r\n  }\r\n}),\r\n);\r\n\r\n\r\ninterface TopicExpensesListProps\r\n{\r\n    topic: Topic;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst TopicExpensesList: React.FC<TopicExpensesListProps> = (props) => {\r\n\r\n    const pageSize: number = 20;\r\n    \r\n    const [pageIndex, setPageIndex] = useState<number>(0);\r\n    const [hasData, setHasData] = useState<boolean>(true);\r\n    const [isLoadingData, setIsLoadingData] = useState<boolean>(true);\r\n    const [expenses, setExpenses] = useState<Expense[]>([]);\r\n    const [hasNextPage, setHasNextPage] = useState<boolean>(true);\r\n    const [pursesData, setPursesData, removePursesData] = useSessionStorage<Purse[]>(\"pursesData\", []);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (isLoadingData)\r\n        {\r\n            handleLoadMore();\r\n        }\r\n        console.log(\"useEffect state:\" + isLoadingData + expenses);\r\n      }, [isLoadingData]);\r\n      \r\n\r\n    const handleLoadMore = () => {\r\n        if(hasNextPage)\r\n        {\r\n            setIsLoadingData(true);\r\n            const request: PagedRequest = {\r\n            pageIndex: pageIndex,\r\n            pageSize: pageSize\r\n        };\r\n\r\n        ExpenseService.GetPagedUserExpenses(request, props.topic)\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    if(result.data.total == 0)\r\n                    {\r\n                        setHasData(false);\r\n                    }\r\n                    setExpenses([...expenses, ...result.data.items]);\r\n                    setHasNextPage(result.data.items.length == pageSize);\r\n                    setIsLoadingData(false);\r\n                    setPageIndex(pageIndex + 1);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    const infiniteRef = useInfiniteScroll({\r\n        loading:isLoadingData,\r\n        hasNextPage,\r\n        onLoadMore: handleLoadMore,\r\n        scrollContainer: \"parent\"\r\n      });\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <DialogTitle id=\"scroll-dialog-title\">\r\n                <Grid container justify=\"center\" xs={12}>\r\n                    <Typography variant=\"h6\">{props.topic.name}</Typography>\r\n                </Grid>\r\n            </DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                <DialogContentText id=\"scroll-dialog-description\" ref={infiniteRef}\r\n                >\r\n                    {!hasData ?\r\n                        <Grid container xs={12} justify=\"center\">\r\n                            <Typography variant=\"h4\">\r\n                                You do not have any {props.topic.name} expeses\r\n                            </Typography>\r\n                        </Grid>\r\n                        : expenses.map((expense) => {\r\n\r\n                        let currencyCode: string = \"\";\r\n                        let purse = pursesData.find(p => p.id == expense.purseId);\r\n                        \r\n                        if(purse != null && purse != undefined)\r\n                        {\r\n                            currencyCode = purse.currencyCode.toUpperCase();\r\n                        }\r\n\r\n                        return(\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={expense.id + \"-content\"}\r\n                                id={expense.id + \"-header\"}\r\n                                >\r\n                                <Typography className={classes.heading}>{expense.title}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                <Typography>\r\n                                    {expense.title}<br/>\r\n                                    Date: {expense.date.getDate()}/\r\n                                    {GetMonthName(expense.date.getMonth())}/\r\n                                    {expense.date.getFullYear()}\r\n                                    <br/>\r\n                                    Sum: {expense.money} {currencyCode}\r\n                                </Typography>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n\r\n                        );\r\n                    })}\r\n                    {isLoadingData && \r\n                        <Grid container xs={12} justify=\"center\">\r\n                            <Grid container item xs={12} justify=\"center\">\r\n                                <CircularProgress color=\"secondary\" />\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify=\"center\">\r\n                                <Typography variant=\"h6\">\r\n                                    Loading expenses...\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={props.handleClose}\r\n                    >\r\n                    <Typography>\r\n                        Close\r\n                    </Typography>\r\n                </Button>\r\n            </DialogActions>     \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\ninterface TopicPaperProps\r\n{\r\n    topic: TopicWithExpenses\r\n}\r\n\r\nexport const TopicPaper: React.FC<TopicPaperProps> = (props) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    \r\n    const handleOpen = () => {\r\n        setIsOpen(true);\r\n      };\r\n\r\n    const handleClose = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return(\r\n        <Grid item xs={8} xl={7}>\r\n                                <Button style={{width:\"100%\", padding:0}} onClick={handleOpen}>\r\n                                <Paper elevation={20} style={{marginBottom:10, width:\"100%\"}}\r\n                                >\r\n                                    <Box display=\"flex\" p={1}\r\n                                    style={{backgroundColor: \"black\", color:\"white\",\r\n                                    borderRadius:\"10px 10px 0 0\"\r\n                                }} \r\n                                    justifyContent=\"center\">\r\n                                        <Typography>{props.topic.name}</Typography>\r\n                                    </Box>\r\n                                    {\r\n                                        props.topic.expenses.length == 0 &&\r\n                                        <Box display=\"flex\" justifyContent=\"center\"\r\n                                        flexWrap=\"wrap\">\r\n                                            <Typography variant=\"h5\">\r\n                                                There are not any expenses\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    }\r\n                                    {props.topic.expenses.map((expense) => {\r\n                                    return(\r\n                                    <Box display=\"flex\" justifyContent=\"center\"\r\n                                    flexWrap=\"wrap\" key={expense.id}\r\n                                    >\r\n                                        <Typography>\r\n                                            {expense.title} - {expense.money}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                    );\r\n                                })}\r\n                        </Paper>\r\n                    </Button>\r\n                    <Dialog open={isOpen}\r\n                    scroll=\"paper\" aria-labelledby=\"scroll-dialog-title\"\r\n                    aria-describedby=\"scroll-dialog-description\"\r\n                    fullWidth={useMediaQuery(theme.breakpoints.down('lg'))}\r\n                    classes={{paper: classes.dialogPaper}}\r\n                    >\r\n                        <TopicExpensesList topic={{\r\n                            id: props.topic.id,\r\n                            name: props.topic.name\r\n                        }} \r\n                        handleClose={handleClose}\r\n                        />\r\n                    </Dialog>\r\n                </Grid>\r\n    );\r\n}\r\n\r\nexport default TopicPaper;"]},"metadata":{},"sourceType":"module"}