{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Router\\\\MainRouter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PursesContext from '../Context/PursesContext';\nimport UserContext from '../Context/UserContext';\nimport AuthorizedRouter from './AutorizedRouter';\nimport UnauthorizedRouter from './UnauthorizedRouter';\n\nconst MainRouter = () => {\n  _s();\n\n  // useEffect(() => {\n  //   console.log(\"userInfo:\" + userInfo);\n  // }, []);\n  const [userData, setUserData] = useState(uData);\n  const [pursesData, setPursesData] = useState(pData); // const [userInfo, setUserInfo, removeUserInfo] = useSessionStorageAsync(\"userInfo\", \n  // GetCurrentUserData as () => Promise<User>);\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        userData: userData,\n        setUserData: setUserData\n      },\n      children: /*#__PURE__*/_jsxDEV(PursesContext.Provider, {\n        value: {\n          pursesData: pursesData,\n          setPursesData: setPursesData,\n          getCurrecyCodes: getCurrencyCodes,\n          getBills: getBills\n        },\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/au\",\n            component: AuthorizedRouter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: UnauthorizedRouter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainRouter, \"7OaN7FcCGJEM5zNBDmtNunX+A/c=\");\n\n_c = MainRouter;\nexport default MainRouter;\nconst uData = {\n  userId: 2,\n  firstName: 'FirstName',\n  lastName: 'LastName',\n  email: \"user@gmail.com\",\n  username: \"user179\",\n  coutOccations: 0,\n  countNotes: 0,\n  textStatus: \" \"\n};\nconst purse1 = {\n  currencyCode: \"MDL\",\n  bill: 1000\n};\nconst purse2 = {\n  currencyCode: \"USD\",\n  bill: 2000\n};\nconst purse3 = {\n  currencyCode: \"EUR\",\n  bill: 3000\n};\nconst pData = {\n  purses: [purse1, purse2, purse3],\n  count: 3\n};\n\nconst getCurrencyCodes = () => {\n  let currencyCodes = [];\n  pData.purses.forEach(p => currencyCodes.push(p.currencyCode));\n  return currencyCodes;\n};\n\nconst getBills = () => {\n  let bills = [];\n  pData.purses.forEach(p => bills.push(p.bill));\n  return bills;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MainRouter\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Router/MainRouter.tsx"],"names":["React","useState","BrowserRouter","Router","Switch","Route","PursesContext","UserContext","AuthorizedRouter","UnauthorizedRouter","MainRouter","userData","setUserData","uData","pursesData","setPursesData","pData","getCurrecyCodes","getCurrencyCodes","getBills","userId","firstName","lastName","email","username","coutOccations","countNotes","textStatus","purse1","currencyCode","bill","purse2","purse3","purses","count","currencyCodes","forEach","p","push","bills"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAEYC,KAFZ,QAGS,kBAHT;AAMA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAMA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAIE,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AAEjC;AACA;AACA;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACY,KAAD,CAAxC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAACe,KAAD,CAA5C,CAPiC,CAQjC;AACA;;AAEA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAACL,QAAAA,QAAQ,EAACA,QAAV;AAAoBC,QAAAA,WAAW,EAACA;AAAhC,OAA7B;AAAA,6BACE,QAAC,aAAD,CAAe,QAAf;AAAwB,QAAA,KAAK,EAAE;AAACE,UAAAA,UAAU,EAACA,UAAZ;AAC7BC,UAAAA,aAAa,EAACA,aADe;AACAE,UAAAA,eAAe,EAACC,gBADhB;AAE7BC,UAAAA,QAAQ,EAACA;AAFoB,SAA/B;AAAA,+BAGE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,KAAZ;AAAkB,YAAA,SAAS,EAAEX;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcD,CAzBD;;GAAMC,U;;KAAAA,U;AA2BN,eAAeA,UAAf;AAEF,MAAMG,KAAe,GAAG;AACtBO,EAAAA,MAAM,EAAE,CADc;AAEtBC,EAAAA,SAAS,EAAE,WAFW;AAGtBC,EAAAA,QAAQ,EAAE,UAHY;AAItBC,EAAAA,KAAK,EAAE,gBAJe;AAKtBC,EAAAA,QAAQ,EAAE,SALY;AAMtBC,EAAAA,aAAa,EAAE,CANO;AAOtBC,EAAAA,UAAU,EAAE,CAPU;AAQtBC,EAAAA,UAAU,EAAE;AARU,CAAxB;AAWA,MAAMC,MAAiB,GAAG;AACxBC,EAAAA,YAAY,EAAE,KADU;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAA1B;AAIA,MAAMC,MAAiB,GAAG;AAC1BF,EAAAA,YAAY,EAAE,KADY;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAA1B;AAIA,MAAME,MAAiB,GAAG;AAC1BH,EAAAA,YAAY,EAAE,KADY;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAA1B;AAKA,MAAMd,KAAiB,GAAG;AAC1BiB,EAAAA,MAAM,EAAE,CAACL,MAAD,EAASG,MAAT,EAAiBC,MAAjB,CADkB;AAE1BE,EAAAA,KAAK,EAAE;AAFmB,CAA1B;;AAKA,MAAMhB,gBAAgB,GAAG,MAAe;AACtC,MAAIiB,aAAuB,GAAG,EAA9B;AACAnB,EAAAA,KAAK,CAACiB,MAAN,CAAaG,OAAb,CAAqBC,CAAC,IAAIF,aAAa,CAACG,IAAd,CAAmBD,CAAC,CAACR,YAArB,CAA1B;AACA,SAAOM,aAAP;AACD,CAJD;;AAKA,MAAMhB,QAAQ,GAAG,MAAe;AAC9B,MAAIoB,KAAc,GAAG,EAArB;AACAvB,EAAAA,KAAK,CAACiB,MAAN,CAAaG,OAAb,CAAqBC,CAAC,IAAIE,KAAK,CAACD,IAAN,CAAWD,CAAC,CAACP,IAAb,CAA1B;AACA,SAAOS,KAAP;AACD,CAJD","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route, Redirect\r\n  } from \"react-router-dom\";\r\nimport SignUpPage from '../Components/Pages/SignUpPage';\r\nimport UnauthorizedPage from '../Components/Pages/UnauthorizedPage';\r\nimport PursesContext from '../Context/PursesContext';\r\nimport UserContext from '../Context/UserContext';\r\nimport useSessionStorageAsync from '../CustomHooks/StorageHooks/AsyncHooks/useSessionStorageAsync';\r\nimport User from '../Data/Models/User/User';\r\nimport PurseData from '../Data/PurseData';\r\nimport PursesData from '../Data/PursesData';\r\nimport UserData from '../Data/UserData';\r\nimport AuthorizedRouter from './AutorizedRouter';\r\nimport UnauthorizedRouter from './UnauthorizedRouter';\r\nimport { GetCurrentUserData } from '../Services/user.services/User.service';\r\n\r\n\r\n  const MainRouter: React.FC = () => {\r\n\r\n    // useEffect(() => {\r\n    //   console.log(\"userInfo:\" + userInfo);\r\n    // }, []);\r\n\r\n    const [userData, setUserData] = useState(uData);\r\n    const [pursesData, setPursesData] = useState(pData);\r\n    // const [userInfo, setUserInfo, removeUserInfo] = useSessionStorageAsync(\"userInfo\", \r\n    // GetCurrentUserData as () => Promise<User>);\r\n\r\n    return(\r\n        <Router>\r\n            <UserContext.Provider value={{userData:userData, setUserData:setUserData}}>\r\n              <PursesContext.Provider value={{pursesData:pursesData, \r\n                setPursesData:setPursesData, getCurrecyCodes:getCurrencyCodes,\r\n                getBills:getBills}}>\r\n                <Switch>\r\n                  <Route path=\"/au\" component={AuthorizedRouter} />\r\n                  <Route component={UnauthorizedRouter} />\r\n                </Switch>\r\n              </PursesContext.Provider>\r\n            </UserContext.Provider>\r\n        </Router>\r\n    );\r\n  }\r\n\r\n  export default MainRouter;\r\n\r\nconst uData: UserData = {\r\n  userId: 2,\r\n  firstName: 'FirstName',\r\n  lastName: 'LastName',\r\n  email: \"user@gmail.com\",\r\n  username: \"user179\",\r\n  coutOccations: 0,\r\n  countNotes: 0,\r\n  textStatus: \" \"\r\n}\r\n\r\nconst purse1: PurseData = {\r\n  currencyCode: \"MDL\",\r\n  bill: 1000\r\n};\r\nconst purse2: PurseData = {\r\ncurrencyCode: \"USD\",\r\nbill: 2000\r\n};\r\nconst purse3: PurseData = {\r\ncurrencyCode: \"EUR\",\r\nbill: 3000\r\n};\r\n\r\nconst pData: PursesData = {\r\npurses: [purse1, purse2, purse3],\r\ncount: 3\r\n}\r\n\r\nconst getCurrencyCodes = ():string[] => {\r\n  let currencyCodes: string[] = [];\r\n  pData.purses.forEach(p => currencyCodes.push(p.currencyCode));\r\n  return currencyCodes;\r\n}\r\nconst getBills = ():number[] => {\r\n  let bills:number[] = [];\r\n  pData.purses.forEach(p => bills.push(p.bill));\r\n  return bills;\r\n}"]},"metadata":{},"sourceType":"module"}