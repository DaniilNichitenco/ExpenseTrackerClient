{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Buttons\\\\EditProfileButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport React, { useState } from 'react';\nexport const EditProfileButton = props => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      style: props.style,\n      startIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }, this),\n      children: props.text ? props.text : \"Edit profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"arial-lablledby\": \"form-dialog-title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProfileButton, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = EditProfileButton;\nexport default EditProfileButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileButton\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Buttons/EditProfileButton.tsx"],"names":["Button","Dialog","SettingsIcon","React","useState","EditProfileButton","props","open","setOpen","handleClickOpen","handleClose","style","text"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAQA,OAAO,MAAMC,iBAAmD,GAAIC,KAAD,IAAW;AAAA;;AAE1E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMK,eAAe,GAAG,MAAM;AAC1BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,MAAD;AACA,MAAA,OAAO,EAAC,WADR;AAEA,MAAA,KAAK,EAAC,WAFN;AAGA,MAAA,KAAK,EAAEF,KAAK,CAACK,KAHb;AAIA,MAAA,SAAS,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAJX;AAAA,gBAMKL,KAAK,CAACM,IAAN,GAAaN,KAAK,CAACM,IAAnB,GAA0B;AAN/B;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEL,IAAd;AAAoB,MAAA,OAAO,EAAEG,WAA7B;AAA0C,yBAAgB;AAA1D;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA3BM;;GAAML,iB;;KAAAA,iB;AA6Bb,eAAeA,iBAAf","sourcesContent":["import { Button, Dialog } from '@material-ui/core';\r\nimport { OverridableTypeMap } from '@material-ui/core/OverridableComponent';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport React, { useState } from 'react';\r\n\r\ninterface EditProfileButtonProps\r\n{\r\n    text?: string,\r\n    style?: React.CSSProperties\r\n}\r\n\r\nexport const EditProfileButton: React.FC<EditProfileButtonProps> = (props) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={props.style}\r\n            startIcon={<SettingsIcon />}\r\n            >\r\n                {props.text ? props.text : \"Edit profile\"}\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} arial-lablledby=\"form-dialog-title\">\r\n                {/* <SignInForm handleClose={handleClose} /> */}\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EditProfileButton;"]},"metadata":{},"sourceType":"module"}