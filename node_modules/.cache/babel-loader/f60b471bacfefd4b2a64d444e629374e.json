{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Forms\\\\PursesForm\\\\CreatePurseForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Button, DialogTitle, DialogContent, DialogActions, makeStyles, Grid, Typography, CircularProgress } from \"@material-ui/core\";\nimport InputForm from '../InputForm/InputForm';\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../ExpenseForm/datepickerStyles.css\";\nimport { CreatePurse, GetAvailableCurrencies } from \"../../../Services/purse.services/Purse.service\";\nimport DialogContentText from \"@material-ui/core/DialogContentText/DialogContentText\";\nconst validationSchema = yup.object().shape({\n  purseId: yup.number().required(\"Chose purse!\"),\n  bill: yup.number().required(\"Enter monthly salary!\").min(1, \"Minimum value is 1!\").max(9999999999, \"Maximum value is 9999999999!\")\n});\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%' // Fix IE 11 issue.\n\n  }\n}));\nexport const CreatePurseForm = props => {\n  _s();\n\n  const classes = useStyles();\n  const methods = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const {\n    handleSubmit,\n    errors\n  } = methods;\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    GetAvailableCurrencies().then(res => {\n      if (res.response.status == 200) {\n        // setItems([...mapToSelectItems(\"\", \"currencyCode\", res.data)]);\n        setItems;\n        setIsLoading(false);\n      }\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n  const onSubmit = formValues => {\n    var _items$find;\n\n    let currencyCode = (_items$find = items.find(i => i.id == formValues.purseId)) === null || _items$find === void 0 ? void 0 : _items$find.label.toLowerCase();\n    const purseForCreate = {\n      currencyCode: currencyCode,\n      bill: formValues.bill\n    };\n    console.log(purseForCreate);\n    CreatePurse(purseForCreate).then(res => {\n      console.log(res);\n      props.handleClose();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Creating purse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          className: classes.form,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 7,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"purseId\",\n                type: \"number\",\n                label: \"Purse\",\n                required: true,\n                variant: \"outlined\",\n                select: {\n                  select: true,\n                  items: items,\n                  upperCase: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 7,\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                errorObj: errors,\n                name: \"bill\",\n                type: \"number\",\n                label: \"Monthly salary\",\n                required: true,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleSubmit(onSubmit),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePurseForm, \"0njy41xaXE2btJWPSFifrYEYAGk=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = CreatePurseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePurseForm\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Forms/PursesForm/CreatePurseForm.tsx"],"names":["React","useEffect","useState","useForm","FormProvider","Button","DialogTitle","DialogContent","DialogActions","makeStyles","Grid","Typography","CircularProgress","InputForm","yup","yupResolver","CreatePurse","GetAvailableCurrencies","DialogContentText","validationSchema","object","shape","purseId","number","required","bill","min","max","useStyles","theme","form","width","CreatePurseForm","props","classes","methods","resolver","handleSubmit","errors","items","setItems","isLoading","setIsLoading","then","res","response","status","handleClose","onSubmit","formValues","currencyCode","find","i","id","label","toLowerCase","purseForCreate","console","log","select","upperCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Button, DialogTitle, DialogContent, DialogActions, makeStyles, Grid, Typography, CircularProgress } from \"@material-ui/core\";\r\nimport InputForm from '../InputForm/InputForm';\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { mapToSelectItems } from \"../../../mapper/mapper\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../ExpenseForm/datepickerStyles.css\";\r\nimport { CreatePurse, GetAvailableCurrencies } from \"../../../Services/purse.services/Purse.service\";\r\nimport PurseForCreate from \"../../../Data/Models/Purses/PurseForCreate\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText/DialogContentText\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n    purseId: yup.number().required(\"Chose purse!\"),\r\n    bill: yup.number().required(\"Enter monthly salary!\")\r\n        .min(1, \"Minimum value is 1!\").max(9999999999, \"Maximum value is 9999999999!\")\r\n  });\r\n\r\n  interface CreatePurseFormProps\r\n  {\r\n      handleClose: () => void\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n    }\r\n}));\r\n\r\n  export const CreatePurseForm: React.FC<CreatePurseFormProps> = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const { handleSubmit, errors } = methods;\r\n    const [items, setItems] = useState<{id: number, label: string}[]>([]);\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        GetAvailableCurrencies()\r\n            .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    // setItems([...mapToSelectItems(\"\", \"currencyCode\", res.data)]);\r\n                    setItems\r\n                    setIsLoading(false);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    if(isLoading)\r\n    {\r\n      return (\r\n        <React.Fragment>\r\n            <DialogTitle id=\"scroll-dialog-title\">\r\n                <Grid container justify=\"center\" xs={12}>\r\n                <CircularProgress color=\"secondary\" />\r\n                </Grid>\r\n            </DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                <DialogContentText>\r\n                    <CircularProgress color=\"secondary\" />\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={props.handleClose}\r\n                    >\r\n                    <Typography>\r\n                        Close\r\n                    </Typography>\r\n                </Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    const onSubmit = (formValues:{purseId: number, bill: number}) => {\r\n            let currencyCode = items.find(i => i.id == formValues.purseId)?.label\r\n            .toLowerCase() as \"mdl\" | \"usd\" | \"eur\";\r\n            const purseForCreate: PurseForCreate = {\r\n                currencyCode: currencyCode,\r\n                bill: formValues.bill\r\n            }\r\n            console.log(purseForCreate);\r\n            CreatePurse(purseForCreate)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    props.handleClose();\r\n                });\r\n        }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <FormProvider {...methods}>\r\n                <DialogTitle>\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography variant=\"h6\">Creating purse</Typography>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers={true}>\r\n                        <form noValidate className={classes.form}>\r\n                                <Grid container spacing={2}>\r\n                                        <Grid item xs={7}>\r\n                                            <InputForm \r\n                                            errorObj={errors}\r\n                                            name=\"purseId\" \r\n                                            type=\"number\"\r\n                                            label=\"Purse\"\r\n                                            required\r\n                                            variant=\"outlined\"\r\n                                            select={{select: true, items: items, upperCase:true}}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={7}>\r\n                                            <InputForm \r\n                                            errorObj={errors}\r\n                                            name=\"bill\" \r\n                                            type=\"number\"\r\n                                            label=\"Monthly salary\"\r\n                                            required\r\n                                            variant=\"outlined\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"secondary\"\r\n                        onClick={handleSubmit(onSubmit)}\r\n                        >\r\n                        <Typography>\r\n                            Create\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={props.handleClose}\r\n                        >\r\n                        <Typography>\r\n                            Close\r\n                        </Typography>\r\n                    </Button>\r\n                    </DialogActions>\r\n            </FormProvider>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n\r\n"]},"metadata":{},"sourceType":"module"}