{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Tables\\\\PurseExpenseTable.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { withStyles, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\nimport PursesService from '../../Services/purse.services/Purse.service';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\nimport clsx from 'clsx';\nimport CountDays from '../../Date/CountDays';\nconst StyledTableCell = withStyles(theme => createStyles({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => createStyles({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  },\n  rowHeader: {\n    fontWeight: 800\n  },\n  textTable: {\n    fontSize: 18\n  }\n});\n\nconst TableDailyData = ({\n  currencyCode\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [dailyExpenseSum, setDailyExpenseSum] = useSessionStorage(\"dailyExpenseSum\", []);\n  let expenseForSum = 0;\n  useEffect(() => {\n    if (dailyExpenseSum.length == 0) {\n      ExpenseService.GetExpensesSumForToday().then(result => {\n        if (result.response.status == 200) {\n          setDailyExpenseSum(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  }\n\n  let sum = dailyExpenseSum.find(e => e.currencyCode == currencyCode);\n\n  if (sum != undefined) {\n    expenseForSum = sum.sum;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: expenseForSum\n  }, void 0, false);\n};\n\n_s(TableDailyData, \"XnuWw/VtHl74tUKHtRXDtFFe56I=\", false, function () {\n  return [useSessionStorage];\n});\n\n_c = TableDailyData;\n\nconst TableMonthlyData = ({\n  currencyCode\n}) => {\n  _s2();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [monlyExpenseSum, setMonlyExpenseSum] = useSessionStorage(\"monlyExpenseSum\", []);\n  let expenseForSum = 0;\n  useEffect(() => {\n    if (monlyExpenseSum.length == 0) {\n      ExpenseService.GetExpensesSumForMonth().then(result => {\n        if (result.response.status == 200) {\n          setMonlyExpenseSum(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this);\n  }\n\n  let sum = monlyExpenseSum.find(e => e.currencyCode == currencyCode);\n\n  if (sum != undefined) {\n    expenseForSum = sum.sum;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: expenseForSum\n  }, void 0, false);\n};\n\n_s2(TableMonthlyData, \"qqe4vK9iTVdoZilhfEN5RMl/tnA=\", false, function () {\n  return [useSessionStorage];\n});\n\n_c2 = TableMonthlyData;\n\nconst TableYearlyData = ({\n  currencyCode\n}) => {\n  _s3();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [yearlyExpenseSum, setYearlyExpenseSum] = useSessionStorage(\"yearlyExpenseSum\", []);\n  let expenseForSum = 0;\n  useEffect(() => {\n    if (yearlyExpenseSum.length == 0) {\n      ExpenseService.GetExpensesSumForYear().then(result => {\n        if (result.response.status == 200) {\n          setYearlyExpenseSum(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }, this);\n  }\n\n  let sum = yearlyExpenseSum.find(e => e.currencyCode == currencyCode);\n\n  if (sum != undefined) {\n    expenseForSum = sum.sum;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: expenseForSum\n  }, void 0, false);\n};\n\n_s3(TableYearlyData, \"rG4UATsE9WCyy308+YFJzYU/Rx8=\", false, function () {\n  return [useSessionStorage];\n});\n\n_c3 = TableYearlyData;\n\nconst PurseExpenseTable = () => {\n  _s4();\n\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const [pursesData, setPursesData] = useSessionStorage(\"pursesData\", []);\n  useEffect(() => {\n    if (pursesData == []) {\n      PursesService.GetCurrentUserPurses().then(result => {\n        if (result.response.status == 200) {\n          setPursesData(result.data);\n          setIsLoading(false);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            className: classes.textTable,\n            children: \"Purse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            className: classes.textTable,\n            children: \"Daily expenses/plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            className: classes.textTable,\n            children: \"Monthly expenses/plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            className: classes.textTable,\n            children: \"Yearly expenses/plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [pursesData.length == 0 && /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          className: classes.textTable,\n          children: /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            className: classes.textTable,\n            children: [/*#__PURE__*/_jsxDEV(TableDailyData, {\n              currencyCode: purse.currencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), \"/\", (purse.bill / CountDays()).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, purse.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), pursesData.map(purse => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          className: classes.textTable,\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            align: \"center\",\n            className: clsx(classes.rowHeader, classes.textTable),\n            children: purse.currencyCode.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            className: classes.textTable,\n            children: [/*#__PURE__*/_jsxDEV(TableDailyData, {\n              currencyCode: purse.currencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), \"/\", (purse.bill / CountDays()).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            className: classes.textTable,\n            children: [/*#__PURE__*/_jsxDEV(TableMonthlyData, {\n              currencyCode: purse.currencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), \"/\", purse.bill.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            className: classes.textTable,\n            children: [/*#__PURE__*/_jsxDEV(TableYearlyData, {\n              currencyCode: purse.currencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), \"/\", (purse.bill * 12).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, purse.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(PurseExpenseTable, \"i3/SfwVSoNO+DtfWLGYviO+mGko=\", false, function () {\n  return [useStyles, useSessionStorage];\n});\n\n_c4 = PurseExpenseTable;\nexport default PurseExpenseTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TableDailyData\");\n$RefreshReg$(_c2, \"TableMonthlyData\");\n$RefreshReg$(_c3, \"TableYearlyData\");\n$RefreshReg$(_c4, \"PurseExpenseTable\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Tables/PurseExpenseTable.tsx"],"names":["React","useEffect","useState","withStyles","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useSessionStorage","PursesService","CircularProgress","Grid","ExpenseService","clsx","CountDays","StyledTableCell","theme","head","backgroundColor","palette","primary","dark","color","common","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","rowHeader","fontWeight","textTable","TableDailyData","currencyCode","isLoading","setIsLoading","dailyExpenseSum","setDailyExpenseSum","expenseForSum","length","GetExpensesSumForToday","then","result","response","status","data","catch","error","console","log","sum","find","e","undefined","TableMonthlyData","monlyExpenseSum","setMonlyExpenseSum","GetExpensesSumForMonth","TableYearlyData","yearlyExpenseSum","setYearlyExpenseSum","GetExpensesSumForYear","PurseExpenseTable","classes","pursesData","setPursesData","GetCurrentUserPurses","purse","bill","toFixed","id","map","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport useSessionStorage from '../../CustomHooks/StorageHooks/useSessionStorage';\r\nimport Purse from '../../Data/Models/Purses/Purse';\r\nimport PursesService from '../../Services/purse.services/Purse.service';\r\nimport { CircularProgress, Grid } from '@material-ui/core';\r\nimport { ExpensesForSumDefault } from '../../Data/Models/Expenses/default/ExpenseForSumDefault';\r\nimport ExpenseForSum from '../../Data/Models/Expenses/ExpenseForSum';\r\nimport ExpenseService from '../../Services/expense.service/ExpenseService';\r\nimport clsx from 'clsx';\r\nimport CountDays from '../../Date/CountDays';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  rowHeader: {\r\n      fontWeight: 800,\r\n  },\r\n  textTable: {\r\n    fontSize: 18\r\n  }\r\n});\r\n\r\ninterface TableDataProps\r\n{\r\n    currencyCode:string\r\n}\r\n\r\nconst TableDailyData: React.FC<TableDataProps> = ({currencyCode}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [dailyExpenseSum, setDailyExpenseSum] = useSessionStorage<ExpenseForSum[]>(\r\n      \"dailyExpenseSum\", []\r\n      );\r\n\r\n    let expenseForSum: number = 0;\r\n\r\n        useEffect(() => {\r\n            if(dailyExpenseSum.length == 0)\r\n            {\r\n                ExpenseService.GetExpensesSumForToday()\r\n                    .then(result => {\r\n\r\n                        if(result.response.status == 200)\r\n                        {\r\n                            setDailyExpenseSum(result.data);\r\n                            setIsLoading(false);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n            else\r\n            {\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n\r\n    if(isLoading)\r\n    {\r\n        return(\r\n        <Grid container xs={12} justify=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Grid>\r\n          );\r\n    }\r\n\r\n    let sum = dailyExpenseSum.find(e => e.currencyCode == currencyCode);\r\n\r\n    if(sum != undefined)\r\n    {\r\n        expenseForSum = sum.sum;\r\n    }\r\n\r\n    return (<>{expenseForSum}</>);\r\n}\r\n\r\nconst TableMonthlyData: React.FC<TableDataProps> = ({currencyCode}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [monlyExpenseSum, setMonlyExpenseSum] = useSessionStorage<ExpenseForSum[]>(\"monlyExpenseSum\", []);\r\n\r\n    let expenseForSum: number = 0;\r\n\r\n        useEffect(() => {\r\n          if(monlyExpenseSum.length == 0)\r\n          {\r\n            ExpenseService.GetExpensesSumForMonth()\r\n                .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    setMonlyExpenseSum(result.data);\r\n                    setIsLoading(false);\r\n                }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n          }\r\n          else\r\n          {\r\n            setIsLoading(false);\r\n          }\r\n        });\r\n\r\n    if(isLoading)\r\n    {\r\n        return(\r\n          <Grid container xs={12} justify=\"center\">\r\n            <CircularProgress color=\"secondary\" />\r\n          </Grid>\r\n          );\r\n    }\r\n\r\n    let sum = monlyExpenseSum.find(e => e.currencyCode == currencyCode);\r\n\r\n    if(sum != undefined)\r\n    {\r\n        expenseForSum = sum.sum;\r\n    }\r\n\r\n    return (<>{expenseForSum}</>);\r\n}\r\n\r\nconst TableYearlyData: React.FC<TableDataProps> = ({currencyCode}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [yearlyExpenseSum, setYearlyExpenseSum] = useSessionStorage<ExpenseForSum[]>(\r\n      \"yearlyExpenseSum\", []\r\n      );\r\n\r\n    let expenseForSum: number = 0;\r\n\r\n        useEffect(() => {\r\n            if(yearlyExpenseSum.length == 0)\r\n            {\r\n                ExpenseService.GetExpensesSumForYear()\r\n                    .then(result => {\r\n\r\n                        if(result.response.status == 200)\r\n                        {\r\n                            setYearlyExpenseSum(result.data);\r\n                            setIsLoading(false);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n            else\r\n            {\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n\r\n    if(isLoading)\r\n    {\r\n        return(\r\n          <Grid container xs={12} justify=\"center\">\r\n            <CircularProgress color=\"secondary\" />\r\n          </Grid>\r\n          );\r\n    }\r\n\r\n    let sum = yearlyExpenseSum.find(e => e.currencyCode == currencyCode);\r\n\r\n    if(sum != undefined)\r\n    {\r\n        expenseForSum = sum.sum;\r\n    }\r\n\r\n    return (<>{expenseForSum}</>);\r\n}\r\n\r\nconst PurseExpenseTable:React.FC = () => {\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [pursesData, setPursesData] = useSessionStorage<Purse[]>(\"pursesData\", []);\r\n\r\n  useEffect(() => {\r\n    \r\n    if(pursesData == [])\r\n    {\r\n        PursesService.GetCurrentUserPurses()\r\n            .then(result => {\r\n                if(result.response.status == 200)\r\n                {\r\n                    setPursesData(result.data);\r\n                    setIsLoading(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    else\r\n    {\r\n        setIsLoading(false);\r\n    }\r\n    \r\n  }, []);\r\n\r\n  if(isLoading)\r\n  {\r\n    return (\r\n      <Grid container xs={12} justify=\"center\">\r\n        <CircularProgress color=\"secondary\" />\r\n      </Grid>\r\n      ); \r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"center\" className={classes.textTable}>Purse</StyledTableCell>\r\n            <StyledTableCell align=\"center\" className={classes.textTable}>Daily expenses/plan</StyledTableCell>\r\n            <StyledTableCell align=\"center\" className={classes.textTable}>Monthly expenses/plan</StyledTableCell>\r\n            <StyledTableCell align=\"center\" className={classes.textTable}>Yearly expenses/plan</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {pursesData.length == 0 && \r\n          <StyledTableRow key={purse.id} className={classes.textTable}>\r\n            <StyledTableCell align=\"center\" className={classes.textTable}>\r\n                <TableDailyData currencyCode={purse.currencyCode}/>/{(purse.bill/CountDays()).toFixed(2)}\r\n              </StyledTableCell>\r\n          </StyledTableRow>\r\n          }\r\n          {pursesData.map((purse) => (\r\n            <StyledTableRow key={purse.id} className={classes.textTable}>\r\n              <StyledTableCell component=\"th\" scope=\"row\" align=\"center\" className={clsx(classes.rowHeader, classes.textTable)}>\r\n                {purse.currencyCode.toUpperCase()}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\" className={classes.textTable}>\r\n                <TableDailyData currencyCode={purse.currencyCode}/>/{(purse.bill/CountDays()).toFixed(2)}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\" className={classes.textTable}>\r\n                <TableMonthlyData currencyCode={purse.currencyCode}/>/{(purse.bill).toFixed(2)}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\" className={classes.textTable}>\r\n                <TableYearlyData currencyCode={purse.currencyCode}/>/{(purse.bill*12).toFixed(2)}\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default PurseExpenseTable;"]},"metadata":{},"sourceType":"module"}