{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\vscommunity\\\\ExpenseTrackerFront\\\\expensetracker\\\\src\\\\Components\\\\Pages\\\\PursesPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Accordion, AccordionDetails, AccordionSummary, Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, makeStyles, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { DeletePurse, GetAllCurrenciesAmount, GetPursesForList } from '../../Services/purse.services/Purse.service';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport GetMonthName from '../../Date/MonthName';\nimport { CreatePurseForm } from '../Forms/PursesForm/CreatePurseForm';\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\nimport EditPurseForm from '../Forms/PursesForm/EditPurseForm';\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  buttons: {\n    width: 100\n  }\n}));\nexport const PursesPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isLoadingPurses, setIsLoadingPurses] = useState(true);\n  const [pursesForList, setPursesForList] = useState([]);\n  const [countCurrencies, setCountCurrencies] = useState(0);\n  const [isLoadingCurrencies, setIsLoadingCurrencies] = useState(true);\n  const theme = useTheme();\n  const [dialog, setDialog] = useState({\n    isOpen: false,\n    action: \"update\",\n    itemId: 0\n  });\n  const width = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const handleOpen = (action, itemId) => {\n    if (itemId == undefined) {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action\n      });\n    } else {\n      setDialog({ ...dialog,\n        isOpen: true,\n        action: action,\n        itemId: itemId\n      });\n    }\n  };\n\n  const handleClose = () => {\n    setDialog({ ...dialog,\n      isOpen: false\n    });\n  };\n\n  useEffect(() => {\n    GetPursesForList().then(res => {\n      if (res.response.status == 200) {\n        setPursesForList([...res.data]);\n        setIsLoadingPurses(false);\n      }\n    });\n    GetAllCurrenciesAmount().then(res => {\n      if (res.response.status == 200) {\n        setCountCurrencies(res.data);\n        setIsLoadingCurrencies(false);\n      }\n    });\n  }, []);\n  useNonInitialEffect(() => {\n    if (!dialog.isOpen) //if we close nested dialog, we rerender whole component\n      {\n        setIsLoadingPurses(true);\n        GetPursesForList().then(res => {\n          if (res.response.status == 200) {\n            setPursesForList([...res.data]);\n            setIsLoadingPurses(false);\n          }\n        });\n      }\n  }, [dialog]);\n\n  const deletePurse = async id => {\n    DeletePurse(id).then(res => {\n      handleClose();\n    }).catch(error => {\n      console.log(error);\n      handleClose();\n    });\n  };\n\n  if (isLoadingPurses) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      style: {\n        minHeigh\n      },\n      className: \"contentDiv\",\n      xs: 10,\n      xl: 9,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          xs: 12,\n          direction: \"row-reverse\",\n          children: [isLoadingPurses || isLoadingCurrencies ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            disabled: pursesForList.length >= countCurrencies,\n            variant: \"outlined\",\n            onClick: () => {\n              handleOpen(\"create\");\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Count purses: \", isLoadingPurses ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this) : pursesForList.length, \"/\", isLoadingCurrencies ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this) : countCurrencies]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), isLoadingPurses ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this) : pursesForList.length == 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"There are not any purses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this) : pursesForList.map(purse => {\n          return /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 45\n              }, this),\n              \"aria-controls\": purse.id + \"-content\",\n              id: purse.id + \"-header\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.heading,\n                children: purse.currencyCode.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [\"Currency code: \", purse.currencyCode.toUpperCase(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 98\n                    }, this), \"Created at: \", purse.createdAt.getDate(), \"/\", GetMonthName(purse.createdAt.getMonth()), \"/\", purse.createdAt.getFullYear(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 80\n                    }, this), \"Monthly plan: \", purse.bill.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  style: {\n                    padding: 10\n                  },\n                  item: true,\n                  container: true,\n                  xs: 12,\n                  direction: \"row-reverse\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: () => {\n                      handleOpen(\"delete\", purse.id);\n                    },\n                    className: classes.buttons,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: () => {\n                      handleOpen(\"update\", purse.id);\n                    },\n                    className: classes.buttons,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)]\n          }, purse.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialog.isOpen,\n      fullWidth: width,\n      children: dialog.action == \"create\" ? /*#__PURE__*/_jsxDEV(CreatePurseForm, {\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this) : dialog.action == \"update\" ? /*#__PURE__*/_jsxDEV(EditPurseForm, {\n        purseId: dialog.itemId,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Delete purse?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Are you sure you want to delete this purse?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => {\n              deletePurse(dialog.itemId);\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PursesPage, \"/2dpq5cCRBKjsx8+j8Fiv+s5Vuw=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery, useNonInitialEffect];\n});\n\n_c = PursesPage;\nexport default PursesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PursesPage\");","map":{"version":3,"sources":["D:/vscommunity/ExpenseTrackerFront/expensetracker/src/Components/Pages/PursesPage.tsx"],"names":["Accordion","AccordionDetails","AccordionSummary","Button","CircularProgress","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","makeStyles","Typography","useMediaQuery","useTheme","React","useEffect","useState","DeletePurse","GetAllCurrenciesAmount","GetPursesForList","ExpandMoreIcon","GetMonthName","CreatePurseForm","useNonInitialEffect","EditPurseForm","useStyles","theme","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","buttons","width","PursesPage","classes","isLoadingPurses","setIsLoadingPurses","pursesForList","setPursesForList","countCurrencies","setCountCurrencies","isLoadingCurrencies","setIsLoadingCurrencies","dialog","setDialog","isOpen","action","itemId","breakpoints","down","handleOpen","undefined","handleClose","then","res","response","status","data","deletePurse","id","catch","error","console","log","minHeigh","length","map","purse","currencyCode","toUpperCase","createdAt","getDate","getMonth","getFullYear","bill","toFixed","padding"],"mappings":"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","sourcesContent":["import { Accordion, AccordionDetails, AccordionSummary, Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, makeStyles, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PurseForList from '../../Data/Models/Purses/PurseForList';\r\nimport { DeletePurse, GetAllCurrenciesAmount, GetPursesForList } from '../../Services/purse.services/Purse.service';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport GetMonthName from '../../Date/MonthName';\r\nimport { CreatePurseForm } from '../Forms/PursesForm/CreatePurseForm';\r\nimport useNonInitialEffect from '../../CustomHooks/CustomUseEffectHooks/useNonInitialEffect';\r\nimport EditPurseForm from '../Forms/PursesForm/EditPurseForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n      buttons: {\r\n          width: 100\r\n      }\r\n}))\r\n\r\nexport const PursesPage: React.FC = () => {\r\n\r\n    const classes = useStyles();\r\n    const [isLoadingPurses, setIsLoadingPurses] = useState<boolean>(true);\r\n    const [pursesForList, setPursesForList] = useState<PurseForList[]>([]);\r\n    const [countCurrencies, setCountCurrencies] = useState<number>(0);\r\n    const [isLoadingCurrencies, setIsLoadingCurrencies] = useState<boolean>(true);\r\n    const theme = useTheme();\r\n    const [dialog, setDialog] = useState<{\r\n        isOpen: boolean, \r\n        action: \"update\" | \"create\" | \"delete\",\r\n        itemId: number\r\n    }>({isOpen: false, action: \"update\", itemId: 0});\r\n    const width = useMediaQuery(theme.breakpoints.down('lg'));\r\n\r\n    const handleOpen = (action: \"update\" | \"create\" | \"delete\", itemId?: number) => {\r\n        if(itemId == undefined)\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action});\r\n        }\r\n        else\r\n        {\r\n            setDialog({...dialog, isOpen: true, action: action, itemId: itemId})\r\n        }\r\n      }\r\n\r\n    const handleClose = () => {\r\n        setDialog({...dialog, isOpen: false});\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetPursesForList()\r\n            .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    setPursesForList([...res.data]);\r\n                    setIsLoadingPurses(false);\r\n                }\r\n            });\r\n\r\n        GetAllCurrenciesAmount()\r\n            .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    setCountCurrencies(res.data);\r\n                    setIsLoadingCurrencies(false);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    useNonInitialEffect(() => {\r\n        if(!dialog.isOpen) //if we close nested dialog, we rerender whole component\r\n        {\r\n            setIsLoadingPurses(true);\r\n            GetPursesForList()\r\n                .then(res => {\r\n                if(res.response.status == 200)\r\n                {\r\n                    setPursesForList([...res.data]);\r\n                    setIsLoadingPurses(false);\r\n                }\r\n            });\r\n        }\r\n    }, [dialog])\r\n\r\n    const deletePurse = async (id: number) => {\r\n        DeletePurse(id)\r\n            .then(res => {\r\n                handleClose();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                handleClose();\r\n            });\r\n    }\r\n\r\n    if(isLoadingPurses)\r\n    {\r\n      return (\r\n        <Grid container xs={12} justify=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container justify=\"center\" style={{minHeigh}}\r\n            className=\"contentDiv\" xs={10} xl={9}>\r\n                <Grid item container xs={10}>\r\n                    <Grid item container xs={12} direction=\"row-reverse\">\r\n                        {isLoadingPurses || isLoadingCurrencies ? \r\n                        <CircularProgress color=\"secondary\" /> :\r\n                        <Button color=\"secondary\" \r\n                        disabled={pursesForList.length >= countCurrencies} \r\n                        variant=\"outlined\" onClick={() => {handleOpen(\"create\");}}>\r\n                            Create\r\n                        </Button>\r\n                        }\r\n                        <Typography>\r\n                            Count purses: {isLoadingPurses ?\r\n                            <CircularProgress color=\"secondary\" /> :\r\n                                pursesForList.length}/{isLoadingCurrencies ?\r\n                            <CircularProgress color=\"secondary\" /> :\r\n                                countCurrencies}\r\n                        </Typography>\r\n                    </Grid>\r\n                    {isLoadingPurses ? \r\n                    <Grid container xs={12} justify=\"center\">\r\n                        <CircularProgress color=\"secondary\" />\r\n                    </Grid> :\r\n                    pursesForList.length == 0 ? \r\n                    <Typography variant=\"h5\">\r\n                        There are not any purses\r\n                    </Typography> :\r\n                    pursesForList.map((purse) => {\r\n                        return(\r\n                            <Accordion key={purse.id}>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={purse.id + \"-content\"}\r\n                                id={purse.id + \"-header\"}\r\n                                >\r\n                                    <Typography className={classes.heading}>\r\n                                        {purse.currencyCode.toUpperCase()}\r\n                                    </Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <Grid container xs={12}>\r\n                                        <Grid container item xs={12}>\r\n                                            <Typography>\r\n                                                Currency code: {purse.currencyCode.toUpperCase()}<br />\r\n                                                Created at: {purse.createdAt.getDate()}/\r\n                                                {GetMonthName(purse.createdAt.getMonth())}/\r\n                                                {purse.createdAt.getFullYear()}<br />\r\n                                                Monthly plan: {(purse.bill).toFixed(2)}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid style={{padding:10}} \r\n                                            item container xs={12} \r\n                                            direction=\"row-reverse\">\r\n                                            <Button variant=\"contained\" \r\n                                                color=\"primary\" \r\n                                                onClick={() => {handleOpen(\"delete\", purse.id);}}\r\n                                                className={classes.buttons}>\r\n                                                <Typography>\r\n                                                    Delete\r\n                                                </Typography>\r\n                                            </Button>\r\n                                            <Button variant=\"contained\" \r\n                                            color=\"primary\" \r\n                                            onClick={() => {handleOpen(\"update\", purse.id)}}\r\n                                            className={classes.buttons}>\r\n                                                <Typography>\r\n                                                    Edit\r\n                                                </Typography>\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        );\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={dialog.isOpen} fullWidth={width}>\r\n                {dialog.action == \"create\" ? \r\n                <CreatePurseForm handleClose={handleClose} /> :\r\n                dialog.action == \"update\" ?\r\n                <EditPurseForm purseId={dialog.itemId} handleClose={handleClose} /> :\r\n                <React.Fragment>\r\n                    <DialogTitle>\r\n                        <Grid container justify=\"center\" xs={12}>\r\n                            <Typography variant=\"h6\">Delete purse?</Typography>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers={true}>\r\n                        <DialogContentText>\r\n                            <Typography>\r\n                                Are you sure you want to delete this purse?\r\n                            </Typography>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"secondary\"\r\n                        onClick={() => {deletePurse(dialog.itemId);}}\r\n                        >\r\n                        <Typography>\r\n                            Delete\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={handleClose}\r\n                        >\r\n                        <Typography>\r\n                            Close\r\n                        </Typography>\r\n                    </Button>\r\n                    </DialogActions>\r\n                </React.Fragment>\r\n                }\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PursesPage;"]},"metadata":{},"sourceType":"module"}